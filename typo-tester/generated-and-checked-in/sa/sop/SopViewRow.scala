/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sop

import adventureworks.production.product.ProductId
import adventureworks.sales.specialoffer.SpecialofferId
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SopViewRow(
  id: Option[Int],
  /** Points to [[sales.specialofferproduct.SpecialofferproductRow.specialofferid]] */
  specialofferid: Option[SpecialofferId],
  /** Points to [[sales.specialofferproduct.SpecialofferproductRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[sales.specialofferproduct.SpecialofferproductRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[sales.specialofferproduct.SpecialofferproductRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object SopViewRow {
  implicit val oFormat: OFormat[SopViewRow] = new OFormat[SopViewRow]{
    override def writes(o: SopViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "specialofferid" -> o.specialofferid,
        "productid" -> o.productid,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SopViewRow] = {
      JsResult.fromTry(
        Try(
          SopViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            specialofferid = json.\("specialofferid").toOption.map(_.as[SpecialofferId]),
            productid = json.\("productid").toOption.map(_.as[ProductId]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
