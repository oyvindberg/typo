/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package d

import adventureworks.humanresources.department.DepartmentId
import adventureworks.public.Name
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class DViewRow(
  id: Option[Int],
  /** Points to [[humanresources.department.DepartmentRow.departmentid]] */
  departmentid: Option[DepartmentId],
  /** Points to [[humanresources.department.DepartmentRow.name]] */
  name: Option[Name],
  /** Points to [[humanresources.department.DepartmentRow.groupname]] */
  groupname: Option[Name],
  /** Points to [[humanresources.department.DepartmentRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object DViewRow {
  implicit val oFormat: OFormat[DViewRow] = new OFormat[DViewRow]{
    override def writes(o: DViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "departmentid" -> o.departmentid,
        "name" -> o.name,
        "groupname" -> o.groupname,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[DViewRow] = {
      JsResult.fromTry(
        Try(
          DViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            departmentid = json.\("departmentid").toOption.map(_.as[DepartmentId]),
            name = json.\("name").toOption.map(_.as[Name]),
            groupname = json.\("groupname").toOption.map(_.as[Name]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
