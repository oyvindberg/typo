/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salespersonquotahistory

import adventureworks.person.businessentity.BusinessentityId
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SalespersonquotahistoryRow(
  /** Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.
      Points to [[salesperson.SalespersonRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Sales quota date. */
  quotadate: LocalDateTime,
  /** Sales quota amount. */
  salesquota: BigDecimal,
  rowguid: UUID,
  modifieddate: LocalDateTime
){
   val compositeId: SalespersonquotahistoryId = SalespersonquotahistoryId(businessentityid, quotadate)
 }

object SalespersonquotahistoryRow {
  implicit val oFormat: OFormat[SalespersonquotahistoryRow] = new OFormat[SalespersonquotahistoryRow]{
    override def writes(o: SalespersonquotahistoryRow): JsObject =
      Json.obj(
        "businessentityid" -> o.businessentityid,
        "quotadate" -> o.quotadate,
        "salesquota" -> o.salesquota,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SalespersonquotahistoryRow] = {
      JsResult.fromTry(
        Try(
          SalespersonquotahistoryRow(
            businessentityid = json.\("businessentityid").as[BusinessentityId],
            quotadate = json.\("quotadate").as[LocalDateTime],
            salesquota = json.\("salesquota").as[BigDecimal],
            rowguid = json.\("rowguid").as[UUID],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
