/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package currency

import adventureworks.public.Name
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class CurrencyRow(
  /** The ISO code for the Currency. */
  currencycode: CurrencyId,
  /** Currency name. */
  name: Name,
  modifieddate: LocalDateTime
)

object CurrencyRow {
  implicit val oFormat: OFormat[CurrencyRow] = new OFormat[CurrencyRow]{
    override def writes(o: CurrencyRow): JsObject =
      Json.obj(
        "currencycode" -> o.currencycode,
        "name" -> o.name,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[CurrencyRow] = {
      JsResult.fromTry(
        Try(
          CurrencyRow(
            currencycode = json.\("currencycode").as[CurrencyId],
            name = json.\("name").as[Name],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
