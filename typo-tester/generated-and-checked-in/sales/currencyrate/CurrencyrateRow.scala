/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package currencyrate

import adventureworks.sales.currency.CurrencyId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class CurrencyrateRow(
  /** Primary key for CurrencyRate records. */
  currencyrateid: CurrencyrateId,
  /** Date and time the exchange rate was obtained. */
  currencyratedate: LocalDateTime,
  /** Exchange rate was converted from this currency code.
      Points to [[currency.CurrencyRow.currencycode]] */
  fromcurrencycode: CurrencyId,
  /** Exchange rate was converted to this currency code.
      Points to [[currency.CurrencyRow.currencycode]] */
  tocurrencycode: CurrencyId,
  /** Average exchange rate for the day. */
  averagerate: BigDecimal,
  /** Final exchange rate for the day. */
  endofdayrate: BigDecimal,
  modifieddate: LocalDateTime
)

object CurrencyrateRow {
  implicit val oFormat: OFormat[CurrencyrateRow] = new OFormat[CurrencyrateRow]{
    override def writes(o: CurrencyrateRow): JsObject =
      Json.obj(
        "currencyrateid" -> o.currencyrateid,
        "currencyratedate" -> o.currencyratedate,
        "fromcurrencycode" -> o.fromcurrencycode,
        "tocurrencycode" -> o.tocurrencycode,
        "averagerate" -> o.averagerate,
        "endofdayrate" -> o.endofdayrate,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[CurrencyrateRow] = {
      JsResult.fromTry(
        Try(
          CurrencyrateRow(
            currencyrateid = json.\("currencyrateid").as[CurrencyrateId],
            currencyratedate = json.\("currencyratedate").as[LocalDateTime],
            fromcurrencycode = json.\("fromcurrencycode").as[CurrencyId],
            tocurrencycode = json.\("tocurrencycode").as[CurrencyId],
            averagerate = json.\("averagerate").as[BigDecimal],
            endofdayrate = json.\("endofdayrate").as[BigDecimal],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
