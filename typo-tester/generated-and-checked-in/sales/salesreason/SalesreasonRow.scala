/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesreason

import adventureworks.public.Name
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SalesreasonRow(
  /** Primary key for SalesReason records. */
  salesreasonid: SalesreasonId,
  /** Sales reason description. */
  name: Name,
  /** Category the sales reason belongs to. */
  reasontype: Name,
  modifieddate: LocalDateTime
)

object SalesreasonRow {
  implicit val oFormat: OFormat[SalesreasonRow] = new OFormat[SalesreasonRow]{
    override def writes(o: SalesreasonRow): JsObject =
      Json.obj(
        "salesreasonid" -> o.salesreasonid,
        "name" -> o.name,
        "reasontype" -> o.reasontype,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SalesreasonRow] = {
      JsResult.fromTry(
        Try(
          SalesreasonRow(
            salesreasonid = json.\("salesreasonid").as[SalesreasonId],
            name = json.\("name").as[Name],
            reasontype = json.\("reasontype").as[Name],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
