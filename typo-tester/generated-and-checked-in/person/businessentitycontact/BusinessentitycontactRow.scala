/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package businessentitycontact

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.person.contacttype.ContacttypeId
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class BusinessentitycontactRow(
  /** Primary key. Foreign key to BusinessEntity.BusinessEntityID.
      Points to [[businessentity.BusinessentityRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Primary key. Foreign key to Person.BusinessEntityID.
      Points to [[person.PersonRow.businessentityid]] */
  personid: BusinessentityId,
  /** Primary key.  Foreign key to ContactType.ContactTypeID.
      Points to [[contacttype.ContacttypeRow.contacttypeid]] */
  contacttypeid: ContacttypeId,
  rowguid: UUID,
  modifieddate: LocalDateTime
){
   val compositeId: BusinessentitycontactId = BusinessentitycontactId(businessentityid, personid, contacttypeid)
 }

object BusinessentitycontactRow {
  implicit val oFormat: OFormat[BusinessentitycontactRow] = new OFormat[BusinessentitycontactRow]{
    override def writes(o: BusinessentitycontactRow): JsObject =
      Json.obj(
        "businessentityid" -> o.businessentityid,
        "personid" -> o.personid,
        "contacttypeid" -> o.contacttypeid,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[BusinessentitycontactRow] = {
      JsResult.fromTry(
        Try(
          BusinessentitycontactRow(
            businessentityid = json.\("businessentityid").as[BusinessentityId],
            personid = json.\("personid").as[BusinessentityId],
            contacttypeid = json.\("contacttypeid").as[ContacttypeId],
            rowguid = json.\("rowguid").as[UUID],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
