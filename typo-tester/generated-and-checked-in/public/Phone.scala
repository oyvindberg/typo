/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import anorm.Column
import anorm.ParameterMetaData
import anorm.ToStatement
import play.api.libs.json.Format

/** Domain `public.Phone`
  * No constraint
  */
case class Phone(value: String) extends AnyVal
object Phone {
  implicit def ordering(implicit ev: Ordering[String]): Ordering[Phone] = Ordering.by(_.value)
  implicit val format: Format[Phone] = implicitly[Format[String]].bimap(Phone.apply, _.value)
  implicit val toStatement: ToStatement[Phone] = implicitly[ToStatement[String]].contramap(_.value)
  implicit val column: Column[Phone] = implicitly[Column[String]].map(Phone.apply)
  implicit val parameterMetadata: ParameterMetaData[Phone] = new ParameterMetaData[Phone] {
    override def sqlType: String = implicitly[ParameterMetaData[String]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[String]].jdbcType
  }

}
