/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package document

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Flag
import java.time.LocalDateTime
import java.util.UUID

sealed abstract class DocumentFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class DocumentFieldValue[T](name: String, value: T) extends DocumentFieldOrIdValue(name, value)

object DocumentFieldValue {
  case class title(override val value: String) extends DocumentFieldValue("title", value)
  case class owner(override val value: BusinessentityId) extends DocumentFieldValue("owner", value)
  case class folderflag(override val value: Flag) extends DocumentFieldValue("folderflag", value)
  case class filename(override val value: String) extends DocumentFieldValue("filename", value)
  case class fileextension(override val value: Option[String]) extends DocumentFieldValue("fileextension", value)
  case class revision(override val value: /* bpchar */ String) extends DocumentFieldValue("revision", value)
  case class changenumber(override val value: Int) extends DocumentFieldValue("changenumber", value)
  case class status(override val value: Int) extends DocumentFieldValue("status", value)
  case class documentsummary(override val value: Option[String]) extends DocumentFieldValue("documentsummary", value)
  case class document(override val value: Option[Array[Byte]]) extends DocumentFieldValue("document", value)
  case class rowguid(override val value: UUID) extends DocumentFieldValue("rowguid", value)
  case class modifieddate(override val value: LocalDateTime) extends DocumentFieldValue("modifieddate", value)
  case class documentnode(override val value: DocumentId) extends DocumentFieldOrIdValue("documentnode", value)
}
