/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productproductphoto

import adventureworks.Defaulted
import adventureworks.production.product.ProductId
import adventureworks.production.productphoto.ProductphotoId
import adventureworks.public.Flag
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** This class corresponds to a row in table `production.productproductphoto` which has not been persisted yet */
case class ProductproductphotoRowUnsaved(
  /** Product identification number. Foreign key to Product.ProductID.
      Points to [[product.ProductRow.productid]] */
  productid: ProductId,
  /** Product photo identification number. Foreign key to ProductPhoto.ProductPhotoID.
      Points to [[productphoto.ProductphotoRow.productphotoid]] */
  productphotoid: ProductphotoId,
  /** Default: false
      0 = Photo is not the principal image. 1 = Photo is the principal image. */
  primary: Defaulted[Flag] = Defaulted.UseDefault,
  /** Default: now() */
  modifieddate: Defaulted[LocalDateTime] = Defaulted.UseDefault
) {
  def toRow(primaryDefault: => Flag, modifieddateDefault: => LocalDateTime): ProductproductphotoRow =
    ProductproductphotoRow(
      productid = productid,
      productphotoid = productphotoid,
      primary = primary match {
                  case Defaulted.UseDefault => primaryDefault
                  case Defaulted.Provided(value) => value
                },
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object ProductproductphotoRowUnsaved {
  implicit val oFormat: OFormat[ProductproductphotoRowUnsaved] = new OFormat[ProductproductphotoRowUnsaved]{
    override def writes(o: ProductproductphotoRowUnsaved): JsObject =
      Json.obj(
        "productid" -> o.productid,
        "productphotoid" -> o.productphotoid,
        "primary" -> o.primary,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[ProductproductphotoRowUnsaved] = {
      JsResult.fromTry(
        Try(
          ProductproductphotoRowUnsaved(
            productid = json.\("productid").as[ProductId],
            productphotoid = json.\("productphotoid").as[ProductphotoId],
            primary = json.\("primary").as[Defaulted[Flag]],
            modifieddate = json.\("modifieddate").as[Defaulted[LocalDateTime]]
          )
        )
      )
    }
  }
}
