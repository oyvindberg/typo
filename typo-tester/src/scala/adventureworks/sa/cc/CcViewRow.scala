/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cc

import adventureworks.sales.creditcard.CreditcardId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class CcViewRow(
  id: Option[Int],
  /** Points to [[sales.creditcard.CreditcardRow.creditcardid]] */
  creditcardid: Option[CreditcardId],
  /** Points to [[sales.creditcard.CreditcardRow.cardtype]] */
  cardtype: Option[String],
  /** Points to [[sales.creditcard.CreditcardRow.cardnumber]] */
  cardnumber: Option[String],
  /** Points to [[sales.creditcard.CreditcardRow.expmonth]] */
  expmonth: Option[Int],
  /** Points to [[sales.creditcard.CreditcardRow.expyear]] */
  expyear: Option[Int],
  /** Points to [[sales.creditcard.CreditcardRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object CcViewRow {
  implicit val oFormat: OFormat[CcViewRow] = new OFormat[CcViewRow]{
    override def writes(o: CcViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "creditcardid" -> o.creditcardid,
        "cardtype" -> o.cardtype,
        "cardnumber" -> o.cardnumber,
        "expmonth" -> o.expmonth,
        "expyear" -> o.expyear,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[CcViewRow] = {
      JsResult.fromTry(
        Try(
          CcViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            creditcardid = json.\("creditcardid").toOption.map(_.as[CreditcardId]),
            cardtype = json.\("cardtype").toOption.map(_.as[String]),
            cardnumber = json.\("cardnumber").toOption.map(_.as[String]),
            expmonth = json.\("expmonth").toOption.map(_.as[Int]),
            expyear = json.\("expyear").toOption.map(_.as[Int]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
