/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cr

import adventureworks.sales.currency.CurrencyId
import adventureworks.sales.currencyrate.CurrencyrateId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class CrViewRow(
  /** Points to [[sales.currencyrate.CurrencyrateRow.currencyrateid]] */
  currencyrateid: Option[CurrencyrateId],
  /** Points to [[sales.currencyrate.CurrencyrateRow.currencyratedate]] */
  currencyratedate: Option[LocalDateTime],
  /** Points to [[sales.currencyrate.CurrencyrateRow.fromcurrencycode]] */
  fromcurrencycode: Option[CurrencyId],
  /** Points to [[sales.currencyrate.CurrencyrateRow.tocurrencycode]] */
  tocurrencycode: Option[CurrencyId],
  /** Points to [[sales.currencyrate.CurrencyrateRow.averagerate]] */
  averagerate: Option[BigDecimal],
  /** Points to [[sales.currencyrate.CurrencyrateRow.endofdayrate]] */
  endofdayrate: Option[BigDecimal],
  /** Points to [[sales.currencyrate.CurrencyrateRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object CrViewRow {
  implicit val oFormat: OFormat[CrViewRow] = new OFormat[CrViewRow]{
    override def writes(o: CrViewRow): JsObject =
      Json.obj(
        "currencyrateid" -> o.currencyrateid,
        "currencyratedate" -> o.currencyratedate,
        "fromcurrencycode" -> o.fromcurrencycode,
        "tocurrencycode" -> o.tocurrencycode,
        "averagerate" -> o.averagerate,
        "endofdayrate" -> o.endofdayrate,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[CrViewRow] = {
      JsResult.fromTry(
        Try(
          CrViewRow(
            currencyrateid = json.\("currencyrateid").toOption.map(_.as[CurrencyrateId]),
            currencyratedate = json.\("currencyratedate").toOption.map(_.as[LocalDateTime]),
            fromcurrencycode = json.\("fromcurrencycode").toOption.map(_.as[CurrencyId]),
            tocurrencycode = json.\("tocurrencycode").toOption.map(_.as[CurrencyId]),
            averagerate = json.\("averagerate").toOption.map(_.as[BigDecimal]),
            endofdayrate = json.\("endofdayrate").toOption.map(_.as[BigDecimal]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
