/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package pcc

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.creditcard.CreditcardId
import anorm.NamedParameter
import anorm.ParameterValue
import anorm.RowParser
import anorm.SqlStringInterpolation
import anorm.Success
import java.sql.Connection
import java.time.LocalDateTime

object PccViewRepoImpl extends PccViewRepo {
  override def selectAll(implicit c: Connection): List[PccViewRow] = {
    SQL"""select "id", businessentityid, creditcardid, modifieddate
          from sa.pcc
       """.as(rowParser.*)
  }
  override def selectByFieldValues(fieldValues: List[PccViewFieldOrIdValue[_]])(implicit c: Connection): List[PccViewRow] = {
    fieldValues match {
      case Nil => selectAll
      case nonEmpty =>
        val namedParams = nonEmpty.map{
          case PccViewFieldValue.id(value) => NamedParameter("id", ParameterValue.from(value))
          case PccViewFieldValue.businessentityid(value) => NamedParameter("businessentityid", ParameterValue.from(value))
          case PccViewFieldValue.creditcardid(value) => NamedParameter("creditcardid", ParameterValue.from(value))
          case PccViewFieldValue.modifieddate(value) => NamedParameter("modifieddate", ParameterValue.from(value))
        }
        val quote = '"'.toString
        val q = s"""select "id", businessentityid, creditcardid, modifieddate
                    from sa.pcc
                    where ${namedParams.map(x => s"$quote${x.name}$quote = {${x.name}}").mkString(" AND ")}
                 """
        // this line is here to include an extension method which is only needed for scala 3. no import is emitted for `SQL` to avoid warning for scala 2
        import anorm._
        SQL(q)
          .on(namedParams: _*)
          .as(rowParser.*)
    }
  
  }
  val rowParser: RowParser[PccViewRow] =
    RowParser[PccViewRow] { row =>
      Success(
        PccViewRow(
          id = row[Option[Int]]("id"),
          businessentityid = row[Option[BusinessentityId]]("businessentityid"),
          creditcardid = row[Option[CreditcardId]]("creditcardid"),
          modifieddate = row[Option[LocalDateTime]]("modifieddate")
        )
      )
    }
}
