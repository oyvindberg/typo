/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package poh

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId
import adventureworks.purchasing.shipmethod.ShipmethodId
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PohViewRow(
  id: Option[Int],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.purchaseorderid]] */
  purchaseorderid: Option[PurchaseorderheaderId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.revisionnumber]] */
  revisionnumber: Option[Int],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.status]] */
  status: Option[Int],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.employeeid]] */
  employeeid: Option[BusinessentityId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.vendorid]] */
  vendorid: Option[BusinessentityId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.shipmethodid]] */
  shipmethodid: Option[ShipmethodId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.orderdate]] */
  orderdate: Option[LocalDateTime],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.shipdate]] */
  shipdate: Option[LocalDateTime],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.subtotal]] */
  subtotal: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.taxamt]] */
  taxamt: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.freight]] */
  freight: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object PohViewRow {
  implicit val oFormat: OFormat[PohViewRow] = new OFormat[PohViewRow]{
    override def writes(o: PohViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "purchaseorderid" -> o.purchaseorderid,
        "revisionnumber" -> o.revisionnumber,
        "status" -> o.status,
        "employeeid" -> o.employeeid,
        "vendorid" -> o.vendorid,
        "shipmethodid" -> o.shipmethodid,
        "orderdate" -> o.orderdate,
        "shipdate" -> o.shipdate,
        "subtotal" -> o.subtotal,
        "taxamt" -> o.taxamt,
        "freight" -> o.freight,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PohViewRow] = {
      JsResult.fromTry(
        Try(
          PohViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            purchaseorderid = json.\("purchaseorderid").toOption.map(_.as[PurchaseorderheaderId]),
            revisionnumber = json.\("revisionnumber").toOption.map(_.as[Int]),
            status = json.\("status").toOption.map(_.as[Int]),
            employeeid = json.\("employeeid").toOption.map(_.as[BusinessentityId]),
            vendorid = json.\("vendorid").toOption.map(_.as[BusinessentityId]),
            shipmethodid = json.\("shipmethodid").toOption.map(_.as[ShipmethodId]),
            orderdate = json.\("orderdate").toOption.map(_.as[LocalDateTime]),
            shipdate = json.\("shipdate").toOption.map(_.as[LocalDateTime]),
            subtotal = json.\("subtotal").toOption.map(_.as[BigDecimal]),
            taxamt = json.\("taxamt").toOption.map(_.as[BigDecimal]),
            freight = json.\("freight").toOption.map(_.as[BigDecimal]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
