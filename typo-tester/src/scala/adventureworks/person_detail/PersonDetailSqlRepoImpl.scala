/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person_detail

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import anorm.RowParser
import anorm.SqlStringInterpolation
import anorm.Success
import java.sql.Connection

object PersonDetailSqlRepoImpl extends PersonDetailSqlRepo {
  override def apply(businessentityid: /* nullability unknown */ Option[Int])(implicit c: Connection): List[PersonDetailSqlRow] = {
    val sql =
      SQL"""SELECT s.businessentityid,
                   p.title,
                   p.firstname,
                   p.middlename,
                   p.lastname,
                   e.jobtitle,
                   a.addressline1,
                   a.city,
                   a.postalcode
            FROM sales.salesperson s
                     JOIN humanresources.employee e ON e.businessentityid = s.businessentityid
                     JOIN person.person p ON p.businessentityid = s.businessentityid
                     JOIN person.businessentityaddress bea ON bea.businessentityid = s.businessentityid
                     JOIN person.address a ON a.addressid = bea.addressid
            where s.businessentityid = $businessentityid
         """
    sql.as(rowParser.*)
  
  }
  val rowParser: RowParser[PersonDetailSqlRow] =
    RowParser[PersonDetailSqlRow] { row =>
      Success(
        PersonDetailSqlRow(
          businessentityid = row[BusinessentityId]("businessentityid"),
          title = row[Option[String]]("title"),
          firstname = row[Name]("firstname"),
          middlename = row[Option[Name]]("middlename"),
          lastname = row[Name]("lastname"),
          jobtitle = row[String]("jobtitle"),
          addressline1 = row[String]("addressline1"),
          city = row[String]("city"),
          postalcode = row[String]("postalcode")
        )
      )
    }
}
