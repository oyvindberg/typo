/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductmodelcatalogdescription

import adventureworks.production.productmodel.ProductmodelId
import adventureworks.public.Name
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class VproductmodelcatalogdescriptionViewRow(
  /** Points to [[productmodel.ProductmodelRow.productmodelid]] */
  productmodelid: Option[ProductmodelId],
  /** Points to [[productmodel.ProductmodelRow.name]] */
  name: Option[Name],
  Summary: Option[String],
  manufacturer: Option[String],
  copyright: Option[String],
  producturl: Option[String],
  warrantyperiod: Option[String],
  warrantydescription: Option[String],
  noofyears: Option[String],
  maintenancedescription: Option[String],
  wheel: Option[String],
  saddle: Option[String],
  pedal: Option[String],
  bikeframe: Option[String],
  crankset: Option[String],
  pictureangle: Option[String],
  picturesize: Option[String],
  productphotoid: Option[String],
  material: Option[String],
  color: Option[String],
  productline: Option[String],
  style: Option[String],
  riderexperience: Option[String],
  /** Points to [[productmodel.ProductmodelRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[productmodel.ProductmodelRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object VproductmodelcatalogdescriptionViewRow {
  implicit val oFormat: OFormat[VproductmodelcatalogdescriptionViewRow] = new OFormat[VproductmodelcatalogdescriptionViewRow]{
    override def writes(o: VproductmodelcatalogdescriptionViewRow): JsObject =
      Json.obj(
        "productmodelid" -> o.productmodelid,
        "name" -> o.name,
        "Summary" -> o.Summary,
        "manufacturer" -> o.manufacturer,
        "copyright" -> o.copyright,
        "producturl" -> o.producturl,
        "warrantyperiod" -> o.warrantyperiod,
        "warrantydescription" -> o.warrantydescription,
        "noofyears" -> o.noofyears,
        "maintenancedescription" -> o.maintenancedescription,
        "wheel" -> o.wheel,
        "saddle" -> o.saddle,
        "pedal" -> o.pedal,
        "bikeframe" -> o.bikeframe,
        "crankset" -> o.crankset,
        "pictureangle" -> o.pictureangle,
        "picturesize" -> o.picturesize,
        "productphotoid" -> o.productphotoid,
        "material" -> o.material,
        "color" -> o.color,
        "productline" -> o.productline,
        "style" -> o.style,
        "riderexperience" -> o.riderexperience,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[VproductmodelcatalogdescriptionViewRow] = {
      JsResult.fromTry(
        Try(
          VproductmodelcatalogdescriptionViewRow(
            productmodelid = json.\("productmodelid").toOption.map(_.as[ProductmodelId]),
            name = json.\("name").toOption.map(_.as[Name]),
            Summary = json.\("Summary").toOption.map(_.as[String]),
            manufacturer = json.\("manufacturer").toOption.map(_.as[String]),
            copyright = json.\("copyright").toOption.map(_.as[String]),
            producturl = json.\("producturl").toOption.map(_.as[String]),
            warrantyperiod = json.\("warrantyperiod").toOption.map(_.as[String]),
            warrantydescription = json.\("warrantydescription").toOption.map(_.as[String]),
            noofyears = json.\("noofyears").toOption.map(_.as[String]),
            maintenancedescription = json.\("maintenancedescription").toOption.map(_.as[String]),
            wheel = json.\("wheel").toOption.map(_.as[String]),
            saddle = json.\("saddle").toOption.map(_.as[String]),
            pedal = json.\("pedal").toOption.map(_.as[String]),
            bikeframe = json.\("bikeframe").toOption.map(_.as[String]),
            crankset = json.\("crankset").toOption.map(_.as[String]),
            pictureangle = json.\("pictureangle").toOption.map(_.as[String]),
            picturesize = json.\("picturesize").toOption.map(_.as[String]),
            productphotoid = json.\("productphotoid").toOption.map(_.as[String]),
            material = json.\("material").toOption.map(_.as[String]),
            color = json.\("color").toOption.map(_.as[String]),
            productline = json.\("productline").toOption.map(_.as[String]),
            style = json.\("style").toOption.map(_.as[String]),
            riderexperience = json.\("riderexperience").toOption.map(_.as[String]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
