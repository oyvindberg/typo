/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_subscription_rel

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlFragment.Segment
import zio.jdbc.SqlFragment.Setter
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.jdbc.sqlInterpolator
import zio.stream.ZStream

object PgSubscriptionRelRepoImpl extends PgSubscriptionRelRepo {
  override def delete(compositeId: PgSubscriptionRelId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_subscription_rel where "srrelid" = ${Segment.paramSegment(compositeId.srrelid)(Setter.longSetter)} AND "srsubid" = ${Segment.paramSegment(compositeId.srsubid)(Setter.longSetter)}""".delete.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgSubscriptionRelFields, PgSubscriptionRelRow] = {
    DeleteBuilder("pg_catalog.pg_subscription_rel", PgSubscriptionRelFields)
  }
  override def insert(unsaved: PgSubscriptionRelRow): ZIO[ZConnection, Throwable, PgSubscriptionRelRow] = {
    sql"""insert into pg_catalog.pg_subscription_rel("srsubid", "srrelid", "srsubstate", "srsublsn")
          values (${Segment.paramSegment(unsaved.srsubid)(Setter.longSetter)}::oid, ${Segment.paramSegment(unsaved.srrelid)(Setter.longSetter)}::oid, ${Segment.paramSegment(unsaved.srsubstate)(Setter.stringSetter)}::char, ${Segment.paramSegment(unsaved.srsublsn)(Setter.optionParamSetter(Setter.longSetter))}::pg_lsn)
          returning "srsubid", "srrelid", "srsubstate", "srsublsn"
       """.insertReturning(PgSubscriptionRelRow.jdbcDecoder).map(_.updatedKeys.head)
  }
  override def select: SelectBuilder[PgSubscriptionRelFields, PgSubscriptionRelRow] = {
    SelectBuilderSql("pg_catalog.pg_subscription_rel", PgSubscriptionRelFields, PgSubscriptionRelRow.jdbcDecoder)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgSubscriptionRelRow] = {
    sql"""select "srsubid", "srrelid", "srsubstate", "srsublsn" from pg_catalog.pg_subscription_rel""".query(PgSubscriptionRelRow.jdbcDecoder).selectStream
  }
  override def selectById(compositeId: PgSubscriptionRelId): ZIO[ZConnection, Throwable, Option[PgSubscriptionRelRow]] = {
    sql"""select "srsubid", "srrelid", "srsubstate", "srsublsn" from pg_catalog.pg_subscription_rel where "srrelid" = ${Segment.paramSegment(compositeId.srrelid)(Setter.longSetter)} AND "srsubid" = ${Segment.paramSegment(compositeId.srsubid)(Setter.longSetter)}""".query(PgSubscriptionRelRow.jdbcDecoder).selectOne
  }
  override def update(row: PgSubscriptionRelRow): ZIO[ZConnection, Throwable, Boolean] = {
    val compositeId = row.compositeId
    sql"""update pg_catalog.pg_subscription_rel
          set "srsubstate" = ${Segment.paramSegment(row.srsubstate)(Setter.stringSetter)}::char,
              "srsublsn" = ${Segment.paramSegment(row.srsublsn)(Setter.optionParamSetter(Setter.longSetter))}::pg_lsn
          where "srrelid" = ${Segment.paramSegment(compositeId.srrelid)(Setter.longSetter)} AND "srsubid" = ${Segment.paramSegment(compositeId.srsubid)(Setter.longSetter)}""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgSubscriptionRelFields, PgSubscriptionRelRow] = {
    UpdateBuilder("pg_catalog.pg_subscription_rel", PgSubscriptionRelFields, PgSubscriptionRelRow.jdbcDecoder)
  }
  override def upsert(unsaved: PgSubscriptionRelRow): ZIO[ZConnection, Throwable, UpdateResult[PgSubscriptionRelRow]] = {
    sql"""insert into pg_catalog.pg_subscription_rel("srsubid", "srrelid", "srsubstate", "srsublsn")
          values (
            ${Segment.paramSegment(unsaved.srsubid)(Setter.longSetter)}::oid,
            ${Segment.paramSegment(unsaved.srrelid)(Setter.longSetter)}::oid,
            ${Segment.paramSegment(unsaved.srsubstate)(Setter.stringSetter)}::char,
            ${Segment.paramSegment(unsaved.srsublsn)(Setter.optionParamSetter(Setter.longSetter))}::pg_lsn
          )
          on conflict ("srrelid", "srsubid")
          do update set
            "srsubstate" = EXCLUDED."srsubstate",
            "srsublsn" = EXCLUDED."srsublsn"
          returning "srsubid", "srrelid", "srsubstate", "srsublsn"""".insertReturning(PgSubscriptionRelRow.jdbcDecoder)
  }
}
