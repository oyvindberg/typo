/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_user_indexes

import adventureworks.pg_catalog.pg_class.PgClassId
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgStatUserIndexesViewStructure[Row](val prefix: Option[String], val extract: Row => PgStatUserIndexesViewRow, val merge: (Row, PgStatUserIndexesViewRow) => Row)
  extends Relation[PgStatUserIndexesViewFields, PgStatUserIndexesViewRow, Row]
    with PgStatUserIndexesViewFields[Row] { outer =>

  override val relid = new OptField[PgClassId, Row](prefix, "relid", None, None)(x => extract(x).relid, (row, value) => merge(row, extract(row).copy(relid = value)))
  override val indexrelid = new OptField[PgClassId, Row](prefix, "indexrelid", None, None)(x => extract(x).indexrelid, (row, value) => merge(row, extract(row).copy(indexrelid = value)))
  override val schemaname = new OptField[String, Row](prefix, "schemaname", None, None)(x => extract(x).schemaname, (row, value) => merge(row, extract(row).copy(schemaname = value)))
  override val relname = new OptField[String, Row](prefix, "relname", None, None)(x => extract(x).relname, (row, value) => merge(row, extract(row).copy(relname = value)))
  override val indexrelname = new OptField[String, Row](prefix, "indexrelname", None, None)(x => extract(x).indexrelname, (row, value) => merge(row, extract(row).copy(indexrelname = value)))
  override val idxScan = new OptField[/* nullability unknown */ Long, Row](prefix, "idx_scan", None, None)(x => extract(x).idxScan, (row, value) => merge(row, extract(row).copy(idxScan = value)))
  override val idxTupRead = new OptField[/* nullability unknown */ Long, Row](prefix, "idx_tup_read", None, None)(x => extract(x).idxTupRead, (row, value) => merge(row, extract(row).copy(idxTupRead = value)))
  override val idxTupFetch = new OptField[/* nullability unknown */ Long, Row](prefix, "idx_tup_fetch", None, None)(x => extract(x).idxTupFetch, (row, value) => merge(row, extract(row).copy(idxTupFetch = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](relid, indexrelid, schemaname, relname, indexrelname, idxScan, idxTupRead, idxTupFetch)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgStatUserIndexesViewRow, merge: (NewRow, PgStatUserIndexesViewRow) => NewRow): PgStatUserIndexesViewStructure[NewRow] =
    new PgStatUserIndexesViewStructure(prefix, extract, merge)
}
