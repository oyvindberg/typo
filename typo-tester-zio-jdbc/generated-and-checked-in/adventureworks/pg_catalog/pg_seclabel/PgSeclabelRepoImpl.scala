/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_seclabel

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlInterpolator
import zio.jdbc.ZConnection
import zio.stream.ZStream

object PgSeclabelRepoImpl extends PgSeclabelRepo {
  override def delete(compositeId: PgSeclabelId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_seclabel where "objoid" = ??? AND "classoid" = ??? AND "objsubid" = ??? AND "provider" = ???""".update.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgSeclabelFields, PgSeclabelRow] = {
    DeleteBuilder("pg_catalog.pg_seclabel", PgSeclabelFields)
  }
  override def insert(unsaved: PgSeclabelRow): ZIO[ZConnection, Throwable, PgSeclabelRow] = {
    sql"""insert into pg_catalog.pg_seclabel("objoid", "classoid", "objsubid", "provider", "label")
          values (???::oid, ???::oid, ???::int4, ???, ???)
          returning "objoid", "classoid", "objsubid", "provider", "label"
       """.query(???).update.map(_ > 0)
  }
  override def select: SelectBuilder[PgSeclabelFields, PgSeclabelRow] = {
    SelectBuilderSql("pg_catalog.pg_seclabel", PgSeclabelFields, PgSeclabelRow.read)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgSeclabelRow] = {
    sql"""select "objoid", "classoid", "objsubid", "provider", "label" from pg_catalog.pg_seclabel""".query[PgSeclabelRow].selectStream
  }
  override def selectById(compositeId: PgSeclabelId): ZIO[ZConnection, Throwable, Option[PgSeclabelRow]] = {
    sql"""select "objoid", "classoid", "objsubid", "provider", "label" from pg_catalog.pg_seclabel where "objoid" = ??? AND "classoid" = ??? AND "objsubid" = ??? AND "provider" = ???""".query[PgSeclabelRow].selectOne
  }
  override def update(row: PgSeclabelRow): ZIO[ZConnection, Throwable, Boolean] = {
    val compositeId = row.compositeId
    sql"""update pg_catalog.pg_seclabel
          set "label" = ???
          where "objoid" = ??? AND "classoid" = ??? AND "objsubid" = ??? AND "provider" = ???""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgSeclabelFields, PgSeclabelRow] = {
    UpdateBuilder("pg_catalog.pg_seclabel", PgSeclabelFields, PgSeclabelRow.read)
  }
  override def upsert(unsaved: PgSeclabelRow): ZIO[ZConnection, Throwable, PgSeclabelRow] = {
    sql"""insert into pg_catalog.pg_seclabel("objoid", "classoid", "objsubid", "provider", "label")
          values (
            ???::oid,
            ???::oid,
            ???::int4,
            ???,
            ???
          )
          on conflict ("objoid", "classoid", "objsubid", "provider")
          do update set
            "label" = EXCLUDED."label"
          returning "objoid", "classoid", "objsubid", "provider", "label"
       """.query(???).unique
  }
}
