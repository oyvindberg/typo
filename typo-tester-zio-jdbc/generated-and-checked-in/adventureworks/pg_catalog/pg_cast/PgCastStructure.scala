/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_cast

import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class PgCastStructure[Row](val prefix: Option[String], val extract: Row => PgCastRow, val merge: (Row, PgCastRow) => Row)
  extends Relation[PgCastFields, PgCastRow, Row]
    with PgCastFields[Row] { outer =>

  override val oid = new IdField[PgCastId, Row](prefix, "oid", None, Some("oid"))(x => extract(x).oid, (row, value) => merge(row, extract(row).copy(oid = value)))
  override val castsource = new Field[/* oid */ Long, Row](prefix, "castsource", None, Some("oid"))(x => extract(x).castsource, (row, value) => merge(row, extract(row).copy(castsource = value)))
  override val casttarget = new Field[/* oid */ Long, Row](prefix, "casttarget", None, Some("oid"))(x => extract(x).casttarget, (row, value) => merge(row, extract(row).copy(casttarget = value)))
  override val castfunc = new Field[/* oid */ Long, Row](prefix, "castfunc", None, Some("oid"))(x => extract(x).castfunc, (row, value) => merge(row, extract(row).copy(castfunc = value)))
  override val castcontext = new Field[String, Row](prefix, "castcontext", None, Some("char"))(x => extract(x).castcontext, (row, value) => merge(row, extract(row).copy(castcontext = value)))
  override val castmethod = new Field[String, Row](prefix, "castmethod", None, Some("char"))(x => extract(x).castmethod, (row, value) => merge(row, extract(row).copy(castmethod = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](oid, castsource, casttarget, castfunc, castcontext, castmethod)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgCastRow, merge: (NewRow, PgCastRow) => NewRow): PgCastStructure[NewRow] =
    new PgCastStructure(prefix, extract, merge)
}
