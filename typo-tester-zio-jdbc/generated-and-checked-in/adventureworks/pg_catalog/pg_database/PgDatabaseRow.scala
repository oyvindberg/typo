/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_database

import adventureworks.customtypes.TypoAclItem
import adventureworks.customtypes.TypoXid
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgDatabaseRow(
  oid: PgDatabaseId,
  datname: String,
  datdba: /* oid */ Long,
  encoding: Int,
  datcollate: String,
  datctype: String,
  datistemplate: Boolean,
  datallowconn: Boolean,
  datconnlimit: Int,
  datlastsysoid: /* oid */ Long,
  datfrozenxid: TypoXid,
  datminmxid: TypoXid,
  dattablespace: /* oid */ Long,
  datacl: Option[Array[TypoAclItem]]
)

object PgDatabaseRow {
  implicit lazy val decoder: JsonDecoder[PgDatabaseRow] = DeriveJsonDecoder.gen[PgDatabaseRow]
  implicit lazy val decoder: JsonDecoder[PgDatabaseRow] = DeriveJsonEncoder.gen[PgDatabaseRow]
}
