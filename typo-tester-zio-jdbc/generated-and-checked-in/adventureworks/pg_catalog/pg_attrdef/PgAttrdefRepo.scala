/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_attrdef

import adventureworks.customtypes.TypoShort
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgAttrdefRepo {
  def delete(oid: PgAttrdefId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgAttrdefFields, PgAttrdefRow]
  def insert(unsaved: PgAttrdefRow): ZIO[ZConnection, Throwable, PgAttrdefRow]
  def select: SelectBuilder[PgAttrdefFields, PgAttrdefRow]
  def selectAll: ZStream[ZConnection, Throwable, PgAttrdefRow]
  def selectById(oid: PgAttrdefId): ZIO[ZConnection, Throwable, Option[PgAttrdefRow]]
  def selectByIds(oids: Array[PgAttrdefId]): ZStream[ZConnection, Throwable, PgAttrdefRow]
  def selectByUnique(adrelid: /* oid */ Long, adnum: TypoShort): ZIO[ZConnection, Throwable, Option[PgAttrdefRow]]
  def update(row: PgAttrdefRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgAttrdefFields, PgAttrdefRow]
  def upsert(unsaved: PgAttrdefRow): ZIO[ZConnection, Throwable, UpdateResult[PgAttrdefRow]]
}
