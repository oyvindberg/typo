/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_attrdef

import adventureworks.customtypes.TypoPgNodeTree
import adventureworks.customtypes.TypoShort
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlFragment.Segment
import zio.jdbc.SqlFragment.Setter
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.jdbc.sqlInterpolator
import zio.stream.ZStream

object PgAttrdefRepoImpl extends PgAttrdefRepo {
  override def delete(oid: PgAttrdefId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_attrdef where "oid" = ${Segment.paramSegment(oid)(PgAttrdefId.setter)}""".delete.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgAttrdefFields, PgAttrdefRow] = {
    DeleteBuilder("pg_catalog.pg_attrdef", PgAttrdefFields)
  }
  override def insert(unsaved: PgAttrdefRow): ZIO[ZConnection, Throwable, PgAttrdefRow] = {
    sql"""insert into pg_catalog.pg_attrdef("oid", "adrelid", "adnum", "adbin")
          values (${Segment.paramSegment(unsaved.oid)(PgAttrdefId.setter)}::oid, ${Segment.paramSegment(unsaved.adrelid)(Setter.longSetter)}::oid, ${Segment.paramSegment(unsaved.adnum)(TypoShort.setter)}::int2, ${Segment.paramSegment(unsaved.adbin)(TypoPgNodeTree.setter)}::pg_node_tree)
          returning "oid", "adrelid", "adnum", "adbin"
       """.insertReturning(PgAttrdefRow.jdbcDecoder).map(_.updatedKeys.head)
  }
  override def select: SelectBuilder[PgAttrdefFields, PgAttrdefRow] = {
    SelectBuilderSql("pg_catalog.pg_attrdef", PgAttrdefFields, PgAttrdefRow.jdbcDecoder)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgAttrdefRow] = {
    sql"""select "oid", "adrelid", "adnum", "adbin" from pg_catalog.pg_attrdef""".query(PgAttrdefRow.jdbcDecoder).selectStream
  }
  override def selectById(oid: PgAttrdefId): ZIO[ZConnection, Throwable, Option[PgAttrdefRow]] = {
    sql"""select "oid", "adrelid", "adnum", "adbin" from pg_catalog.pg_attrdef where "oid" = ${Segment.paramSegment(oid)(PgAttrdefId.setter)}""".query(PgAttrdefRow.jdbcDecoder).selectOne
  }
  override def selectByIds(oids: Array[PgAttrdefId]): ZStream[ZConnection, Throwable, PgAttrdefRow] = {
    sql"""select "oid", "adrelid", "adnum", "adbin" from pg_catalog.pg_attrdef where "oid" = ANY(${Segment.paramSegment(oids)(PgAttrdefId.arraySetter)})""".query(PgAttrdefRow.jdbcDecoder).selectStream
  }
  override def selectByUnique(adrelid: /* oid */ Long, adnum: TypoShort): ZIO[ZConnection, Throwable, Option[PgAttrdefRow]] = {
    sql"""select "adrelid", "adnum"
          from pg_catalog.pg_attrdef
          where "adrelid" = ${Segment.paramSegment(adrelid)(Setter.longSetter)} AND "adnum" = ${Segment.paramSegment(adnum)(TypoShort.setter)}
       """.query(PgAttrdefRow.jdbcDecoder).selectOne
  }
  override def update(row: PgAttrdefRow): ZIO[ZConnection, Throwable, Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_attrdef
          set "adrelid" = ${Segment.paramSegment(row.adrelid)(Setter.longSetter)}::oid,
              "adnum" = ${Segment.paramSegment(row.adnum)(TypoShort.setter)}::int2,
              "adbin" = ${Segment.paramSegment(row.adbin)(TypoPgNodeTree.setter)}::pg_node_tree
          where "oid" = ${Segment.paramSegment(oid)(PgAttrdefId.setter)}""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgAttrdefFields, PgAttrdefRow] = {
    UpdateBuilder("pg_catalog.pg_attrdef", PgAttrdefFields, PgAttrdefRow.jdbcDecoder)
  }
  override def upsert(unsaved: PgAttrdefRow): ZIO[ZConnection, Throwable, UpdateResult[PgAttrdefRow]] = {
    sql"""insert into pg_catalog.pg_attrdef("oid", "adrelid", "adnum", "adbin")
          values (
            ${Segment.paramSegment(unsaved.oid)(PgAttrdefId.setter)}::oid,
            ${Segment.paramSegment(unsaved.adrelid)(Setter.longSetter)}::oid,
            ${Segment.paramSegment(unsaved.adnum)(TypoShort.setter)}::int2,
            ${Segment.paramSegment(unsaved.adbin)(TypoPgNodeTree.setter)}::pg_node_tree
          )
          on conflict ("oid")
          do update set
            "adrelid" = EXCLUDED."adrelid",
            "adnum" = EXCLUDED."adnum",
            "adbin" = EXCLUDED."adbin"
          returning "oid", "adrelid", "adnum", "adbin"""".insertReturning(PgAttrdefRow.jdbcDecoder)
  }
}
