/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_constraint

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgConstraintRepo {
  def delete(oid: PgConstraintId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgConstraintFields, PgConstraintRow]
  def insert(unsaved: PgConstraintRow): ZIO[ZConnection, Throwable, PgConstraintRow]
  def select: SelectBuilder[PgConstraintFields, PgConstraintRow]
  def selectAll: ZStream[ZConnection, Throwable, PgConstraintRow]
  def selectById(oid: PgConstraintId): ZIO[ZConnection, Throwable, Option[PgConstraintRow]]
  def selectByIds(oids: Array[PgConstraintId]): ZStream[ZConnection, Throwable, PgConstraintRow]
  def selectByUnique(conrelid: /* oid */ Long, contypid: /* oid */ Long, conname: String): ZIO[ZConnection, Throwable, Option[PgConstraintRow]]
  def update(row: PgConstraintRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgConstraintFields, PgConstraintRow]
  def upsert(unsaved: PgConstraintRow): ZIO[ZConnection, Throwable, UpdateResult[PgConstraintRow]]
}
