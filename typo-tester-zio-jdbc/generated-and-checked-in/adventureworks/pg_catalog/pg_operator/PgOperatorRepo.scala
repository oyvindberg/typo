/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_operator

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgOperatorRepo {
  def delete(oid: PgOperatorId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgOperatorFields, PgOperatorRow]
  def insert(unsaved: PgOperatorRow): ZIO[ZConnection, Throwable, PgOperatorRow]
  def select: SelectBuilder[PgOperatorFields, PgOperatorRow]
  def selectAll: ZStream[ZConnection, Throwable, PgOperatorRow]
  def selectById(oid: PgOperatorId): ZIO[ZConnection, Throwable, Option[PgOperatorRow]]
  def selectByIds(oids: Array[PgOperatorId]): ZStream[ZConnection, Throwable, PgOperatorRow]
  def selectByUnique(oprname: String, oprleft: /* oid */ Long, oprright: /* oid */ Long, oprnamespace: /* oid */ Long): ZIO[ZConnection, Throwable, Option[PgOperatorRow]]
  def update(row: PgOperatorRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgOperatorFields, PgOperatorRow]
  def upsert(unsaved: PgOperatorRow): ZIO[ZConnection, Throwable, UpdateResult[PgOperatorRow]]
}
