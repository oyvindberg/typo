/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_subscription

import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgSubscriptionStructure[Row](val prefix: Option[String], val extract: Row => PgSubscriptionRow, val merge: (Row, PgSubscriptionRow) => Row)
  extends Relation[PgSubscriptionFields, PgSubscriptionRow, Row]
    with PgSubscriptionFields[Row] { outer =>

  override val oid = new IdField[PgSubscriptionId, Row](prefix, "oid", None, Some("oid"))(x => extract(x).oid, (row, value) => merge(row, extract(row).copy(oid = value)))
  override val subdbid = new Field[/* oid */ Long, Row](prefix, "subdbid", None, Some("oid"))(x => extract(x).subdbid, (row, value) => merge(row, extract(row).copy(subdbid = value)))
  override val subname = new Field[String, Row](prefix, "subname", None, Some("name"))(x => extract(x).subname, (row, value) => merge(row, extract(row).copy(subname = value)))
  override val subowner = new Field[/* oid */ Long, Row](prefix, "subowner", None, Some("oid"))(x => extract(x).subowner, (row, value) => merge(row, extract(row).copy(subowner = value)))
  override val subenabled = new Field[Boolean, Row](prefix, "subenabled", None, None)(x => extract(x).subenabled, (row, value) => merge(row, extract(row).copy(subenabled = value)))
  override val subbinary = new Field[Boolean, Row](prefix, "subbinary", None, None)(x => extract(x).subbinary, (row, value) => merge(row, extract(row).copy(subbinary = value)))
  override val substream = new Field[Boolean, Row](prefix, "substream", None, None)(x => extract(x).substream, (row, value) => merge(row, extract(row).copy(substream = value)))
  override val subconninfo = new Field[String, Row](prefix, "subconninfo", None, None)(x => extract(x).subconninfo, (row, value) => merge(row, extract(row).copy(subconninfo = value)))
  override val subslotname = new OptField[String, Row](prefix, "subslotname", None, Some("name"))(x => extract(x).subslotname, (row, value) => merge(row, extract(row).copy(subslotname = value)))
  override val subsynccommit = new Field[String, Row](prefix, "subsynccommit", None, None)(x => extract(x).subsynccommit, (row, value) => merge(row, extract(row).copy(subsynccommit = value)))
  override val subpublications = new Field[Array[String], Row](prefix, "subpublications", None, Some("_text"))(x => extract(x).subpublications, (row, value) => merge(row, extract(row).copy(subpublications = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](oid, subdbid, subname, subowner, subenabled, subbinary, substream, subconninfo, subslotname, subsynccommit, subpublications)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgSubscriptionRow, merge: (NewRow, PgSubscriptionRow) => NewRow): PgSubscriptionStructure[NewRow] =
    new PgSubscriptionStructure(prefix, extract, merge)
}
