/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_subscription

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlInterpolator
import zio.jdbc.ZConnection
import zio.stream.ZStream

object PgSubscriptionRepoImpl extends PgSubscriptionRepo {
  override def delete(oid: PgSubscriptionId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_subscription where "oid" = ???""".update.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgSubscriptionFields, PgSubscriptionRow] = {
    DeleteBuilder("pg_catalog.pg_subscription", PgSubscriptionFields)
  }
  override def insert(unsaved: PgSubscriptionRow): ZIO[ZConnection, Throwable, PgSubscriptionRow] = {
    sql"""insert into pg_catalog.pg_subscription("oid", "subdbid", "subname", "subowner", "subenabled", "subbinary", "substream", "subconninfo", "subslotname", "subsynccommit", "subpublications")
          values (???::oid, ???::oid, ???::name, ???::oid, ???, ???, ???, ???, ???::name, ???, ???::_text)
          returning "oid", "subdbid", "subname", "subowner", "subenabled", "subbinary", "substream", "subconninfo", "subslotname", "subsynccommit", "subpublications"
       """.query(???).update.map(_ > 0)
  }
  override def select: SelectBuilder[PgSubscriptionFields, PgSubscriptionRow] = {
    SelectBuilderSql("pg_catalog.pg_subscription", PgSubscriptionFields, PgSubscriptionRow.read)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgSubscriptionRow] = {
    sql"""select "oid", "subdbid", "subname", "subowner", "subenabled", "subbinary", "substream", "subconninfo", "subslotname", "subsynccommit", "subpublications" from pg_catalog.pg_subscription""".query[PgSubscriptionRow].selectStream
  }
  override def selectById(oid: PgSubscriptionId): ZIO[ZConnection, Throwable, Option[PgSubscriptionRow]] = {
    sql"""select "oid", "subdbid", "subname", "subowner", "subenabled", "subbinary", "substream", "subconninfo", "subslotname", "subsynccommit", "subpublications" from pg_catalog.pg_subscription where "oid" = ???""".query[PgSubscriptionRow].selectOne
  }
  override def selectByIds(oids: Array[PgSubscriptionId]): ZStream[ZConnection, Throwable, PgSubscriptionRow] = {
    sql"""select "oid", "subdbid", "subname", "subowner", "subenabled", "subbinary", "substream", "subconninfo", "subslotname", "subsynccommit", "subpublications" from pg_catalog.pg_subscription where "oid" = ANY(${oids})""".query[PgSubscriptionRow].selectStream
  }
  override def selectByUnique(subdbid: /* oid */ Long, subname: String): ZIO[ZConnection, Throwable, Option[PgSubscriptionRow]] = {
    sql"""select "subdbid", "subname"
          from pg_catalog.pg_subscription
          where "subdbid" = ??? AND "subname" = ???
       """.query[PgSubscriptionRow].selectOne
  }
  override def update(row: PgSubscriptionRow): ZIO[ZConnection, Throwable, Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_subscription
          set "subdbid" = ???::oid,
              "subname" = ???::name,
              "subowner" = ???::oid,
              "subenabled" = ???,
              "subbinary" = ???,
              "substream" = ???,
              "subconninfo" = ???,
              "subslotname" = ???::name,
              "subsynccommit" = ???,
              "subpublications" = ???::_text
          where "oid" = ???""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgSubscriptionFields, PgSubscriptionRow] = {
    UpdateBuilder("pg_catalog.pg_subscription", PgSubscriptionFields, PgSubscriptionRow.read)
  }
  override def upsert(unsaved: PgSubscriptionRow): ZIO[ZConnection, Throwable, PgSubscriptionRow] = {
    sql"""insert into pg_catalog.pg_subscription("oid", "subdbid", "subname", "subowner", "subenabled", "subbinary", "substream", "subconninfo", "subslotname", "subsynccommit", "subpublications")
          values (
            ???::oid,
            ???::oid,
            ???::name,
            ???::oid,
            ???,
            ???,
            ???,
            ???,
            ???::name,
            ???,
            ???::_text
          )
          on conflict ("oid")
          do update set
            "subdbid" = EXCLUDED."subdbid",
            "subname" = EXCLUDED."subname",
            "subowner" = EXCLUDED."subowner",
            "subenabled" = EXCLUDED."subenabled",
            "subbinary" = EXCLUDED."subbinary",
            "substream" = EXCLUDED."substream",
            "subconninfo" = EXCLUDED."subconninfo",
            "subslotname" = EXCLUDED."subslotname",
            "subsynccommit" = EXCLUDED."subsynccommit",
            "subpublications" = EXCLUDED."subpublications"
          returning "oid", "subdbid", "subname", "subowner", "subenabled", "subbinary", "substream", "subconninfo", "subslotname", "subsynccommit", "subpublications"
       """.query(???).unique
  }
}
