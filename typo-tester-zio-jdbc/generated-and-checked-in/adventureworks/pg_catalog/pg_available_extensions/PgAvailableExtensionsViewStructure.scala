/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_available_extensions

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgAvailableExtensionsViewStructure[Row](val prefix: Option[String], val extract: Row => PgAvailableExtensionsViewRow, val merge: (Row, PgAvailableExtensionsViewRow) => Row)
  extends Relation[PgAvailableExtensionsViewFields, PgAvailableExtensionsViewRow, Row]
    with PgAvailableExtensionsViewFields[Row] { outer =>

  override val name = new OptField[String, Row](prefix, "name", None, None)(x => extract(x).name, (row, value) => merge(row, extract(row).copy(name = value)))
  override val defaultVersion = new OptField[String, Row](prefix, "default_version", None, None)(x => extract(x).defaultVersion, (row, value) => merge(row, extract(row).copy(defaultVersion = value)))
  override val installedVersion = new OptField[String, Row](prefix, "installed_version", None, None)(x => extract(x).installedVersion, (row, value) => merge(row, extract(row).copy(installedVersion = value)))
  override val comment = new OptField[String, Row](prefix, "comment", None, None)(x => extract(x).comment, (row, value) => merge(row, extract(row).copy(comment = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](name, defaultVersion, installedVersion, comment)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgAvailableExtensionsViewRow, merge: (NewRow, PgAvailableExtensionsViewRow) => NewRow): PgAvailableExtensionsViewStructure[NewRow] =
    new PgAvailableExtensionsViewStructure(prefix, extract, merge)
}
