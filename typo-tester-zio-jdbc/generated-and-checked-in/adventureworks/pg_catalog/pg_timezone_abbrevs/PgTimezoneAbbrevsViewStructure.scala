/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_timezone_abbrevs

import adventureworks.customtypes.TypoInterval
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgTimezoneAbbrevsViewStructure[Row](val prefix: Option[String], val extract: Row => PgTimezoneAbbrevsViewRow, val merge: (Row, PgTimezoneAbbrevsViewRow) => Row)
  extends Relation[PgTimezoneAbbrevsViewFields, PgTimezoneAbbrevsViewRow, Row]
    with PgTimezoneAbbrevsViewFields[Row] { outer =>

  override val abbrev = new OptField[String, Row](prefix, "abbrev", None, None)(x => extract(x).abbrev, (row, value) => merge(row, extract(row).copy(abbrev = value)))
  override val utcOffset = new OptField[TypoInterval, Row](prefix, "utc_offset", None, None)(x => extract(x).utcOffset, (row, value) => merge(row, extract(row).copy(utcOffset = value)))
  override val isDst = new OptField[Boolean, Row](prefix, "is_dst", None, None)(x => extract(x).isDst, (row, value) => merge(row, extract(row).copy(isDst = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](abbrev, utcOffset, isDst)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgTimezoneAbbrevsViewRow, merge: (NewRow, PgTimezoneAbbrevsViewRow) => NewRow): PgTimezoneAbbrevsViewStructure[NewRow] =
    new PgTimezoneAbbrevsViewStructure(prefix, extract, merge)
}
