/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_all_indexes

import adventureworks.pg_catalog.pg_class.PgClassId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgStatAllIndexesViewRow(
  /** Points to [[pg_class.PgClassRow.oid]] */
  relid: PgClassId,
  /** Points to [[pg_class.PgClassRow.oid]] */
  indexrelid: PgClassId,
  /** Points to [[pg_namespace.PgNamespaceRow.nspname]] */
  schemaname: Option[String],
  /** Points to [[pg_class.PgClassRow.relname]] */
  relname: String,
  /** Points to [[pg_class.PgClassRow.relname]] */
  indexrelname: String,
  idxScan: /* nullability unknown */ Option[Long],
  idxTupRead: /* nullability unknown */ Option[Long],
  idxTupFetch: /* nullability unknown */ Option[Long]
)

object PgStatAllIndexesViewRow {
  implicit lazy val decoder: JsonDecoder[PgStatAllIndexesViewRow] = DeriveJsonDecoder.gen[PgStatAllIndexesViewRow]
  implicit lazy val decoder: JsonDecoder[PgStatAllIndexesViewRow] = DeriveJsonEncoder.gen[PgStatAllIndexesViewRow]
}
