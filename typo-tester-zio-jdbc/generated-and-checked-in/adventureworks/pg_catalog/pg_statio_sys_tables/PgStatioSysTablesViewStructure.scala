/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statio_sys_tables

import adventureworks.pg_catalog.pg_class.PgClassId
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgStatioSysTablesViewStructure[Row](val prefix: Option[String], val extract: Row => PgStatioSysTablesViewRow, val merge: (Row, PgStatioSysTablesViewRow) => Row)
  extends Relation[PgStatioSysTablesViewFields, PgStatioSysTablesViewRow, Row]
    with PgStatioSysTablesViewFields[Row] { outer =>

  override val relid = new OptField[PgClassId, Row](prefix, "relid", None, None)(x => extract(x).relid, (row, value) => merge(row, extract(row).copy(relid = value)))
  override val schemaname = new OptField[String, Row](prefix, "schemaname", None, None)(x => extract(x).schemaname, (row, value) => merge(row, extract(row).copy(schemaname = value)))
  override val relname = new OptField[String, Row](prefix, "relname", None, None)(x => extract(x).relname, (row, value) => merge(row, extract(row).copy(relname = value)))
  override val heapBlksRead = new OptField[/* nullability unknown */ Long, Row](prefix, "heap_blks_read", None, None)(x => extract(x).heapBlksRead, (row, value) => merge(row, extract(row).copy(heapBlksRead = value)))
  override val heapBlksHit = new OptField[/* nullability unknown */ Long, Row](prefix, "heap_blks_hit", None, None)(x => extract(x).heapBlksHit, (row, value) => merge(row, extract(row).copy(heapBlksHit = value)))
  override val idxBlksRead = new OptField[/* nullability unknown */ Long, Row](prefix, "idx_blks_read", None, None)(x => extract(x).idxBlksRead, (row, value) => merge(row, extract(row).copy(idxBlksRead = value)))
  override val idxBlksHit = new OptField[/* nullability unknown */ Long, Row](prefix, "idx_blks_hit", None, None)(x => extract(x).idxBlksHit, (row, value) => merge(row, extract(row).copy(idxBlksHit = value)))
  override val toastBlksRead = new OptField[/* nullability unknown */ Long, Row](prefix, "toast_blks_read", None, None)(x => extract(x).toastBlksRead, (row, value) => merge(row, extract(row).copy(toastBlksRead = value)))
  override val toastBlksHit = new OptField[/* nullability unknown */ Long, Row](prefix, "toast_blks_hit", None, None)(x => extract(x).toastBlksHit, (row, value) => merge(row, extract(row).copy(toastBlksHit = value)))
  override val tidxBlksRead = new OptField[/* nullability unknown */ Long, Row](prefix, "tidx_blks_read", None, None)(x => extract(x).tidxBlksRead, (row, value) => merge(row, extract(row).copy(tidxBlksRead = value)))
  override val tidxBlksHit = new OptField[/* nullability unknown */ Long, Row](prefix, "tidx_blks_hit", None, None)(x => extract(x).tidxBlksHit, (row, value) => merge(row, extract(row).copy(tidxBlksHit = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](relid, schemaname, relname, heapBlksRead, heapBlksHit, idxBlksRead, idxBlksHit, toastBlksRead, toastBlksHit, tidxBlksRead, tidxBlksHit)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgStatioSysTablesViewRow, merge: (NewRow, PgStatioSysTablesViewRow) => NewRow): PgStatioSysTablesViewStructure[NewRow] =
    new PgStatioSysTablesViewStructure(prefix, extract, merge)
}
