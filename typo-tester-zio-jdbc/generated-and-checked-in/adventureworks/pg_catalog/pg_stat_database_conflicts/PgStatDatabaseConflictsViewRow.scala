/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_database_conflicts

import adventureworks.pg_catalog.pg_database.PgDatabaseId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgStatDatabaseConflictsViewRow(
  /** Points to [[pg_database.PgDatabaseRow.oid]] */
  datid: PgDatabaseId,
  /** Points to [[pg_database.PgDatabaseRow.datname]] */
  datname: String,
  conflTablespace: /* nullability unknown */ Option[Long],
  conflLock: /* nullability unknown */ Option[Long],
  conflSnapshot: /* nullability unknown */ Option[Long],
  conflBufferpin: /* nullability unknown */ Option[Long],
  conflDeadlock: /* nullability unknown */ Option[Long]
)

object PgStatDatabaseConflictsViewRow {
  implicit lazy val decoder: JsonDecoder[PgStatDatabaseConflictsViewRow] = DeriveJsonDecoder.gen[PgStatDatabaseConflictsViewRow]
  implicit lazy val decoder: JsonDecoder[PgStatDatabaseConflictsViewRow] = DeriveJsonEncoder.gen[PgStatDatabaseConflictsViewRow]
}
