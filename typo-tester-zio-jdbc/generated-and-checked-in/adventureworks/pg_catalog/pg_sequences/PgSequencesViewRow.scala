/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_sequences

import adventureworks.customtypes.TypoRegtype
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgSequencesViewRow(
  /** Points to [[pg_namespace.PgNamespaceRow.nspname]] */
  schemaname: String,
  /** Points to [[pg_class.PgClassRow.relname]] */
  sequencename: String,
  sequenceowner: /* nullability unknown */ Option[String],
  dataType: /* nullability unknown */ Option[TypoRegtype],
  /** Points to [[pg_sequence.PgSequenceRow.seqstart]] */
  startValue: Long,
  /** Points to [[pg_sequence.PgSequenceRow.seqmin]] */
  minValue: Long,
  /** Points to [[pg_sequence.PgSequenceRow.seqmax]] */
  maxValue: Long,
  /** Points to [[pg_sequence.PgSequenceRow.seqincrement]] */
  incrementBy: Long,
  /** Points to [[pg_sequence.PgSequenceRow.seqcycle]] */
  cycle: Boolean,
  /** Points to [[pg_sequence.PgSequenceRow.seqcache]] */
  cacheSize: Long,
  lastValue: /* nullability unknown */ Option[Long]
)

object PgSequencesViewRow {
  implicit lazy val decoder: JsonDecoder[PgSequencesViewRow] = DeriveJsonDecoder.gen[PgSequencesViewRow]
  implicit lazy val decoder: JsonDecoder[PgSequencesViewRow] = DeriveJsonEncoder.gen[PgSequencesViewRow]
}
