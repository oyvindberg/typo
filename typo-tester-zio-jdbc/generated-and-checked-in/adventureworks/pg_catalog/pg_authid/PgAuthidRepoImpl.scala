/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_authid

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlInterpolator
import zio.jdbc.ZConnection
import zio.stream.ZStream

object PgAuthidRepoImpl extends PgAuthidRepo {
  override def delete(oid: PgAuthidId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_authid where "oid" = ???""".update.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgAuthidFields, PgAuthidRow] = {
    DeleteBuilder("pg_catalog.pg_authid", PgAuthidFields)
  }
  override def insert(unsaved: PgAuthidRow): ZIO[ZConnection, Throwable, PgAuthidRow] = {
    sql"""insert into pg_catalog.pg_authid("oid", "rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolbypassrls", "rolconnlimit", "rolpassword", "rolvaliduntil")
          values (???::oid, ???::name, ???, ???, ???, ???, ???, ???, ???, ???::int4, ???, ???::timestamptz)
          returning "oid", "rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolbypassrls", "rolconnlimit", "rolpassword", "rolvaliduntil"::text
       """.query(???).update.map(_ > 0)
  }
  override def select: SelectBuilder[PgAuthidFields, PgAuthidRow] = {
    SelectBuilderSql("pg_catalog.pg_authid", PgAuthidFields, PgAuthidRow.read)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgAuthidRow] = {
    sql"""select "oid", "rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolbypassrls", "rolconnlimit", "rolpassword", "rolvaliduntil"::text from pg_catalog.pg_authid""".query[PgAuthidRow].selectStream
  }
  override def selectById(oid: PgAuthidId): ZIO[ZConnection, Throwable, Option[PgAuthidRow]] = {
    sql"""select "oid", "rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolbypassrls", "rolconnlimit", "rolpassword", "rolvaliduntil"::text from pg_catalog.pg_authid where "oid" = ???""".query[PgAuthidRow].selectOne
  }
  override def selectByIds(oids: Array[PgAuthidId]): ZStream[ZConnection, Throwable, PgAuthidRow] = {
    sql"""select "oid", "rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolbypassrls", "rolconnlimit", "rolpassword", "rolvaliduntil"::text from pg_catalog.pg_authid where "oid" = ANY(${oids})""".query[PgAuthidRow].selectStream
  }
  override def selectByUnique(rolname: String): ZIO[ZConnection, Throwable, Option[PgAuthidRow]] = {
    sql"""select "rolname"
          from pg_catalog.pg_authid
          where "rolname" = ???
       """.query[PgAuthidRow].selectOne
  }
  override def update(row: PgAuthidRow): ZIO[ZConnection, Throwable, Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_authid
          set "rolname" = ???::name,
              "rolsuper" = ???,
              "rolinherit" = ???,
              "rolcreaterole" = ???,
              "rolcreatedb" = ???,
              "rolcanlogin" = ???,
              "rolreplication" = ???,
              "rolbypassrls" = ???,
              "rolconnlimit" = ???::int4,
              "rolpassword" = ???,
              "rolvaliduntil" = ???::timestamptz
          where "oid" = ???""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgAuthidFields, PgAuthidRow] = {
    UpdateBuilder("pg_catalog.pg_authid", PgAuthidFields, PgAuthidRow.read)
  }
  override def upsert(unsaved: PgAuthidRow): ZIO[ZConnection, Throwable, PgAuthidRow] = {
    sql"""insert into pg_catalog.pg_authid("oid", "rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolbypassrls", "rolconnlimit", "rolpassword", "rolvaliduntil")
          values (
            ???::oid,
            ???::name,
            ???,
            ???,
            ???,
            ???,
            ???,
            ???,
            ???,
            ???::int4,
            ???,
            ???::timestamptz
          )
          on conflict ("oid")
          do update set
            "rolname" = EXCLUDED."rolname",
            "rolsuper" = EXCLUDED."rolsuper",
            "rolinherit" = EXCLUDED."rolinherit",
            "rolcreaterole" = EXCLUDED."rolcreaterole",
            "rolcreatedb" = EXCLUDED."rolcreatedb",
            "rolcanlogin" = EXCLUDED."rolcanlogin",
            "rolreplication" = EXCLUDED."rolreplication",
            "rolbypassrls" = EXCLUDED."rolbypassrls",
            "rolconnlimit" = EXCLUDED."rolconnlimit",
            "rolpassword" = EXCLUDED."rolpassword",
            "rolvaliduntil" = EXCLUDED."rolvaliduntil"
          returning "oid", "rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolbypassrls", "rolconnlimit", "rolpassword", "rolvaliduntil"::text
       """.query(???).unique
  }
}
