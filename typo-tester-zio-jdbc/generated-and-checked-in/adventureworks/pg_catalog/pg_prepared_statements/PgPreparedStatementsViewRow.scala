/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_prepared_statements

import adventureworks.customtypes.TypoInstant
import adventureworks.customtypes.TypoRegtype
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgPreparedStatementsViewRow(
  name: /* nullability unknown */ Option[String],
  statement: /* nullability unknown */ Option[String],
  prepareTime: /* nullability unknown */ Option[TypoInstant],
  parameterTypes: /* nullability unknown */ Option[Array[TypoRegtype]],
  fromSql: /* nullability unknown */ Option[Boolean],
  genericPlans: /* nullability unknown */ Option[Long],
  customPlans: /* nullability unknown */ Option[Long]
)

object PgPreparedStatementsViewRow {
  implicit lazy val decoder: JsonDecoder[PgPreparedStatementsViewRow] = DeriveJsonDecoder.gen[PgPreparedStatementsViewRow]
  implicit lazy val decoder: JsonDecoder[PgPreparedStatementsViewRow] = DeriveJsonEncoder.gen[PgPreparedStatementsViewRow]
}
