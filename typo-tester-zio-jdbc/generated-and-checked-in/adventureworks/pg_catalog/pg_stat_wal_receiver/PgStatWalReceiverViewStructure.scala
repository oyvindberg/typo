/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_wal_receiver

import adventureworks.customtypes.TypoInstant
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgStatWalReceiverViewStructure[Row](val prefix: Option[String], val extract: Row => PgStatWalReceiverViewRow, val merge: (Row, PgStatWalReceiverViewRow) => Row)
  extends Relation[PgStatWalReceiverViewFields, PgStatWalReceiverViewRow, Row]
    with PgStatWalReceiverViewFields[Row] { outer =>

  override val pid = new OptField[Int, Row](prefix, "pid", None, None)(x => extract(x).pid, (row, value) => merge(row, extract(row).copy(pid = value)))
  override val status = new OptField[String, Row](prefix, "status", None, None)(x => extract(x).status, (row, value) => merge(row, extract(row).copy(status = value)))
  override val receiveStartLsn = new OptField[/* pg_lsn */ Long, Row](prefix, "receive_start_lsn", None, None)(x => extract(x).receiveStartLsn, (row, value) => merge(row, extract(row).copy(receiveStartLsn = value)))
  override val receiveStartTli = new OptField[Int, Row](prefix, "receive_start_tli", None, None)(x => extract(x).receiveStartTli, (row, value) => merge(row, extract(row).copy(receiveStartTli = value)))
  override val writtenLsn = new OptField[/* pg_lsn */ Long, Row](prefix, "written_lsn", None, None)(x => extract(x).writtenLsn, (row, value) => merge(row, extract(row).copy(writtenLsn = value)))
  override val flushedLsn = new OptField[/* pg_lsn */ Long, Row](prefix, "flushed_lsn", None, None)(x => extract(x).flushedLsn, (row, value) => merge(row, extract(row).copy(flushedLsn = value)))
  override val receivedTli = new OptField[Int, Row](prefix, "received_tli", None, None)(x => extract(x).receivedTli, (row, value) => merge(row, extract(row).copy(receivedTli = value)))
  override val lastMsgSendTime = new OptField[TypoInstant, Row](prefix, "last_msg_send_time", Some("text"), None)(x => extract(x).lastMsgSendTime, (row, value) => merge(row, extract(row).copy(lastMsgSendTime = value)))
  override val lastMsgReceiptTime = new OptField[TypoInstant, Row](prefix, "last_msg_receipt_time", Some("text"), None)(x => extract(x).lastMsgReceiptTime, (row, value) => merge(row, extract(row).copy(lastMsgReceiptTime = value)))
  override val latestEndLsn = new OptField[/* pg_lsn */ Long, Row](prefix, "latest_end_lsn", None, None)(x => extract(x).latestEndLsn, (row, value) => merge(row, extract(row).copy(latestEndLsn = value)))
  override val latestEndTime = new OptField[TypoInstant, Row](prefix, "latest_end_time", Some("text"), None)(x => extract(x).latestEndTime, (row, value) => merge(row, extract(row).copy(latestEndTime = value)))
  override val slotName = new OptField[String, Row](prefix, "slot_name", None, None)(x => extract(x).slotName, (row, value) => merge(row, extract(row).copy(slotName = value)))
  override val senderHost = new OptField[String, Row](prefix, "sender_host", None, None)(x => extract(x).senderHost, (row, value) => merge(row, extract(row).copy(senderHost = value)))
  override val senderPort = new OptField[Int, Row](prefix, "sender_port", None, None)(x => extract(x).senderPort, (row, value) => merge(row, extract(row).copy(senderPort = value)))
  override val conninfo = new OptField[String, Row](prefix, "conninfo", None, None)(x => extract(x).conninfo, (row, value) => merge(row, extract(row).copy(conninfo = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](pid, status, receiveStartLsn, receiveStartTli, writtenLsn, flushedLsn, receivedTli, lastMsgSendTime, lastMsgReceiptTime, latestEndLsn, latestEndTime, slotName, senderHost, senderPort, conninfo)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgStatWalReceiverViewRow, merge: (NewRow, PgStatWalReceiverViewRow) => NewRow): PgStatWalReceiverViewStructure[NewRow] =
    new PgStatWalReceiverViewStructure(prefix, extract, merge)
}
