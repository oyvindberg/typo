/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_policies

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgPoliciesViewRow(
  /** Points to [[pg_namespace.PgNamespaceRow.nspname]] */
  schemaname: String,
  /** Points to [[pg_class.PgClassRow.relname]] */
  tablename: String,
  /** Points to [[pg_policy.PgPolicyRow.polname]] */
  policyname: String,
  permissive: /* nullability unknown */ Option[String],
  roles: /* nullability unknown */ Option[Array[String]],
  cmd: /* nullability unknown */ Option[String],
  qual: /* nullability unknown */ Option[String],
  withCheck: /* nullability unknown */ Option[String]
)

object PgPoliciesViewRow {
  implicit lazy val decoder: JsonDecoder[PgPoliciesViewRow] = DeriveJsonDecoder.gen[PgPoliciesViewRow]
  implicit lazy val decoder: JsonDecoder[PgPoliciesViewRow] = DeriveJsonEncoder.gen[PgPoliciesViewRow]
}
