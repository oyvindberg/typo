/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_dict

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgTsDictRepo {
  def delete(oid: PgTsDictId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgTsDictFields, PgTsDictRow]
  def insert(unsaved: PgTsDictRow): ZIO[ZConnection, Throwable, PgTsDictRow]
  def select: SelectBuilder[PgTsDictFields, PgTsDictRow]
  def selectAll: ZStream[ZConnection, Throwable, PgTsDictRow]
  def selectById(oid: PgTsDictId): ZIO[ZConnection, Throwable, Option[PgTsDictRow]]
  def selectByIds(oids: Array[PgTsDictId]): ZStream[ZConnection, Throwable, PgTsDictRow]
  def selectByUnique(dictname: String, dictnamespace: /* oid */ Long): ZIO[ZConnection, Throwable, Option[PgTsDictRow]]
  def update(row: PgTsDictRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgTsDictFields, PgTsDictRow]
  def upsert(unsaved: PgTsDictRow): ZIO[ZConnection, Throwable, UpdateResult[PgTsDictRow]]
}
