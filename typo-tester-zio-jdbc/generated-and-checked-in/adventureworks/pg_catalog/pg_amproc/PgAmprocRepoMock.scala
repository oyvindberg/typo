/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_amproc

import adventureworks.customtypes.TypoShort
import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.ZConnection
import zio.stream.ZStream

class PgAmprocRepoMock(map: scala.collection.mutable.Map[PgAmprocId, PgAmprocRow] = scala.collection.mutable.Map.empty) extends PgAmprocRepo {
  override def delete(oid: PgAmprocId): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def delete: DeleteBuilder[PgAmprocFields, PgAmprocRow] = {
    ???
  }
  override def insert(unsaved: PgAmprocRow): ZIO[ZConnection, Throwable, PgAmprocRow] = {
    ???
  }
  override def select: SelectBuilder[PgAmprocFields, PgAmprocRow] = {
    ???
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgAmprocRow] = {
    ???
  }
  override def selectById(oid: PgAmprocId): ZIO[ZConnection, Throwable, Option[PgAmprocRow]] = {
    ???
  }
  override def selectByIds(oids: Array[PgAmprocId]): ZStream[ZConnection, Throwable, PgAmprocRow] = {
    ???
  }
  override def selectByUnique(amprocfamily: /* oid */ Long, amproclefttype: /* oid */ Long, amprocrighttype: /* oid */ Long, amprocnum: TypoShort): ZIO[ZConnection, Throwable, Option[PgAmprocRow]] = {
    ???
  }
  override def update(row: PgAmprocRow): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def update: UpdateBuilder[PgAmprocFields, PgAmprocRow] = {
    ???
  }
  override def upsert(unsaved: PgAmprocRow): ZIO[ZConnection, Throwable, PgAmprocRow] = {
    ???
  }
}
