/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_attribute

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlInterpolator
import zio.jdbc.ZConnection
import zio.stream.ZStream

object PgAttributeRepoImpl extends PgAttributeRepo {
  override def delete(compositeId: PgAttributeId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_attribute where "attrelid" = ??? AND "attnum" = ???""".update.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgAttributeFields, PgAttributeRow] = {
    DeleteBuilder("pg_catalog.pg_attribute", PgAttributeFields)
  }
  override def insert(unsaved: PgAttributeRow): ZIO[ZConnection, Throwable, PgAttributeRow] = {
    sql"""insert into pg_catalog.pg_attribute("attrelid", "attname", "atttypid", "attstattarget", "attlen", "attnum", "attndims", "attcacheoff", "atttypmod", "attbyval", "attalign", "attstorage", "attcompression", "attnotnull", "atthasdef", "atthasmissing", "attidentity", "attgenerated", "attisdropped", "attislocal", "attinhcount", "attcollation", "attacl", "attoptions", "attfdwoptions", "attmissingval")
          values (???::oid, ???::name, ???::oid, ???::int4, ???::int2, ???::int2, ???::int4, ???::int4, ???::int4, ???, ???::char, ???::char, ???::char, ???, ???, ???, ???::char, ???::char, ???, ???, ???::int4, ???::oid, ???::_aclitem, ???::_text, ???::_text, ???::anyarray)
          returning "attrelid", "attname", "atttypid", "attstattarget", "attlen", "attnum", "attndims", "attcacheoff", "atttypmod", "attbyval", "attalign", "attstorage", "attcompression", "attnotnull", "atthasdef", "atthasmissing", "attidentity", "attgenerated", "attisdropped", "attislocal", "attinhcount", "attcollation", "attacl", "attoptions", "attfdwoptions", "attmissingval"
       """.query(???).update.map(_ > 0)
  }
  override def select: SelectBuilder[PgAttributeFields, PgAttributeRow] = {
    SelectBuilderSql("pg_catalog.pg_attribute", PgAttributeFields, PgAttributeRow.read)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgAttributeRow] = {
    sql"""select "attrelid", "attname", "atttypid", "attstattarget", "attlen", "attnum", "attndims", "attcacheoff", "atttypmod", "attbyval", "attalign", "attstorage", "attcompression", "attnotnull", "atthasdef", "atthasmissing", "attidentity", "attgenerated", "attisdropped", "attislocal", "attinhcount", "attcollation", "attacl", "attoptions", "attfdwoptions", "attmissingval" from pg_catalog.pg_attribute""".query[PgAttributeRow].selectStream
  }
  override def selectById(compositeId: PgAttributeId): ZIO[ZConnection, Throwable, Option[PgAttributeRow]] = {
    sql"""select "attrelid", "attname", "atttypid", "attstattarget", "attlen", "attnum", "attndims", "attcacheoff", "atttypmod", "attbyval", "attalign", "attstorage", "attcompression", "attnotnull", "atthasdef", "atthasmissing", "attidentity", "attgenerated", "attisdropped", "attislocal", "attinhcount", "attcollation", "attacl", "attoptions", "attfdwoptions", "attmissingval" from pg_catalog.pg_attribute where "attrelid" = ??? AND "attnum" = ???""".query[PgAttributeRow].selectOne
  }
  override def selectByUnique(attrelid: /* oid */ Long, attname: String): ZIO[ZConnection, Throwable, Option[PgAttributeRow]] = {
    sql"""select "attrelid", "attname"
          from pg_catalog.pg_attribute
          where "attrelid" = ??? AND "attname" = ???
       """.query[PgAttributeRow].selectOne
  }
  override def update(row: PgAttributeRow): ZIO[ZConnection, Throwable, Boolean] = {
    val compositeId = row.compositeId
    sql"""update pg_catalog.pg_attribute
          set "attname" = ???::name,
              "atttypid" = ???::oid,
              "attstattarget" = ???::int4,
              "attlen" = ???::int2,
              "attndims" = ???::int4,
              "attcacheoff" = ???::int4,
              "atttypmod" = ???::int4,
              "attbyval" = ???,
              "attalign" = ???::char,
              "attstorage" = ???::char,
              "attcompression" = ???::char,
              "attnotnull" = ???,
              "atthasdef" = ???,
              "atthasmissing" = ???,
              "attidentity" = ???::char,
              "attgenerated" = ???::char,
              "attisdropped" = ???,
              "attislocal" = ???,
              "attinhcount" = ???::int4,
              "attcollation" = ???::oid,
              "attacl" = ???::_aclitem,
              "attoptions" = ???::_text,
              "attfdwoptions" = ???::_text,
              "attmissingval" = ???::anyarray
          where "attrelid" = ??? AND "attnum" = ???""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgAttributeFields, PgAttributeRow] = {
    UpdateBuilder("pg_catalog.pg_attribute", PgAttributeFields, PgAttributeRow.read)
  }
  override def upsert(unsaved: PgAttributeRow): ZIO[ZConnection, Throwable, PgAttributeRow] = {
    sql"""insert into pg_catalog.pg_attribute("attrelid", "attname", "atttypid", "attstattarget", "attlen", "attnum", "attndims", "attcacheoff", "atttypmod", "attbyval", "attalign", "attstorage", "attcompression", "attnotnull", "atthasdef", "atthasmissing", "attidentity", "attgenerated", "attisdropped", "attislocal", "attinhcount", "attcollation", "attacl", "attoptions", "attfdwoptions", "attmissingval")
          values (
            ???::oid,
            ???::name,
            ???::oid,
            ???::int4,
            ???::int2,
            ???::int2,
            ???::int4,
            ???::int4,
            ???::int4,
            ???,
            ???::char,
            ???::char,
            ???::char,
            ???,
            ???,
            ???,
            ???::char,
            ???::char,
            ???,
            ???,
            ???::int4,
            ???::oid,
            ???::_aclitem,
            ???::_text,
            ???::_text,
            ???::anyarray
          )
          on conflict ("attrelid", "attnum")
          do update set
            "attname" = EXCLUDED."attname",
            "atttypid" = EXCLUDED."atttypid",
            "attstattarget" = EXCLUDED."attstattarget",
            "attlen" = EXCLUDED."attlen",
            "attndims" = EXCLUDED."attndims",
            "attcacheoff" = EXCLUDED."attcacheoff",
            "atttypmod" = EXCLUDED."atttypmod",
            "attbyval" = EXCLUDED."attbyval",
            "attalign" = EXCLUDED."attalign",
            "attstorage" = EXCLUDED."attstorage",
            "attcompression" = EXCLUDED."attcompression",
            "attnotnull" = EXCLUDED."attnotnull",
            "atthasdef" = EXCLUDED."atthasdef",
            "atthasmissing" = EXCLUDED."atthasmissing",
            "attidentity" = EXCLUDED."attidentity",
            "attgenerated" = EXCLUDED."attgenerated",
            "attisdropped" = EXCLUDED."attisdropped",
            "attislocal" = EXCLUDED."attislocal",
            "attinhcount" = EXCLUDED."attinhcount",
            "attcollation" = EXCLUDED."attcollation",
            "attacl" = EXCLUDED."attacl",
            "attoptions" = EXCLUDED."attoptions",
            "attfdwoptions" = EXCLUDED."attfdwoptions",
            "attmissingval" = EXCLUDED."attmissingval"
          returning "attrelid", "attname", "atttypid", "attstattarget", "attlen", "attnum", "attndims", "attcacheoff", "atttypmod", "attbyval", "attalign", "attstorage", "attcompression", "attnotnull", "atthasdef", "atthasmissing", "attidentity", "attgenerated", "attisdropped", "attislocal", "attinhcount", "attcollation", "attacl", "attoptions", "attfdwoptions", "attmissingval"
       """.query(???).unique
  }
}
