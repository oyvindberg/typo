/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_attribute

import adventureworks.customtypes.TypoAclItem
import adventureworks.customtypes.TypoAnyArray
import adventureworks.customtypes.TypoShort
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgAttributeStructure[Row](val prefix: Option[String], val extract: Row => PgAttributeRow, val merge: (Row, PgAttributeRow) => Row)
  extends Relation[PgAttributeFields, PgAttributeRow, Row]
    with PgAttributeFields[Row] { outer =>

  override val attrelid = new IdField[/* oid */ Long, Row](prefix, "attrelid", None, Some("oid"))(x => extract(x).attrelid, (row, value) => merge(row, extract(row).copy(attrelid = value)))
  override val attname = new Field[String, Row](prefix, "attname", None, Some("name"))(x => extract(x).attname, (row, value) => merge(row, extract(row).copy(attname = value)))
  override val atttypid = new Field[/* oid */ Long, Row](prefix, "atttypid", None, Some("oid"))(x => extract(x).atttypid, (row, value) => merge(row, extract(row).copy(atttypid = value)))
  override val attstattarget = new Field[Int, Row](prefix, "attstattarget", None, Some("int4"))(x => extract(x).attstattarget, (row, value) => merge(row, extract(row).copy(attstattarget = value)))
  override val attlen = new Field[TypoShort, Row](prefix, "attlen", None, Some("int2"))(x => extract(x).attlen, (row, value) => merge(row, extract(row).copy(attlen = value)))
  override val attnum = new IdField[TypoShort, Row](prefix, "attnum", None, Some("int2"))(x => extract(x).attnum, (row, value) => merge(row, extract(row).copy(attnum = value)))
  override val attndims = new Field[Int, Row](prefix, "attndims", None, Some("int4"))(x => extract(x).attndims, (row, value) => merge(row, extract(row).copy(attndims = value)))
  override val attcacheoff = new Field[Int, Row](prefix, "attcacheoff", None, Some("int4"))(x => extract(x).attcacheoff, (row, value) => merge(row, extract(row).copy(attcacheoff = value)))
  override val atttypmod = new Field[Int, Row](prefix, "atttypmod", None, Some("int4"))(x => extract(x).atttypmod, (row, value) => merge(row, extract(row).copy(atttypmod = value)))
  override val attbyval = new Field[Boolean, Row](prefix, "attbyval", None, None)(x => extract(x).attbyval, (row, value) => merge(row, extract(row).copy(attbyval = value)))
  override val attalign = new Field[String, Row](prefix, "attalign", None, Some("char"))(x => extract(x).attalign, (row, value) => merge(row, extract(row).copy(attalign = value)))
  override val attstorage = new Field[String, Row](prefix, "attstorage", None, Some("char"))(x => extract(x).attstorage, (row, value) => merge(row, extract(row).copy(attstorage = value)))
  override val attcompression = new Field[String, Row](prefix, "attcompression", None, Some("char"))(x => extract(x).attcompression, (row, value) => merge(row, extract(row).copy(attcompression = value)))
  override val attnotnull = new Field[Boolean, Row](prefix, "attnotnull", None, None)(x => extract(x).attnotnull, (row, value) => merge(row, extract(row).copy(attnotnull = value)))
  override val atthasdef = new Field[Boolean, Row](prefix, "atthasdef", None, None)(x => extract(x).atthasdef, (row, value) => merge(row, extract(row).copy(atthasdef = value)))
  override val atthasmissing = new Field[Boolean, Row](prefix, "atthasmissing", None, None)(x => extract(x).atthasmissing, (row, value) => merge(row, extract(row).copy(atthasmissing = value)))
  override val attidentity = new Field[String, Row](prefix, "attidentity", None, Some("char"))(x => extract(x).attidentity, (row, value) => merge(row, extract(row).copy(attidentity = value)))
  override val attgenerated = new Field[String, Row](prefix, "attgenerated", None, Some("char"))(x => extract(x).attgenerated, (row, value) => merge(row, extract(row).copy(attgenerated = value)))
  override val attisdropped = new Field[Boolean, Row](prefix, "attisdropped", None, None)(x => extract(x).attisdropped, (row, value) => merge(row, extract(row).copy(attisdropped = value)))
  override val attislocal = new Field[Boolean, Row](prefix, "attislocal", None, None)(x => extract(x).attislocal, (row, value) => merge(row, extract(row).copy(attislocal = value)))
  override val attinhcount = new Field[Int, Row](prefix, "attinhcount", None, Some("int4"))(x => extract(x).attinhcount, (row, value) => merge(row, extract(row).copy(attinhcount = value)))
  override val attcollation = new Field[/* oid */ Long, Row](prefix, "attcollation", None, Some("oid"))(x => extract(x).attcollation, (row, value) => merge(row, extract(row).copy(attcollation = value)))
  override val attacl = new OptField[Array[TypoAclItem], Row](prefix, "attacl", None, Some("_aclitem"))(x => extract(x).attacl, (row, value) => merge(row, extract(row).copy(attacl = value)))
  override val attoptions = new OptField[Array[String], Row](prefix, "attoptions", None, Some("_text"))(x => extract(x).attoptions, (row, value) => merge(row, extract(row).copy(attoptions = value)))
  override val attfdwoptions = new OptField[Array[String], Row](prefix, "attfdwoptions", None, Some("_text"))(x => extract(x).attfdwoptions, (row, value) => merge(row, extract(row).copy(attfdwoptions = value)))
  override val attmissingval = new OptField[TypoAnyArray, Row](prefix, "attmissingval", None, Some("anyarray"))(x => extract(x).attmissingval, (row, value) => merge(row, extract(row).copy(attmissingval = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](attrelid, attname, atttypid, attstattarget, attlen, attnum, attndims, attcacheoff, atttypmod, attbyval, attalign, attstorage, attcompression, attnotnull, atthasdef, atthasmissing, attidentity, attgenerated, attisdropped, attislocal, attinhcount, attcollation, attacl, attoptions, attfdwoptions, attmissingval)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgAttributeRow, merge: (NewRow, PgAttributeRow) => NewRow): PgAttributeStructure[NewRow] =
    new PgAttributeStructure(prefix, extract, merge)
}
