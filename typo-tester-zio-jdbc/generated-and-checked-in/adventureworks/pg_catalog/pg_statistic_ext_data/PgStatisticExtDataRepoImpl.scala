/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statistic_ext_data

import adventureworks.customtypes.TypoUnknownPgDependencies
import adventureworks.customtypes.TypoUnknownPgMcvList
import adventureworks.customtypes.TypoUnknownPgNdistinct
import adventureworks.customtypes.TypoUnknownPgStatistic
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlFragment.Segment
import zio.jdbc.SqlFragment.Setter
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.jdbc.sqlInterpolator
import zio.stream.ZStream

object PgStatisticExtDataRepoImpl extends PgStatisticExtDataRepo {
  override def delete(stxoid: PgStatisticExtDataId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_statistic_ext_data where "stxoid" = ${Segment.paramSegment(stxoid)(PgStatisticExtDataId.setter)}""".delete.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgStatisticExtDataFields, PgStatisticExtDataRow] = {
    DeleteBuilder("pg_catalog.pg_statistic_ext_data", PgStatisticExtDataFields)
  }
  override def insert(unsaved: PgStatisticExtDataRow): ZIO[ZConnection, Throwable, PgStatisticExtDataRow] = {
    sql"""insert into pg_catalog.pg_statistic_ext_data("stxoid", "stxdndistinct", "stxddependencies", "stxdmcv", "stxdexpr")
          values (${Segment.paramSegment(unsaved.stxoid)(PgStatisticExtDataId.setter)}::oid, ${Segment.paramSegment(unsaved.stxdndistinct)(Setter.optionParamSetter(TypoUnknownPgNdistinct.setter))}::pg_ndistinct, ${Segment.paramSegment(unsaved.stxddependencies)(Setter.optionParamSetter(TypoUnknownPgDependencies.setter))}::pg_dependencies, ${Segment.paramSegment(unsaved.stxdmcv)(Setter.optionParamSetter(TypoUnknownPgMcvList.setter))}::pg_mcv_list, ${Segment.paramSegment(unsaved.stxdexpr)(Setter.optionParamSetter(TypoUnknownPgStatistic.arraySetter))}::_pg_statistic)
          returning "stxoid", "stxdndistinct"::text, "stxddependencies"::text, "stxdmcv"::text, "stxdexpr"::text[]
       """.insertReturning(PgStatisticExtDataRow.jdbcDecoder).map(_.updatedKeys.head)
  }
  override def select: SelectBuilder[PgStatisticExtDataFields, PgStatisticExtDataRow] = {
    SelectBuilderSql("pg_catalog.pg_statistic_ext_data", PgStatisticExtDataFields, PgStatisticExtDataRow.jdbcDecoder)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgStatisticExtDataRow] = {
    sql"""select "stxoid", "stxdndistinct"::text, "stxddependencies"::text, "stxdmcv"::text, "stxdexpr"::text[] from pg_catalog.pg_statistic_ext_data""".query(PgStatisticExtDataRow.jdbcDecoder).selectStream
  }
  override def selectById(stxoid: PgStatisticExtDataId): ZIO[ZConnection, Throwable, Option[PgStatisticExtDataRow]] = {
    sql"""select "stxoid", "stxdndistinct"::text, "stxddependencies"::text, "stxdmcv"::text, "stxdexpr"::text[] from pg_catalog.pg_statistic_ext_data where "stxoid" = ${Segment.paramSegment(stxoid)(PgStatisticExtDataId.setter)}""".query(PgStatisticExtDataRow.jdbcDecoder).selectOne
  }
  override def selectByIds(stxoids: Array[PgStatisticExtDataId]): ZStream[ZConnection, Throwable, PgStatisticExtDataRow] = {
    sql"""select "stxoid", "stxdndistinct"::text, "stxddependencies"::text, "stxdmcv"::text, "stxdexpr"::text[] from pg_catalog.pg_statistic_ext_data where "stxoid" = ANY(${Segment.paramSegment(stxoids)(PgStatisticExtDataId.arraySetter)})""".query(PgStatisticExtDataRow.jdbcDecoder).selectStream
  }
  override def update(row: PgStatisticExtDataRow): ZIO[ZConnection, Throwable, Boolean] = {
    val stxoid = row.stxoid
    sql"""update pg_catalog.pg_statistic_ext_data
          set "stxdndistinct" = ${Segment.paramSegment(row.stxdndistinct)(Setter.optionParamSetter(TypoUnknownPgNdistinct.setter))}::pg_ndistinct,
              "stxddependencies" = ${Segment.paramSegment(row.stxddependencies)(Setter.optionParamSetter(TypoUnknownPgDependencies.setter))}::pg_dependencies,
              "stxdmcv" = ${Segment.paramSegment(row.stxdmcv)(Setter.optionParamSetter(TypoUnknownPgMcvList.setter))}::pg_mcv_list,
              "stxdexpr" = ${Segment.paramSegment(row.stxdexpr)(Setter.optionParamSetter(TypoUnknownPgStatistic.arraySetter))}::_pg_statistic
          where "stxoid" = ${Segment.paramSegment(stxoid)(PgStatisticExtDataId.setter)}""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgStatisticExtDataFields, PgStatisticExtDataRow] = {
    UpdateBuilder("pg_catalog.pg_statistic_ext_data", PgStatisticExtDataFields, PgStatisticExtDataRow.jdbcDecoder)
  }
  override def upsert(unsaved: PgStatisticExtDataRow): ZIO[ZConnection, Throwable, UpdateResult[PgStatisticExtDataRow]] = {
    sql"""insert into pg_catalog.pg_statistic_ext_data("stxoid", "stxdndistinct", "stxddependencies", "stxdmcv", "stxdexpr")
          values (
            ${Segment.paramSegment(unsaved.stxoid)(PgStatisticExtDataId.setter)}::oid,
            ${Segment.paramSegment(unsaved.stxdndistinct)(Setter.optionParamSetter(TypoUnknownPgNdistinct.setter))}::pg_ndistinct,
            ${Segment.paramSegment(unsaved.stxddependencies)(Setter.optionParamSetter(TypoUnknownPgDependencies.setter))}::pg_dependencies,
            ${Segment.paramSegment(unsaved.stxdmcv)(Setter.optionParamSetter(TypoUnknownPgMcvList.setter))}::pg_mcv_list,
            ${Segment.paramSegment(unsaved.stxdexpr)(Setter.optionParamSetter(TypoUnknownPgStatistic.arraySetter))}::_pg_statistic
          )
          on conflict ("stxoid")
          do update set
            "stxdndistinct" = EXCLUDED."stxdndistinct",
            "stxddependencies" = EXCLUDED."stxddependencies",
            "stxdmcv" = EXCLUDED."stxdmcv",
            "stxdexpr" = EXCLUDED."stxdexpr"
          returning "stxoid", "stxdndistinct"::text, "stxddependencies"::text, "stxdmcv"::text, "stxdexpr"::text[]""".insertReturning(PgStatisticExtDataRow.jdbcDecoder)
  }
}
