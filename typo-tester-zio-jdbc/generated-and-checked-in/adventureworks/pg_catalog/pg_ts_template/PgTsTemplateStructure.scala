/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_template

import adventureworks.customtypes.TypoRegproc
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class PgTsTemplateStructure[Row](val prefix: Option[String], val extract: Row => PgTsTemplateRow, val merge: (Row, PgTsTemplateRow) => Row)
  extends Relation[PgTsTemplateFields, PgTsTemplateRow, Row]
    with PgTsTemplateFields[Row] { outer =>

  override val oid = new IdField[PgTsTemplateId, Row](prefix, "oid", None, Some("oid"))(x => extract(x).oid, (row, value) => merge(row, extract(row).copy(oid = value)))
  override val tmplname = new Field[String, Row](prefix, "tmplname", None, Some("name"))(x => extract(x).tmplname, (row, value) => merge(row, extract(row).copy(tmplname = value)))
  override val tmplnamespace = new Field[/* oid */ Long, Row](prefix, "tmplnamespace", None, Some("oid"))(x => extract(x).tmplnamespace, (row, value) => merge(row, extract(row).copy(tmplnamespace = value)))
  override val tmplinit = new Field[TypoRegproc, Row](prefix, "tmplinit", None, Some("regproc"))(x => extract(x).tmplinit, (row, value) => merge(row, extract(row).copy(tmplinit = value)))
  override val tmpllexize = new Field[TypoRegproc, Row](prefix, "tmpllexize", None, Some("regproc"))(x => extract(x).tmpllexize, (row, value) => merge(row, extract(row).copy(tmpllexize = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](oid, tmplname, tmplnamespace, tmplinit, tmpllexize)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgTsTemplateRow, merge: (NewRow, PgTsTemplateRow) => NewRow): PgTsTemplateStructure[NewRow] =
    new PgTsTemplateStructure(prefix, extract, merge)
}
