/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_class

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlInterpolator
import zio.jdbc.ZConnection
import zio.stream.ZStream

object PgClassRepoImpl extends PgClassRepo {
  override def delete(oid: PgClassId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_class where "oid" = ???""".update.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgClassFields, PgClassRow] = {
    DeleteBuilder("pg_catalog.pg_class", PgClassFields)
  }
  override def insert(unsaved: PgClassRow): ZIO[ZConnection, Throwable, PgClassRow] = {
    sql"""insert into pg_catalog.pg_class("oid", "relname", "relnamespace", "reltype", "reloftype", "relowner", "relam", "relfilenode", "reltablespace", "relpages", "reltuples", "relallvisible", "reltoastrelid", "relhasindex", "relisshared", "relpersistence", "relkind", "relnatts", "relchecks", "relhasrules", "relhastriggers", "relhassubclass", "relrowsecurity", "relforcerowsecurity", "relispopulated", "relreplident", "relispartition", "relrewrite", "relfrozenxid", "relminmxid", "relacl", "reloptions", "relpartbound")
          values (???::oid, ???::name, ???::oid, ???::oid, ???::oid, ???::oid, ???::oid, ???::oid, ???::oid, ???::int4, ???::float4, ???::int4, ???::oid, ???, ???, ???::char, ???::char, ???::int2, ???::int2, ???, ???, ???, ???, ???, ???, ???::char, ???, ???::oid, ???::xid, ???::xid, ???::_aclitem, ???::_text, ???::pg_node_tree)
          returning "oid", "relname", "relnamespace", "reltype", "reloftype", "relowner", "relam", "relfilenode", "reltablespace", "relpages", "reltuples", "relallvisible", "reltoastrelid", "relhasindex", "relisshared", "relpersistence", "relkind", "relnatts", "relchecks", "relhasrules", "relhastriggers", "relhassubclass", "relrowsecurity", "relforcerowsecurity", "relispopulated", "relreplident", "relispartition", "relrewrite", "relfrozenxid", "relminmxid", "relacl", "reloptions", "relpartbound"
       """.query(???).update.map(_ > 0)
  }
  override def select: SelectBuilder[PgClassFields, PgClassRow] = {
    SelectBuilderSql("pg_catalog.pg_class", PgClassFields, PgClassRow.read)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgClassRow] = {
    sql"""select "oid", "relname", "relnamespace", "reltype", "reloftype", "relowner", "relam", "relfilenode", "reltablespace", "relpages", "reltuples", "relallvisible", "reltoastrelid", "relhasindex", "relisshared", "relpersistence", "relkind", "relnatts", "relchecks", "relhasrules", "relhastriggers", "relhassubclass", "relrowsecurity", "relforcerowsecurity", "relispopulated", "relreplident", "relispartition", "relrewrite", "relfrozenxid", "relminmxid", "relacl", "reloptions", "relpartbound" from pg_catalog.pg_class""".query[PgClassRow].selectStream
  }
  override def selectById(oid: PgClassId): ZIO[ZConnection, Throwable, Option[PgClassRow]] = {
    sql"""select "oid", "relname", "relnamespace", "reltype", "reloftype", "relowner", "relam", "relfilenode", "reltablespace", "relpages", "reltuples", "relallvisible", "reltoastrelid", "relhasindex", "relisshared", "relpersistence", "relkind", "relnatts", "relchecks", "relhasrules", "relhastriggers", "relhassubclass", "relrowsecurity", "relforcerowsecurity", "relispopulated", "relreplident", "relispartition", "relrewrite", "relfrozenxid", "relminmxid", "relacl", "reloptions", "relpartbound" from pg_catalog.pg_class where "oid" = ???""".query[PgClassRow].selectOne
  }
  override def selectByIds(oids: Array[PgClassId]): ZStream[ZConnection, Throwable, PgClassRow] = {
    sql"""select "oid", "relname", "relnamespace", "reltype", "reloftype", "relowner", "relam", "relfilenode", "reltablespace", "relpages", "reltuples", "relallvisible", "reltoastrelid", "relhasindex", "relisshared", "relpersistence", "relkind", "relnatts", "relchecks", "relhasrules", "relhastriggers", "relhassubclass", "relrowsecurity", "relforcerowsecurity", "relispopulated", "relreplident", "relispartition", "relrewrite", "relfrozenxid", "relminmxid", "relacl", "reloptions", "relpartbound" from pg_catalog.pg_class where "oid" = ANY(${oids})""".query[PgClassRow].selectStream
  }
  override def selectByUnique(relname: String, relnamespace: /* oid */ Long): ZIO[ZConnection, Throwable, Option[PgClassRow]] = {
    sql"""select "relname", "relnamespace"
          from pg_catalog.pg_class
          where "relname" = ??? AND "relnamespace" = ???
       """.query[PgClassRow].selectOne
  }
  override def update(row: PgClassRow): ZIO[ZConnection, Throwable, Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_class
          set "relname" = ???::name,
              "relnamespace" = ???::oid,
              "reltype" = ???::oid,
              "reloftype" = ???::oid,
              "relowner" = ???::oid,
              "relam" = ???::oid,
              "relfilenode" = ???::oid,
              "reltablespace" = ???::oid,
              "relpages" = ???::int4,
              "reltuples" = ???::float4,
              "relallvisible" = ???::int4,
              "reltoastrelid" = ???::oid,
              "relhasindex" = ???,
              "relisshared" = ???,
              "relpersistence" = ???::char,
              "relkind" = ???::char,
              "relnatts" = ???::int2,
              "relchecks" = ???::int2,
              "relhasrules" = ???,
              "relhastriggers" = ???,
              "relhassubclass" = ???,
              "relrowsecurity" = ???,
              "relforcerowsecurity" = ???,
              "relispopulated" = ???,
              "relreplident" = ???::char,
              "relispartition" = ???,
              "relrewrite" = ???::oid,
              "relfrozenxid" = ???::xid,
              "relminmxid" = ???::xid,
              "relacl" = ???::_aclitem,
              "reloptions" = ???::_text,
              "relpartbound" = ???::pg_node_tree
          where "oid" = ???""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgClassFields, PgClassRow] = {
    UpdateBuilder("pg_catalog.pg_class", PgClassFields, PgClassRow.read)
  }
  override def upsert(unsaved: PgClassRow): ZIO[ZConnection, Throwable, PgClassRow] = {
    sql"""insert into pg_catalog.pg_class("oid", "relname", "relnamespace", "reltype", "reloftype", "relowner", "relam", "relfilenode", "reltablespace", "relpages", "reltuples", "relallvisible", "reltoastrelid", "relhasindex", "relisshared", "relpersistence", "relkind", "relnatts", "relchecks", "relhasrules", "relhastriggers", "relhassubclass", "relrowsecurity", "relforcerowsecurity", "relispopulated", "relreplident", "relispartition", "relrewrite", "relfrozenxid", "relminmxid", "relacl", "reloptions", "relpartbound")
          values (
            ???::oid,
            ???::name,
            ???::oid,
            ???::oid,
            ???::oid,
            ???::oid,
            ???::oid,
            ???::oid,
            ???::oid,
            ???::int4,
            ???::float4,
            ???::int4,
            ???::oid,
            ???,
            ???,
            ???::char,
            ???::char,
            ???::int2,
            ???::int2,
            ???,
            ???,
            ???,
            ???,
            ???,
            ???,
            ???::char,
            ???,
            ???::oid,
            ???::xid,
            ???::xid,
            ???::_aclitem,
            ???::_text,
            ???::pg_node_tree
          )
          on conflict ("oid")
          do update set
            "relname" = EXCLUDED."relname",
            "relnamespace" = EXCLUDED."relnamespace",
            "reltype" = EXCLUDED."reltype",
            "reloftype" = EXCLUDED."reloftype",
            "relowner" = EXCLUDED."relowner",
            "relam" = EXCLUDED."relam",
            "relfilenode" = EXCLUDED."relfilenode",
            "reltablespace" = EXCLUDED."reltablespace",
            "relpages" = EXCLUDED."relpages",
            "reltuples" = EXCLUDED."reltuples",
            "relallvisible" = EXCLUDED."relallvisible",
            "reltoastrelid" = EXCLUDED."reltoastrelid",
            "relhasindex" = EXCLUDED."relhasindex",
            "relisshared" = EXCLUDED."relisshared",
            "relpersistence" = EXCLUDED."relpersistence",
            "relkind" = EXCLUDED."relkind",
            "relnatts" = EXCLUDED."relnatts",
            "relchecks" = EXCLUDED."relchecks",
            "relhasrules" = EXCLUDED."relhasrules",
            "relhastriggers" = EXCLUDED."relhastriggers",
            "relhassubclass" = EXCLUDED."relhassubclass",
            "relrowsecurity" = EXCLUDED."relrowsecurity",
            "relforcerowsecurity" = EXCLUDED."relforcerowsecurity",
            "relispopulated" = EXCLUDED."relispopulated",
            "relreplident" = EXCLUDED."relreplident",
            "relispartition" = EXCLUDED."relispartition",
            "relrewrite" = EXCLUDED."relrewrite",
            "relfrozenxid" = EXCLUDED."relfrozenxid",
            "relminmxid" = EXCLUDED."relminmxid",
            "relacl" = EXCLUDED."relacl",
            "reloptions" = EXCLUDED."reloptions",
            "relpartbound" = EXCLUDED."relpartbound"
          returning "oid", "relname", "relnamespace", "reltype", "reloftype", "relowner", "relam", "relfilenode", "reltablespace", "relpages", "reltuples", "relallvisible", "reltoastrelid", "relhasindex", "relisshared", "relpersistence", "relkind", "relnatts", "relchecks", "relhasrules", "relhastriggers", "relhassubclass", "relrowsecurity", "relforcerowsecurity", "relispopulated", "relreplident", "relispartition", "relrewrite", "relfrozenxid", "relminmxid", "relacl", "reloptions", "relpartbound"
       """.query(???).unique
  }
}
