/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_user_mappings

import adventureworks.pg_catalog.pg_foreign_server.PgForeignServerId
import adventureworks.pg_catalog.pg_user_mapping.PgUserMappingId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgUserMappingsViewRow(
  /** Points to [[pg_user_mapping.PgUserMappingRow.oid]] */
  umid: PgUserMappingId,
  /** Points to [[pg_foreign_server.PgForeignServerRow.oid]] */
  srvid: PgForeignServerId,
  /** Points to [[pg_foreign_server.PgForeignServerRow.srvname]] */
  srvname: String,
  /** Points to [[pg_user_mapping.PgUserMappingRow.umuser]] */
  umuser: /* oid */ Long,
  usename: /* nullability unknown */ Option[String],
  umoptions: /* nullability unknown */ Option[Array[String]]
)

object PgUserMappingsViewRow {
  implicit lazy val decoder: JsonDecoder[PgUserMappingsViewRow] = DeriveJsonDecoder.gen[PgUserMappingsViewRow]
  implicit lazy val decoder: JsonDecoder[PgUserMappingsViewRow] = DeriveJsonEncoder.gen[PgUserMappingsViewRow]
}
