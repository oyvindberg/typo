/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_user_mappings

import adventureworks.pg_catalog.pg_foreign_server.PgForeignServerId
import adventureworks.pg_catalog.pg_user_mapping.PgUserMappingId
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgUserMappingsViewStructure[Row](val prefix: Option[String], val extract: Row => PgUserMappingsViewRow, val merge: (Row, PgUserMappingsViewRow) => Row)
  extends Relation[PgUserMappingsViewFields, PgUserMappingsViewRow, Row]
    with PgUserMappingsViewFields[Row] { outer =>

  override val umid = new Field[PgUserMappingId, Row](prefix, "umid", None, None)(x => extract(x).umid, (row, value) => merge(row, extract(row).copy(umid = value)))
  override val srvid = new Field[PgForeignServerId, Row](prefix, "srvid", None, None)(x => extract(x).srvid, (row, value) => merge(row, extract(row).copy(srvid = value)))
  override val srvname = new Field[String, Row](prefix, "srvname", None, None)(x => extract(x).srvname, (row, value) => merge(row, extract(row).copy(srvname = value)))
  override val umuser = new Field[/* oid */ Long, Row](prefix, "umuser", None, None)(x => extract(x).umuser, (row, value) => merge(row, extract(row).copy(umuser = value)))
  override val usename = new OptField[String, Row](prefix, "usename", None, None)(x => extract(x).usename, (row, value) => merge(row, extract(row).copy(usename = value)))
  override val umoptions = new OptField[Array[String], Row](prefix, "umoptions", None, None)(x => extract(x).umoptions, (row, value) => merge(row, extract(row).copy(umoptions = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](umid, srvid, srvname, umuser, usename, umoptions)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgUserMappingsViewRow, merge: (NewRow, PgUserMappingsViewRow) => NewRow): PgUserMappingsViewStructure[NewRow] =
    new PgUserMappingsViewStructure(prefix, extract, merge)
}
