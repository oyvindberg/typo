/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_index

import adventureworks.customtypes.TypoInt2Vector
import adventureworks.customtypes.TypoOidVector
import adventureworks.customtypes.TypoPgNodeTree
import adventureworks.customtypes.TypoShort
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField

trait PgIndexFields[Row] {
  val indexrelid: IdField[PgIndexId, Row]
  val indrelid: Field[/* oid */ Long, Row]
  val indnatts: Field[TypoShort, Row]
  val indnkeyatts: Field[TypoShort, Row]
  val indisunique: Field[Boolean, Row]
  val indisprimary: Field[Boolean, Row]
  val indisexclusion: Field[Boolean, Row]
  val indimmediate: Field[Boolean, Row]
  val indisclustered: Field[Boolean, Row]
  val indisvalid: Field[Boolean, Row]
  val indcheckxmin: Field[Boolean, Row]
  val indisready: Field[Boolean, Row]
  val indislive: Field[Boolean, Row]
  val indisreplident: Field[Boolean, Row]
  val indkey: Field[TypoInt2Vector, Row]
  val indcollation: Field[TypoOidVector, Row]
  val indclass: Field[TypoOidVector, Row]
  val indoption: Field[TypoInt2Vector, Row]
  val indexprs: OptField[TypoPgNodeTree, Row]
  val indpred: OptField[TypoPgNodeTree, Row]
}
object PgIndexFields extends PgIndexStructure[PgIndexRow](None, identity, (_, x) => x)

