/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_index

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `pg_catalog.pg_index` */
case class PgIndexId(value: /* oid */ Long) extends AnyVal
object PgIndexId {
  implicit lazy val bijection: Bijection[PgIndexId, /* oid */ Long] = Bijection[PgIndexId, /* oid */ Long](_.value)(PgIndexId.apply)
  implicit lazy val decoder: JsonDecoder[PgIndexId] = JsonDecoder.long.map(PgIndexId.apply)
  implicit lazy val encoder: JsonEncoder[PgIndexId] = JsonEncoder.long.contramap(_.value)
  implicit lazy val ordering: Ordering[PgIndexId] = Ordering.by(_.value)
}
