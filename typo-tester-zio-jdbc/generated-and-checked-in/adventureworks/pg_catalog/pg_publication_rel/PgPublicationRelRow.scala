/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_publication_rel

import java.sql.ResultSet
import zio.jdbc.JdbcDecoder
import zio.json.JsonDecoder
import zio.json.JsonEncoder
import zio.json.ast.Json
import zio.json.internal.Write

case class PgPublicationRelRow(
  oid: PgPublicationRelId,
  prpubid: /* oid */ Long,
  prrelid: /* oid */ Long
)

object PgPublicationRelRow {
  implicit lazy val jdbcDecoder: JdbcDecoder[PgPublicationRelRow] = new JdbcDecoder[PgPublicationRelRow] {
    override def unsafeDecode(columIndex: Int, rs: ResultSet): (Int, PgPublicationRelRow) =
      columIndex + 2 ->
        PgPublicationRelRow(
          oid = PgPublicationRelId.jdbcDecoder.unsafeDecode(columIndex + 0, rs)._2,
          prpubid = JdbcDecoder.longDecoder.unsafeDecode(columIndex + 1, rs)._2,
          prrelid = JdbcDecoder.longDecoder.unsafeDecode(columIndex + 2, rs)._2
        )
  }
  implicit lazy val jsonDecoder: JsonDecoder[PgPublicationRelRow] = JsonDecoder[Json.Obj].mapOrFail { jsonObj =>
    val oid = jsonObj.get("oid").toRight("Missing field 'oid'").flatMap(_.as(PgPublicationRelId.jsonDecoder))
    val prpubid = jsonObj.get("prpubid").toRight("Missing field 'prpubid'").flatMap(_.as(JsonDecoder.long))
    val prrelid = jsonObj.get("prrelid").toRight("Missing field 'prrelid'").flatMap(_.as(JsonDecoder.long))
    if (oid.isRight && prpubid.isRight && prrelid.isRight)
      Right(PgPublicationRelRow(oid = oid.toOption.get, prpubid = prpubid.toOption.get, prrelid = prrelid.toOption.get))
    else Left(List[Either[String, Any]](oid, prpubid, prrelid).flatMap(_.left.toOption).mkString(", "))
  }
  implicit lazy val jsonEncoder: JsonEncoder[PgPublicationRelRow] = new JsonEncoder[PgPublicationRelRow] {
    override def unsafeEncode(a: PgPublicationRelRow, indent: Option[Int], out: Write): Unit = {
      out.write("{")
      out.write(""""oid":""")
      PgPublicationRelId.jsonEncoder.unsafeEncode(a.oid, indent, out)
      out.write(",")
      out.write(""""prpubid":""")
      JsonEncoder.long.unsafeEncode(a.prpubid, indent, out)
      out.write(",")
      out.write(""""prrelid":""")
      JsonEncoder.long.unsafeEncode(a.prrelid, indent, out)
      out.write("}")
    }
  }
}
