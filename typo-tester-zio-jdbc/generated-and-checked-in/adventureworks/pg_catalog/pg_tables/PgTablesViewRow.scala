/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_tables

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgTablesViewRow(
  /** Points to [[pg_namespace.PgNamespaceRow.nspname]] */
  schemaname: Option[String],
  /** Points to [[pg_class.PgClassRow.relname]] */
  tablename: String,
  tableowner: /* nullability unknown */ Option[String],
  /** Points to [[pg_tablespace.PgTablespaceRow.spcname]] */
  tablespace: Option[String],
  /** Points to [[pg_class.PgClassRow.relhasindex]] */
  hasindexes: Boolean,
  /** Points to [[pg_class.PgClassRow.relhasrules]] */
  hasrules: Boolean,
  /** Points to [[pg_class.PgClassRow.relhastriggers]] */
  hastriggers: Boolean,
  /** Points to [[pg_class.PgClassRow.relrowsecurity]] */
  rowsecurity: Boolean
)

object PgTablesViewRow {
  implicit lazy val decoder: JsonDecoder[PgTablesViewRow] = DeriveJsonDecoder.gen[PgTablesViewRow]
  implicit lazy val decoder: JsonDecoder[PgTablesViewRow] = DeriveJsonEncoder.gen[PgTablesViewRow]
}
