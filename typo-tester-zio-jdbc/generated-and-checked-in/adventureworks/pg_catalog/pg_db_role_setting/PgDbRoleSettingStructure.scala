/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_db_role_setting

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgDbRoleSettingStructure[Row](val prefix: Option[String], val extract: Row => PgDbRoleSettingRow, val merge: (Row, PgDbRoleSettingRow) => Row)
  extends Relation[PgDbRoleSettingFields, PgDbRoleSettingRow, Row]
    with PgDbRoleSettingFields[Row] { outer =>

  override val setdatabase = new IdField[/* oid */ Long, Row](prefix, "setdatabase", None, Some("oid"))(x => extract(x).setdatabase, (row, value) => merge(row, extract(row).copy(setdatabase = value)))
  override val setrole = new IdField[/* oid */ Long, Row](prefix, "setrole", None, Some("oid"))(x => extract(x).setrole, (row, value) => merge(row, extract(row).copy(setrole = value)))
  override val setconfig = new OptField[Array[String], Row](prefix, "setconfig", None, Some("_text"))(x => extract(x).setconfig, (row, value) => merge(row, extract(row).copy(setconfig = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](setdatabase, setrole, setconfig)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgDbRoleSettingRow, merge: (NewRow, PgDbRoleSettingRow) => NewRow): PgDbRoleSettingStructure[NewRow] =
    new PgDbRoleSettingStructure(prefix, extract, merge)
}
