/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_inherits

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlInterpolator
import zio.jdbc.ZConnection
import zio.stream.ZStream

object PgInheritsRepoImpl extends PgInheritsRepo {
  override def delete(compositeId: PgInheritsId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_inherits where "inhrelid" = ??? AND "inhseqno" = ???""".update.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgInheritsFields, PgInheritsRow] = {
    DeleteBuilder("pg_catalog.pg_inherits", PgInheritsFields)
  }
  override def insert(unsaved: PgInheritsRow): ZIO[ZConnection, Throwable, PgInheritsRow] = {
    sql"""insert into pg_catalog.pg_inherits("inhrelid", "inhparent", "inhseqno", "inhdetachpending")
          values (???::oid, ???::oid, ???::int4, ???)
          returning "inhrelid", "inhparent", "inhseqno", "inhdetachpending"
       """.query(???).update.map(_ > 0)
  }
  override def select: SelectBuilder[PgInheritsFields, PgInheritsRow] = {
    SelectBuilderSql("pg_catalog.pg_inherits", PgInheritsFields, PgInheritsRow.read)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgInheritsRow] = {
    sql"""select "inhrelid", "inhparent", "inhseqno", "inhdetachpending" from pg_catalog.pg_inherits""".query[PgInheritsRow].selectStream
  }
  override def selectById(compositeId: PgInheritsId): ZIO[ZConnection, Throwable, Option[PgInheritsRow]] = {
    sql"""select "inhrelid", "inhparent", "inhseqno", "inhdetachpending" from pg_catalog.pg_inherits where "inhrelid" = ??? AND "inhseqno" = ???""".query[PgInheritsRow].selectOne
  }
  override def update(row: PgInheritsRow): ZIO[ZConnection, Throwable, Boolean] = {
    val compositeId = row.compositeId
    sql"""update pg_catalog.pg_inherits
          set "inhparent" = ???::oid,
              "inhdetachpending" = ???
          where "inhrelid" = ??? AND "inhseqno" = ???""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgInheritsFields, PgInheritsRow] = {
    UpdateBuilder("pg_catalog.pg_inherits", PgInheritsFields, PgInheritsRow.read)
  }
  override def upsert(unsaved: PgInheritsRow): ZIO[ZConnection, Throwable, PgInheritsRow] = {
    sql"""insert into pg_catalog.pg_inherits("inhrelid", "inhparent", "inhseqno", "inhdetachpending")
          values (
            ???::oid,
            ???::oid,
            ???::int4,
            ???
          )
          on conflict ("inhrelid", "inhseqno")
          do update set
            "inhparent" = EXCLUDED."inhparent",
            "inhdetachpending" = EXCLUDED."inhdetachpending"
          returning "inhrelid", "inhparent", "inhseqno", "inhdetachpending"
       """.query(???).unique
  }
}
