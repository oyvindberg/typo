/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_publication

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlInterpolator
import zio.jdbc.ZConnection
import zio.stream.ZStream

object PgPublicationRepoImpl extends PgPublicationRepo {
  override def delete(oid: PgPublicationId): ZIO[ZConnection, Throwable, Boolean] = {
    sql"""delete from pg_catalog.pg_publication where "oid" = ???""".update.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgPublicationFields, PgPublicationRow] = {
    DeleteBuilder("pg_catalog.pg_publication", PgPublicationFields)
  }
  override def insert(unsaved: PgPublicationRow): ZIO[ZConnection, Throwable, PgPublicationRow] = {
    sql"""insert into pg_catalog.pg_publication("oid", "pubname", "pubowner", "puballtables", "pubinsert", "pubupdate", "pubdelete", "pubtruncate", "pubviaroot")
          values (???::oid, ???::name, ???::oid, ???, ???, ???, ???, ???, ???)
          returning "oid", "pubname", "pubowner", "puballtables", "pubinsert", "pubupdate", "pubdelete", "pubtruncate", "pubviaroot"
       """.query(???).update.map(_ > 0)
  }
  override def select: SelectBuilder[PgPublicationFields, PgPublicationRow] = {
    SelectBuilderSql("pg_catalog.pg_publication", PgPublicationFields, PgPublicationRow.read)
  }
  override def selectAll: ZStream[ZConnection, Throwable, PgPublicationRow] = {
    sql"""select "oid", "pubname", "pubowner", "puballtables", "pubinsert", "pubupdate", "pubdelete", "pubtruncate", "pubviaroot" from pg_catalog.pg_publication""".query[PgPublicationRow].selectStream
  }
  override def selectById(oid: PgPublicationId): ZIO[ZConnection, Throwable, Option[PgPublicationRow]] = {
    sql"""select "oid", "pubname", "pubowner", "puballtables", "pubinsert", "pubupdate", "pubdelete", "pubtruncate", "pubviaroot" from pg_catalog.pg_publication where "oid" = ???""".query[PgPublicationRow].selectOne
  }
  override def selectByIds(oids: Array[PgPublicationId]): ZStream[ZConnection, Throwable, PgPublicationRow] = {
    sql"""select "oid", "pubname", "pubowner", "puballtables", "pubinsert", "pubupdate", "pubdelete", "pubtruncate", "pubviaroot" from pg_catalog.pg_publication where "oid" = ANY(${oids})""".query[PgPublicationRow].selectStream
  }
  override def selectByUnique(pubname: String): ZIO[ZConnection, Throwable, Option[PgPublicationRow]] = {
    sql"""select "pubname"
          from pg_catalog.pg_publication
          where "pubname" = ???
       """.query[PgPublicationRow].selectOne
  }
  override def update(row: PgPublicationRow): ZIO[ZConnection, Throwable, Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_publication
          set "pubname" = ???::name,
              "pubowner" = ???::oid,
              "puballtables" = ???,
              "pubinsert" = ???,
              "pubupdate" = ???,
              "pubdelete" = ???,
              "pubtruncate" = ???,
              "pubviaroot" = ???
          where "oid" = ???""".update.map(_ > 0)
  }
  override def update: UpdateBuilder[PgPublicationFields, PgPublicationRow] = {
    UpdateBuilder("pg_catalog.pg_publication", PgPublicationFields, PgPublicationRow.read)
  }
  override def upsert(unsaved: PgPublicationRow): ZIO[ZConnection, Throwable, PgPublicationRow] = {
    sql"""insert into pg_catalog.pg_publication("oid", "pubname", "pubowner", "puballtables", "pubinsert", "pubupdate", "pubdelete", "pubtruncate", "pubviaroot")
          values (
            ???::oid,
            ???::name,
            ???::oid,
            ???,
            ???,
            ???,
            ???,
            ???,
            ???
          )
          on conflict ("oid")
          do update set
            "pubname" = EXCLUDED."pubname",
            "pubowner" = EXCLUDED."pubowner",
            "puballtables" = EXCLUDED."puballtables",
            "pubinsert" = EXCLUDED."pubinsert",
            "pubupdate" = EXCLUDED."pubupdate",
            "pubdelete" = EXCLUDED."pubdelete",
            "pubtruncate" = EXCLUDED."pubtruncate",
            "pubviaroot" = EXCLUDED."pubviaroot"
          returning "oid", "pubname", "pubowner", "puballtables", "pubinsert", "pubupdate", "pubdelete", "pubtruncate", "pubviaroot"
       """.query(???).unique
  }
}
