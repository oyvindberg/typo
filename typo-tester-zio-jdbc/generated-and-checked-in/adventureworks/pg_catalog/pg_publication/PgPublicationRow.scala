/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_publication

import java.sql.ResultSet
import zio.jdbc.JdbcDecoder
import zio.json.JsonDecoder
import zio.json.JsonEncoder
import zio.json.ast.Json
import zio.json.internal.Write

case class PgPublicationRow(
  oid: PgPublicationId,
  pubname: String,
  pubowner: /* oid */ Long,
  puballtables: Boolean,
  pubinsert: Boolean,
  pubupdate: Boolean,
  pubdelete: Boolean,
  pubtruncate: Boolean,
  pubviaroot: Boolean
)

object PgPublicationRow {
  implicit lazy val jdbcDecoder: JdbcDecoder[PgPublicationRow] = new JdbcDecoder[PgPublicationRow] {
    override def unsafeDecode(columIndex: Int, rs: ResultSet): (Int, PgPublicationRow) =
      columIndex + 8 ->
        PgPublicationRow(
          oid = PgPublicationId.jdbcDecoder.unsafeDecode(columIndex + 0, rs)._2,
          pubname = JdbcDecoder.stringDecoder.unsafeDecode(columIndex + 1, rs)._2,
          pubowner = JdbcDecoder.longDecoder.unsafeDecode(columIndex + 2, rs)._2,
          puballtables = JdbcDecoder.booleanDecoder.unsafeDecode(columIndex + 3, rs)._2,
          pubinsert = JdbcDecoder.booleanDecoder.unsafeDecode(columIndex + 4, rs)._2,
          pubupdate = JdbcDecoder.booleanDecoder.unsafeDecode(columIndex + 5, rs)._2,
          pubdelete = JdbcDecoder.booleanDecoder.unsafeDecode(columIndex + 6, rs)._2,
          pubtruncate = JdbcDecoder.booleanDecoder.unsafeDecode(columIndex + 7, rs)._2,
          pubviaroot = JdbcDecoder.booleanDecoder.unsafeDecode(columIndex + 8, rs)._2
        )
  }
  implicit lazy val jsonDecoder: JsonDecoder[PgPublicationRow] = JsonDecoder[Json.Obj].mapOrFail { jsonObj =>
    val oid = jsonObj.get("oid").toRight("Missing field 'oid'").flatMap(_.as(PgPublicationId.jsonDecoder))
    val pubname = jsonObj.get("pubname").toRight("Missing field 'pubname'").flatMap(_.as(JsonDecoder.string))
    val pubowner = jsonObj.get("pubowner").toRight("Missing field 'pubowner'").flatMap(_.as(JsonDecoder.long))
    val puballtables = jsonObj.get("puballtables").toRight("Missing field 'puballtables'").flatMap(_.as(JsonDecoder.boolean))
    val pubinsert = jsonObj.get("pubinsert").toRight("Missing field 'pubinsert'").flatMap(_.as(JsonDecoder.boolean))
    val pubupdate = jsonObj.get("pubupdate").toRight("Missing field 'pubupdate'").flatMap(_.as(JsonDecoder.boolean))
    val pubdelete = jsonObj.get("pubdelete").toRight("Missing field 'pubdelete'").flatMap(_.as(JsonDecoder.boolean))
    val pubtruncate = jsonObj.get("pubtruncate").toRight("Missing field 'pubtruncate'").flatMap(_.as(JsonDecoder.boolean))
    val pubviaroot = jsonObj.get("pubviaroot").toRight("Missing field 'pubviaroot'").flatMap(_.as(JsonDecoder.boolean))
    if (oid.isRight && pubname.isRight && pubowner.isRight && puballtables.isRight && pubinsert.isRight && pubupdate.isRight && pubdelete.isRight && pubtruncate.isRight && pubviaroot.isRight)
      Right(PgPublicationRow(oid = oid.toOption.get, pubname = pubname.toOption.get, pubowner = pubowner.toOption.get, puballtables = puballtables.toOption.get, pubinsert = pubinsert.toOption.get, pubupdate = pubupdate.toOption.get, pubdelete = pubdelete.toOption.get, pubtruncate = pubtruncate.toOption.get, pubviaroot = pubviaroot.toOption.get))
    else Left(List[Either[String, Any]](oid, pubname, pubowner, puballtables, pubinsert, pubupdate, pubdelete, pubtruncate, pubviaroot).flatMap(_.left.toOption).mkString(", "))
  }
  implicit lazy val jsonEncoder: JsonEncoder[PgPublicationRow] = new JsonEncoder[PgPublicationRow] {
    override def unsafeEncode(a: PgPublicationRow, indent: Option[Int], out: Write): Unit = {
      out.write("{")
      out.write(""""oid":""")
      PgPublicationId.jsonEncoder.unsafeEncode(a.oid, indent, out)
      out.write(",")
      out.write(""""pubname":""")
      JsonEncoder.string.unsafeEncode(a.pubname, indent, out)
      out.write(",")
      out.write(""""pubowner":""")
      JsonEncoder.long.unsafeEncode(a.pubowner, indent, out)
      out.write(",")
      out.write(""""puballtables":""")
      JsonEncoder.boolean.unsafeEncode(a.puballtables, indent, out)
      out.write(",")
      out.write(""""pubinsert":""")
      JsonEncoder.boolean.unsafeEncode(a.pubinsert, indent, out)
      out.write(",")
      out.write(""""pubupdate":""")
      JsonEncoder.boolean.unsafeEncode(a.pubupdate, indent, out)
      out.write(",")
      out.write(""""pubdelete":""")
      JsonEncoder.boolean.unsafeEncode(a.pubdelete, indent, out)
      out.write(",")
      out.write(""""pubtruncate":""")
      JsonEncoder.boolean.unsafeEncode(a.pubtruncate, indent, out)
      out.write(",")
      out.write(""""pubviaroot":""")
      JsonEncoder.boolean.unsafeEncode(a.pubviaroot, indent, out)
      out.write("}")
    }
  }
}
