/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_partitioned_table

import adventureworks.customtypes.TypoInt2Vector
import adventureworks.customtypes.TypoOidVector
import adventureworks.customtypes.TypoPgNodeTree
import adventureworks.customtypes.TypoShort
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgPartitionedTableStructure[Row](val prefix: Option[String], val extract: Row => PgPartitionedTableRow, val merge: (Row, PgPartitionedTableRow) => Row)
  extends Relation[PgPartitionedTableFields, PgPartitionedTableRow, Row]
    with PgPartitionedTableFields[Row] { outer =>

  override val partrelid = new IdField[PgPartitionedTableId, Row](prefix, "partrelid", None, Some("oid"))(x => extract(x).partrelid, (row, value) => merge(row, extract(row).copy(partrelid = value)))
  override val partstrat = new Field[String, Row](prefix, "partstrat", None, Some("char"))(x => extract(x).partstrat, (row, value) => merge(row, extract(row).copy(partstrat = value)))
  override val partnatts = new Field[TypoShort, Row](prefix, "partnatts", None, Some("int2"))(x => extract(x).partnatts, (row, value) => merge(row, extract(row).copy(partnatts = value)))
  override val partdefid = new Field[/* oid */ Long, Row](prefix, "partdefid", None, Some("oid"))(x => extract(x).partdefid, (row, value) => merge(row, extract(row).copy(partdefid = value)))
  override val partattrs = new Field[TypoInt2Vector, Row](prefix, "partattrs", None, Some("int2vector"))(x => extract(x).partattrs, (row, value) => merge(row, extract(row).copy(partattrs = value)))
  override val partclass = new Field[TypoOidVector, Row](prefix, "partclass", None, Some("oidvector"))(x => extract(x).partclass, (row, value) => merge(row, extract(row).copy(partclass = value)))
  override val partcollation = new Field[TypoOidVector, Row](prefix, "partcollation", None, Some("oidvector"))(x => extract(x).partcollation, (row, value) => merge(row, extract(row).copy(partcollation = value)))
  override val partexprs = new OptField[TypoPgNodeTree, Row](prefix, "partexprs", None, Some("pg_node_tree"))(x => extract(x).partexprs, (row, value) => merge(row, extract(row).copy(partexprs = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](partrelid, partstrat, partnatts, partdefid, partattrs, partclass, partcollation, partexprs)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgPartitionedTableRow, merge: (NewRow, PgPartitionedTableRow) => NewRow): PgPartitionedTableStructure[NewRow] =
    new PgPartitionedTableStructure(prefix, extract, merge)
}
