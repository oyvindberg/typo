/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_opfamily

import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class PgOpfamilyStructure[Row](val prefix: Option[String], val extract: Row => PgOpfamilyRow, val merge: (Row, PgOpfamilyRow) => Row)
  extends Relation[PgOpfamilyFields, PgOpfamilyRow, Row]
    with PgOpfamilyFields[Row] { outer =>

  override val oid = new IdField[PgOpfamilyId, Row](prefix, "oid", None, Some("oid"))(x => extract(x).oid, (row, value) => merge(row, extract(row).copy(oid = value)))
  override val opfmethod = new Field[/* oid */ Long, Row](prefix, "opfmethod", None, Some("oid"))(x => extract(x).opfmethod, (row, value) => merge(row, extract(row).copy(opfmethod = value)))
  override val opfname = new Field[String, Row](prefix, "opfname", None, Some("name"))(x => extract(x).opfname, (row, value) => merge(row, extract(row).copy(opfname = value)))
  override val opfnamespace = new Field[/* oid */ Long, Row](prefix, "opfnamespace", None, Some("oid"))(x => extract(x).opfnamespace, (row, value) => merge(row, extract(row).copy(opfnamespace = value)))
  override val opfowner = new Field[/* oid */ Long, Row](prefix, "opfowner", None, Some("oid"))(x => extract(x).opfowner, (row, value) => merge(row, extract(row).copy(opfowner = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](oid, opfmethod, opfname, opfnamespace, opfowner)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgOpfamilyRow, merge: (NewRow, PgOpfamilyRow) => NewRow): PgOpfamilyStructure[NewRow] =
    new PgOpfamilyStructure(prefix, extract, merge)
}
