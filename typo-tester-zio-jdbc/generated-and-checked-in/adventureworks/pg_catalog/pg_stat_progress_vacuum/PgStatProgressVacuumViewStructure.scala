/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_progress_vacuum

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgStatProgressVacuumViewStructure[Row](val prefix: Option[String], val extract: Row => PgStatProgressVacuumViewRow, val merge: (Row, PgStatProgressVacuumViewRow) => Row)
  extends Relation[PgStatProgressVacuumViewFields, PgStatProgressVacuumViewRow, Row]
    with PgStatProgressVacuumViewFields[Row] { outer =>

  override val pid = new OptField[Int, Row](prefix, "pid", None, None)(x => extract(x).pid, (row, value) => merge(row, extract(row).copy(pid = value)))
  override val datid = new OptField[/* oid */ Long, Row](prefix, "datid", None, None)(x => extract(x).datid, (row, value) => merge(row, extract(row).copy(datid = value)))
  override val datname = new OptField[String, Row](prefix, "datname", None, None)(x => extract(x).datname, (row, value) => merge(row, extract(row).copy(datname = value)))
  override val relid = new OptField[/* oid */ Long, Row](prefix, "relid", None, None)(x => extract(x).relid, (row, value) => merge(row, extract(row).copy(relid = value)))
  override val phase = new OptField[String, Row](prefix, "phase", None, None)(x => extract(x).phase, (row, value) => merge(row, extract(row).copy(phase = value)))
  override val heapBlksTotal = new OptField[Long, Row](prefix, "heap_blks_total", None, None)(x => extract(x).heapBlksTotal, (row, value) => merge(row, extract(row).copy(heapBlksTotal = value)))
  override val heapBlksScanned = new OptField[Long, Row](prefix, "heap_blks_scanned", None, None)(x => extract(x).heapBlksScanned, (row, value) => merge(row, extract(row).copy(heapBlksScanned = value)))
  override val heapBlksVacuumed = new OptField[Long, Row](prefix, "heap_blks_vacuumed", None, None)(x => extract(x).heapBlksVacuumed, (row, value) => merge(row, extract(row).copy(heapBlksVacuumed = value)))
  override val indexVacuumCount = new OptField[Long, Row](prefix, "index_vacuum_count", None, None)(x => extract(x).indexVacuumCount, (row, value) => merge(row, extract(row).copy(indexVacuumCount = value)))
  override val maxDeadTuples = new OptField[Long, Row](prefix, "max_dead_tuples", None, None)(x => extract(x).maxDeadTuples, (row, value) => merge(row, extract(row).copy(maxDeadTuples = value)))
  override val numDeadTuples = new OptField[Long, Row](prefix, "num_dead_tuples", None, None)(x => extract(x).numDeadTuples, (row, value) => merge(row, extract(row).copy(numDeadTuples = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](pid, datid, datname, relid, phase, heapBlksTotal, heapBlksScanned, heapBlksVacuumed, indexVacuumCount, maxDeadTuples, numDeadTuples)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgStatProgressVacuumViewRow, merge: (NewRow, PgStatProgressVacuumViewRow) => NewRow): PgStatProgressVacuumViewStructure[NewRow] =
    new PgStatProgressVacuumViewStructure(prefix, extract, merge)
}
