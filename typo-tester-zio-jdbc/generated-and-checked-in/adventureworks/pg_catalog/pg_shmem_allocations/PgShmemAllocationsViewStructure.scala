/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_shmem_allocations

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgShmemAllocationsViewStructure[Row](val prefix: Option[String], val extract: Row => PgShmemAllocationsViewRow, val merge: (Row, PgShmemAllocationsViewRow) => Row)
  extends Relation[PgShmemAllocationsViewFields, PgShmemAllocationsViewRow, Row]
    with PgShmemAllocationsViewFields[Row] { outer =>

  override val name = new OptField[String, Row](prefix, "name", None, None)(x => extract(x).name, (row, value) => merge(row, extract(row).copy(name = value)))
  override val off = new OptField[Long, Row](prefix, "off", None, None)(x => extract(x).off, (row, value) => merge(row, extract(row).copy(off = value)))
  override val size = new OptField[Long, Row](prefix, "size", None, None)(x => extract(x).size, (row, value) => merge(row, extract(row).copy(size = value)))
  override val allocatedSize = new OptField[Long, Row](prefix, "allocated_size", None, None)(x => extract(x).allocatedSize, (row, value) => merge(row, extract(row).copy(allocatedSize = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](name, off, size, allocatedSize)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgShmemAllocationsViewRow, merge: (NewRow, PgShmemAllocationsViewRow) => NewRow): PgShmemAllocationsViewStructure[NewRow] =
    new PgShmemAllocationsViewStructure(prefix, extract, merge)
}
