/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_replication_origin

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `pg_catalog.pg_replication_origin` */
case class PgReplicationOriginId(value: /* oid */ Long) extends AnyVal
object PgReplicationOriginId {
  implicit lazy val bijection: Bijection[PgReplicationOriginId, /* oid */ Long] = Bijection[PgReplicationOriginId, /* oid */ Long](_.value)(PgReplicationOriginId.apply)
  implicit lazy val decoder: JsonDecoder[PgReplicationOriginId] = JsonDecoder.long.map(PgReplicationOriginId.apply)
  implicit lazy val encoder: JsonEncoder[PgReplicationOriginId] = JsonEncoder.long.contramap(_.value)
  implicit lazy val ordering: Ordering[PgReplicationOriginId] = Ordering.by(_.value)
}
