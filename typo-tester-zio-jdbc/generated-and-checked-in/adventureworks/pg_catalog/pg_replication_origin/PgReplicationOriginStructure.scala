/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_replication_origin

import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class PgReplicationOriginStructure[Row](val prefix: Option[String], val extract: Row => PgReplicationOriginRow, val merge: (Row, PgReplicationOriginRow) => Row)
  extends Relation[PgReplicationOriginFields, PgReplicationOriginRow, Row]
    with PgReplicationOriginFields[Row] { outer =>

  override val roident = new IdField[PgReplicationOriginId, Row](prefix, "roident", None, Some("oid"))(x => extract(x).roident, (row, value) => merge(row, extract(row).copy(roident = value)))
  override val roname = new Field[String, Row](prefix, "roname", None, None)(x => extract(x).roname, (row, value) => merge(row, extract(row).copy(roname = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](roident, roname)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgReplicationOriginRow, merge: (NewRow, PgReplicationOriginRow) => NewRow): PgReplicationOriginStructure[NewRow] =
    new PgReplicationOriginStructure(prefix, extract, merge)
}
