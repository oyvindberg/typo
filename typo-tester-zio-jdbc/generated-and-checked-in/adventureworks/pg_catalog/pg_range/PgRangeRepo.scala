/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_range

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgRangeRepo {
  def delete(rngtypid: PgRangeId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgRangeFields, PgRangeRow]
  def insert(unsaved: PgRangeRow): ZIO[ZConnection, Throwable, PgRangeRow]
  def select: SelectBuilder[PgRangeFields, PgRangeRow]
  def selectAll: ZStream[ZConnection, Throwable, PgRangeRow]
  def selectById(rngtypid: PgRangeId): ZIO[ZConnection, Throwable, Option[PgRangeRow]]
  def selectByIds(rngtypids: Array[PgRangeId]): ZStream[ZConnection, Throwable, PgRangeRow]
  def selectByUnique(rngmultitypid: /* oid */ Long): ZIO[ZConnection, Throwable, Option[PgRangeRow]]
  def update(row: PgRangeRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgRangeFields, PgRangeRow]
  def upsert(unsaved: PgRangeRow): ZIO[ZConnection, Throwable, UpdateResult[PgRangeRow]]
}
