/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_range

import adventureworks.customtypes.TypoRegproc
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class PgRangeStructure[Row](val prefix: Option[String], val extract: Row => PgRangeRow, val merge: (Row, PgRangeRow) => Row)
  extends Relation[PgRangeFields, PgRangeRow, Row]
    with PgRangeFields[Row] { outer =>

  override val rngtypid = new IdField[PgRangeId, Row](prefix, "rngtypid", None, Some("oid"))(x => extract(x).rngtypid, (row, value) => merge(row, extract(row).copy(rngtypid = value)))
  override val rngsubtype = new Field[/* oid */ Long, Row](prefix, "rngsubtype", None, Some("oid"))(x => extract(x).rngsubtype, (row, value) => merge(row, extract(row).copy(rngsubtype = value)))
  override val rngmultitypid = new Field[/* oid */ Long, Row](prefix, "rngmultitypid", None, Some("oid"))(x => extract(x).rngmultitypid, (row, value) => merge(row, extract(row).copy(rngmultitypid = value)))
  override val rngcollation = new Field[/* oid */ Long, Row](prefix, "rngcollation", None, Some("oid"))(x => extract(x).rngcollation, (row, value) => merge(row, extract(row).copy(rngcollation = value)))
  override val rngsubopc = new Field[/* oid */ Long, Row](prefix, "rngsubopc", None, Some("oid"))(x => extract(x).rngsubopc, (row, value) => merge(row, extract(row).copy(rngsubopc = value)))
  override val rngcanonical = new Field[TypoRegproc, Row](prefix, "rngcanonical", None, Some("regproc"))(x => extract(x).rngcanonical, (row, value) => merge(row, extract(row).copy(rngcanonical = value)))
  override val rngsubdiff = new Field[TypoRegproc, Row](prefix, "rngsubdiff", None, Some("regproc"))(x => extract(x).rngsubdiff, (row, value) => merge(row, extract(row).copy(rngsubdiff = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](rngtypid, rngsubtype, rngmultitypid, rngcollation, rngsubopc, rngcanonical, rngsubdiff)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgRangeRow, merge: (NewRow, PgRangeRow) => NewRow): PgRangeStructure[NewRow] =
    new PgRangeStructure(prefix, extract, merge)
}
