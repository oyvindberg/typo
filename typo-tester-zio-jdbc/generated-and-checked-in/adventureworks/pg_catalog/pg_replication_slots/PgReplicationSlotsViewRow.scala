/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_replication_slots

import adventureworks.customtypes.TypoXid
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgReplicationSlotsViewRow(
  slotName: /* nullability unknown */ Option[String],
  plugin: /* nullability unknown */ Option[String],
  slotType: /* nullability unknown */ Option[String],
  datoid: /* nullability unknown */ Option[/* oid */ Long],
  /** Points to [[pg_database.PgDatabaseRow.datname]] */
  database: Option[String],
  temporary: /* nullability unknown */ Option[Boolean],
  active: /* nullability unknown */ Option[Boolean],
  activePid: /* nullability unknown */ Option[Int],
  xmin: /* nullability unknown */ Option[TypoXid],
  catalogXmin: /* nullability unknown */ Option[TypoXid],
  restartLsn: /* nullability unknown */ Option[/* pg_lsn */ Long],
  confirmedFlushLsn: /* nullability unknown */ Option[/* pg_lsn */ Long],
  walStatus: /* nullability unknown */ Option[String],
  safeWalSize: /* nullability unknown */ Option[Long],
  twoPhase: /* nullability unknown */ Option[Boolean]
)

object PgReplicationSlotsViewRow {
  implicit lazy val decoder: JsonDecoder[PgReplicationSlotsViewRow] = DeriveJsonDecoder.gen[PgReplicationSlotsViewRow]
  implicit lazy val decoder: JsonDecoder[PgReplicationSlotsViewRow] = DeriveJsonEncoder.gen[PgReplicationSlotsViewRow]
}
