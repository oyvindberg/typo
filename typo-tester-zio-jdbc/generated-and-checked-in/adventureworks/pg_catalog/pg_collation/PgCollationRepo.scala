/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_collation

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgCollationRepo {
  def delete(oid: PgCollationId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgCollationFields, PgCollationRow]
  def insert(unsaved: PgCollationRow): ZIO[ZConnection, Throwable, PgCollationRow]
  def select: SelectBuilder[PgCollationFields, PgCollationRow]
  def selectAll: ZStream[ZConnection, Throwable, PgCollationRow]
  def selectById(oid: PgCollationId): ZIO[ZConnection, Throwable, Option[PgCollationRow]]
  def selectByIds(oids: Array[PgCollationId]): ZStream[ZConnection, Throwable, PgCollationRow]
  def selectByUnique(collname: String, collencoding: Int, collnamespace: /* oid */ Long): ZIO[ZConnection, Throwable, Option[PgCollationRow]]
  def update(row: PgCollationRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgCollationFields, PgCollationRow]
  def upsert(unsaved: PgCollationRow): ZIO[ZConnection, Throwable, UpdateResult[PgCollationRow]]
}
