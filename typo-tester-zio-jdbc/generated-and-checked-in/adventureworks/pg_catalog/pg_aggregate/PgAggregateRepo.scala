/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_aggregate

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgAggregateRepo {
  def delete(aggfnoid: PgAggregateId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgAggregateFields, PgAggregateRow]
  def insert(unsaved: PgAggregateRow): ZIO[ZConnection, Throwable, PgAggregateRow]
  def select: SelectBuilder[PgAggregateFields, PgAggregateRow]
  def selectAll: ZStream[ZConnection, Throwable, PgAggregateRow]
  def selectById(aggfnoid: PgAggregateId): ZIO[ZConnection, Throwable, Option[PgAggregateRow]]
  def selectByIds(aggfnoids: Array[PgAggregateId]): ZStream[ZConnection, Throwable, PgAggregateRow]
  def update(row: PgAggregateRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgAggregateFields, PgAggregateRow]
  def upsert(unsaved: PgAggregateRow): ZIO[ZConnection, Throwable, UpdateResult[PgAggregateRow]]
}
