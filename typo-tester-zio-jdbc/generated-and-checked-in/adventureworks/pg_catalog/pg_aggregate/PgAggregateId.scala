/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_aggregate

import adventureworks.customtypes.TypoRegproc
import typo.dsl.Bijection
import typo.dsl.ParameterMetaData
import zio.jdbc.JdbcDecoder
import zio.jdbc.JdbcEncoder
import zio.jdbc.SqlFragment.Setter
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `pg_catalog.pg_aggregate` */
case class PgAggregateId(value: TypoRegproc) extends AnyVal
object PgAggregateId {
  implicit lazy val arraySetter: Setter[Array[PgAggregateId]] = TypoRegproc.arraySetter.contramap(_.map(_.value))
  implicit lazy val bijection: Bijection[PgAggregateId, TypoRegproc] = Bijection[PgAggregateId, TypoRegproc](_.value)(PgAggregateId.apply)
  implicit lazy val jdbcDecoder: JdbcDecoder[PgAggregateId] = TypoRegproc.jdbcDecoder.map(PgAggregateId.apply)
  implicit lazy val jdbcEncoder: JdbcEncoder[PgAggregateId] = TypoRegproc.jdbcEncoder.contramap(_.value)
  implicit lazy val jsonDecoder: JsonDecoder[PgAggregateId] = TypoRegproc.jsonDecoder.map(PgAggregateId.apply)
  implicit lazy val jsonEncoder: JsonEncoder[PgAggregateId] = TypoRegproc.jsonEncoder.contramap(_.value)
  implicit def ordering(implicit O0: Ordering[TypoRegproc]): Ordering[PgAggregateId] = Ordering.by(_.value)
  implicit lazy val parameterMetadata: ParameterMetaData[PgAggregateId] = ParameterMetaData.instance[PgAggregateId](TypoRegproc.parameterMetadata.sqlType, TypoRegproc.parameterMetadata.jdbcType)
  implicit lazy val setter: Setter[PgAggregateId] = TypoRegproc.setter.contramap(_.value)
}
