/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_user_mapping

import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait PgUserMappingRepo {
  def delete(oid: PgUserMappingId): ZIO[ZConnection, Throwable, Boolean]
  def delete: DeleteBuilder[PgUserMappingFields, PgUserMappingRow]
  def insert(unsaved: PgUserMappingRow): ZIO[ZConnection, Throwable, PgUserMappingRow]
  def select: SelectBuilder[PgUserMappingFields, PgUserMappingRow]
  def selectAll: ZStream[ZConnection, Throwable, PgUserMappingRow]
  def selectById(oid: PgUserMappingId): ZIO[ZConnection, Throwable, Option[PgUserMappingRow]]
  def selectByIds(oids: Array[PgUserMappingId]): ZStream[ZConnection, Throwable, PgUserMappingRow]
  def selectByUnique(umuser: /* oid */ Long, umserver: /* oid */ Long): ZIO[ZConnection, Throwable, Option[PgUserMappingRow]]
  def update(row: PgUserMappingRow): ZIO[ZConnection, Throwable, Boolean]
  def update: UpdateBuilder[PgUserMappingFields, PgUserMappingRow]
  def upsert(unsaved: PgUserMappingRow): ZIO[ZConnection, Throwable, UpdateResult[PgUserMappingRow]]
}
