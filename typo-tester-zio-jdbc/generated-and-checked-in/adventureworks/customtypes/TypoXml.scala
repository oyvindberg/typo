/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package customtypes

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** XML */
case class TypoXml(value: String)

object TypoXml {
  implicit lazy val bijection: Bijection[TypoXml, String] = Bijection[TypoXml, String](_.value)(TypoXml.apply)
  implicit lazy val decoder: JsonDecoder[TypoXml] = JsonDecoder.string.map(TypoXml.apply)
  implicit lazy val encoder: JsonEncoder[TypoXml] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[TypoXml] = Ordering.by(_.value)
}
