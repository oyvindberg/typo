/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package customtypes

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Interval type in PostgreSQL */
case class TypoInterval(years: Int, months: Int, days: Int, hours: Int, minutes: Int, seconds: Double)

object TypoInterval {
  implicit lazy val decoder: JsonDecoder[TypoInterval] = DeriveJsonDecoder.gen[TypoInterval]
  implicit lazy val decoder: JsonDecoder[TypoInterval] = DeriveJsonEncoder.gen[TypoInterval]
  implicit lazy val ordering: Ordering[TypoInterval] = Ordering.by(x => (x.years, x.months, x.days, x.hours, x.minutes, x.seconds))
}
