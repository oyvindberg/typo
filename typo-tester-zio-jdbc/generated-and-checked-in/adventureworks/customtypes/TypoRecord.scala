/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package customtypes

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** record (via PGObject) */
case class TypoRecord(value: String)

object TypoRecord {
  implicit lazy val bijection: Bijection[TypoRecord, String] = Bijection[TypoRecord, String](_.value)(TypoRecord.apply)
  implicit lazy val decoder: JsonDecoder[TypoRecord] = JsonDecoder.string.map(TypoRecord.apply)
  implicit lazy val encoder: JsonEncoder[TypoRecord] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[TypoRecord] = Ordering.by(_.value)
}
