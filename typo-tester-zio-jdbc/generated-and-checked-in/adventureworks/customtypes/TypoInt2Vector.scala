/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package customtypes

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** int2vector (via PGObject) */
case class TypoInt2Vector(value: String)

object TypoInt2Vector {
  implicit lazy val bijection: Bijection[TypoInt2Vector, String] = Bijection[TypoInt2Vector, String](_.value)(TypoInt2Vector.apply)
  implicit lazy val decoder: JsonDecoder[TypoInt2Vector] = JsonDecoder.string.map(TypoInt2Vector.apply)
  implicit lazy val encoder: JsonEncoder[TypoInt2Vector] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[TypoInt2Vector] = Ordering.by(_.value)
}
