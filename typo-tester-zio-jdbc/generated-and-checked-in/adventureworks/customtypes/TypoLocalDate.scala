/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package customtypes

import java.time.LocalDate
import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** This is `java.time.LocalDate`, but transferred to and from postgres as strings. The reason is that postgres driver and db libs are broken */
case class TypoLocalDate(value: LocalDate)

object TypoLocalDate {
  def now = TypoLocalDate(LocalDate.now)
  def apply(str: String): TypoLocalDate = TypoLocalDate(LocalDate.parse(str))
  implicit lazy val bijection: Bijection[TypoLocalDate, LocalDate] = Bijection[TypoLocalDate, LocalDate](_.value)(TypoLocalDate.apply)
  implicit lazy val decoder: JsonDecoder[TypoLocalDate] = JsonDecoder.decodeLocalDate.map(TypoLocalDate.apply)
  implicit lazy val encoder: JsonEncoder[TypoLocalDate] = JsonEncoder.localDate.contramap(_.value)
  implicit def ordering(implicit O0: Ordering[LocalDate]): Ordering[TypoLocalDate] = Ordering.by(_.value)
}
