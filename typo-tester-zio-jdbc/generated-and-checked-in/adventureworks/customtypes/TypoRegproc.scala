/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package customtypes

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** regproc (via PGObject) */
case class TypoRegproc(value: String)

object TypoRegproc {
  implicit lazy val bijection: Bijection[TypoRegproc, String] = Bijection[TypoRegproc, String](_.value)(TypoRegproc.apply)
  implicit lazy val decoder: JsonDecoder[TypoRegproc] = JsonDecoder.string.map(TypoRegproc.apply)
  implicit lazy val encoder: JsonEncoder[TypoRegproc] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[TypoRegproc] = Ordering.by(_.value)
}
