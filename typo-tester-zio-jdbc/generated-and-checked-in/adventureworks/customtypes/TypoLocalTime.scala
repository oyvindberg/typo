/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package customtypes

import java.time.LocalTime
import java.time.temporal.ChronoUnit
import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** This is `java.time.LocalTime`, but with microsecond precision and transferred to and from postgres as strings. The reason is that postgres driver and db libs are broken */
case class TypoLocalTime(value: LocalTime)

object TypoLocalTime {
  def apply(value: LocalTime): TypoLocalTime = new TypoLocalTime(value.truncatedTo(ChronoUnit.MICROS))
  def apply(str: String): TypoLocalTime = apply(LocalTime.parse(str))
  def now: TypoLocalTime = TypoLocalTime(LocalTime.now)
  implicit lazy val bijection: Bijection[TypoLocalTime, LocalTime] = Bijection[TypoLocalTime, LocalTime](_.value)(TypoLocalTime.apply)
  implicit lazy val decoder: JsonDecoder[TypoLocalTime] = JsonDecoder.localTime.map(TypoLocalTime.apply)
  implicit lazy val encoder: JsonEncoder[TypoLocalTime] = JsonEncoder.localTime.contramap(_.value)
  implicit def ordering(implicit O0: Ordering[LocalTime]): Ordering[TypoLocalTime] = Ordering.by(_.value)
}
