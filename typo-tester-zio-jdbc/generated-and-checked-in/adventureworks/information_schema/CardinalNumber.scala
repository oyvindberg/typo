/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Domain `information_schema.cardinal_number`
  * Constraint: CHECK ((VALUE >= 0))
  */
case class CardinalNumber(value: Int) extends AnyVal
object CardinalNumber {
  implicit lazy val bijection: Bijection[CardinalNumber, Int] = Bijection[CardinalNumber, Int](_.value)(CardinalNumber.apply)
  implicit lazy val decoder: JsonDecoder[CardinalNumber] = JsonDecoder.int.map(CardinalNumber.apply)
  implicit lazy val encoder: JsonEncoder[CardinalNumber] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[CardinalNumber] = Ordering.by(_.value)
}