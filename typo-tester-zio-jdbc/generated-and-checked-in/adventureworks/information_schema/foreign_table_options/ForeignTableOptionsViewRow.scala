/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package foreign_table_options

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class ForeignTableOptionsViewRow(
  /** Points to [[`_pg_foreign_tables`.PgForeignTablesViewRow.foreignTableCatalog]] */
  foreignTableCatalog: Option[/* nullability unknown */ String],
  /** Points to [[`_pg_foreign_tables`.PgForeignTablesViewRow.foreignTableSchema]] */
  foreignTableSchema: Option[/* nullability unknown */ String],
  /** Points to [[`_pg_foreign_tables`.PgForeignTablesViewRow.foreignTableName]] */
  foreignTableName: Option[/* nullability unknown */ String],
  optionName: /* nullability unknown */ Option[String],
  optionValue: /* nullability unknown */ Option[String]
)

object ForeignTableOptionsViewRow {
  implicit lazy val decoder: JsonDecoder[ForeignTableOptionsViewRow] = DeriveJsonDecoder.gen[ForeignTableOptionsViewRow]
  implicit lazy val decoder: JsonDecoder[ForeignTableOptionsViewRow] = DeriveJsonEncoder.gen[ForeignTableOptionsViewRow]
}
