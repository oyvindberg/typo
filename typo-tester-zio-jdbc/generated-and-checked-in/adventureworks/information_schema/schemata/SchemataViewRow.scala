/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package schemata

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class SchemataViewRow(
  catalogName: /* nullability unknown */ Option[String],
  schemaName: /* nullability unknown */ Option[String],
  schemaOwner: /* nullability unknown */ Option[String],
  defaultCharacterSetCatalog: /* nullability unknown */ Option[String],
  defaultCharacterSetSchema: /* nullability unknown */ Option[String],
  defaultCharacterSetName: /* nullability unknown */ Option[String],
  sqlPath: /* nullability unknown */ Option[String]
)

object SchemataViewRow {
  implicit lazy val decoder: JsonDecoder[SchemataViewRow] = DeriveJsonDecoder.gen[SchemataViewRow]
  implicit lazy val decoder: JsonDecoder[SchemataViewRow] = DeriveJsonEncoder.gen[SchemataViewRow]
}
