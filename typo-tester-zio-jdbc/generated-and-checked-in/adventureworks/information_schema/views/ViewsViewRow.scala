/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package views

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class ViewsViewRow(
  tableCatalog: /* nullability unknown */ Option[String],
  tableSchema: /* nullability unknown */ Option[String],
  tableName: /* nullability unknown */ Option[String],
  viewDefinition: /* nullability unknown */ Option[String],
  checkOption: /* nullability unknown */ Option[String],
  isUpdatable: /* nullability unknown */ Option[/* max 3 chars */ String],
  isInsertableInto: /* nullability unknown */ Option[/* max 3 chars */ String],
  isTriggerUpdatable: /* nullability unknown */ Option[/* max 3 chars */ String],
  isTriggerDeletable: /* nullability unknown */ Option[/* max 3 chars */ String],
  isTriggerInsertableInto: /* nullability unknown */ Option[/* max 3 chars */ String]
)

object ViewsViewRow {
  implicit lazy val decoder: JsonDecoder[ViewsViewRow] = DeriveJsonDecoder.gen[ViewsViewRow]
  implicit lazy val decoder: JsonDecoder[ViewsViewRow] = DeriveJsonEncoder.gen[ViewsViewRow]
}
