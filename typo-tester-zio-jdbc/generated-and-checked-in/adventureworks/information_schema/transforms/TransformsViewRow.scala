/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package transforms

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class TransformsViewRow(
  udtCatalog: /* nullability unknown */ Option[String],
  udtSchema: /* nullability unknown */ Option[String],
  udtName: /* nullability unknown */ Option[String],
  specificCatalog: /* nullability unknown */ Option[String],
  specificSchema: /* nullability unknown */ Option[String],
  specificName: /* nullability unknown */ Option[String],
  groupName: /* nullability unknown */ Option[String],
  transformType: /* nullability unknown */ Option[String]
)

object TransformsViewRow {
  implicit lazy val decoder: JsonDecoder[TransformsViewRow] = DeriveJsonDecoder.gen[TransformsViewRow]
  implicit lazy val decoder: JsonDecoder[TransformsViewRow] = DeriveJsonEncoder.gen[TransformsViewRow]
}
