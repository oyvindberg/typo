/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package triggered_update_columns

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class TriggeredUpdateColumnsViewStructure[Row](val prefix: Option[String], val extract: Row => TriggeredUpdateColumnsViewRow, val merge: (Row, TriggeredUpdateColumnsViewRow) => Row)
  extends Relation[TriggeredUpdateColumnsViewFields, TriggeredUpdateColumnsViewRow, Row]
    with TriggeredUpdateColumnsViewFields[Row] { outer =>

  override val triggerCatalog = new OptField[String, Row](prefix, "trigger_catalog", None, None)(x => extract(x).triggerCatalog, (row, value) => merge(row, extract(row).copy(triggerCatalog = value)))
  override val triggerSchema = new OptField[String, Row](prefix, "trigger_schema", None, None)(x => extract(x).triggerSchema, (row, value) => merge(row, extract(row).copy(triggerSchema = value)))
  override val triggerName = new OptField[String, Row](prefix, "trigger_name", None, None)(x => extract(x).triggerName, (row, value) => merge(row, extract(row).copy(triggerName = value)))
  override val eventObjectCatalog = new OptField[String, Row](prefix, "event_object_catalog", None, None)(x => extract(x).eventObjectCatalog, (row, value) => merge(row, extract(row).copy(eventObjectCatalog = value)))
  override val eventObjectSchema = new OptField[String, Row](prefix, "event_object_schema", None, None)(x => extract(x).eventObjectSchema, (row, value) => merge(row, extract(row).copy(eventObjectSchema = value)))
  override val eventObjectTable = new OptField[String, Row](prefix, "event_object_table", None, None)(x => extract(x).eventObjectTable, (row, value) => merge(row, extract(row).copy(eventObjectTable = value)))
  override val eventObjectColumn = new OptField[String, Row](prefix, "event_object_column", None, None)(x => extract(x).eventObjectColumn, (row, value) => merge(row, extract(row).copy(eventObjectColumn = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](triggerCatalog, triggerSchema, triggerName, eventObjectCatalog, eventObjectSchema, eventObjectTable, eventObjectColumn)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => TriggeredUpdateColumnsViewRow, merge: (NewRow, TriggeredUpdateColumnsViewRow) => NewRow): TriggeredUpdateColumnsViewStructure[NewRow] =
    new TriggeredUpdateColumnsViewStructure(prefix, extract, merge)
}
