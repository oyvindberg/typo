/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routines

import adventureworks.customtypes.TypoInstant
import typo.dsl.SqlExpr.OptField

trait RoutinesViewFields[Row] {
  val specificCatalog: OptField[String, Row]
  val specificSchema: OptField[String, Row]
  val specificName: OptField[String, Row]
  val routineCatalog: OptField[String, Row]
  val routineSchema: OptField[String, Row]
  val routineName: OptField[String, Row]
  val routineType: OptField[String, Row]
  val moduleCatalog: OptField[String, Row]
  val moduleSchema: OptField[String, Row]
  val moduleName: OptField[String, Row]
  val udtCatalog: OptField[String, Row]
  val udtSchema: OptField[String, Row]
  val udtName: OptField[String, Row]
  val dataType: OptField[String, Row]
  val characterMaximumLength: OptField[Int, Row]
  val characterOctetLength: OptField[Int, Row]
  val characterSetCatalog: OptField[String, Row]
  val characterSetSchema: OptField[String, Row]
  val characterSetName: OptField[String, Row]
  val collationCatalog: OptField[String, Row]
  val collationSchema: OptField[String, Row]
  val collationName: OptField[String, Row]
  val numericPrecision: OptField[Int, Row]
  val numericPrecisionRadix: OptField[Int, Row]
  val numericScale: OptField[Int, Row]
  val datetimePrecision: OptField[Int, Row]
  val intervalType: OptField[String, Row]
  val intervalPrecision: OptField[Int, Row]
  val typeUdtCatalog: OptField[String, Row]
  val typeUdtSchema: OptField[String, Row]
  val typeUdtName: OptField[String, Row]
  val scopeCatalog: OptField[String, Row]
  val scopeSchema: OptField[String, Row]
  val scopeName: OptField[String, Row]
  val maximumCardinality: OptField[Int, Row]
  val dtdIdentifier: OptField[String, Row]
  val routineBody: OptField[String, Row]
  val routineDefinition: OptField[String, Row]
  val externalName: OptField[String, Row]
  val externalLanguage: OptField[String, Row]
  val parameterStyle: OptField[String, Row]
  val isDeterministic: OptField[/* max 3 chars */ String, Row]
  val sqlDataAccess: OptField[String, Row]
  val isNullCall: OptField[/* max 3 chars */ String, Row]
  val sqlPath: OptField[String, Row]
  val schemaLevelRoutine: OptField[/* max 3 chars */ String, Row]
  val maxDynamicResultSets: OptField[Int, Row]
  val isUserDefinedCast: OptField[/* max 3 chars */ String, Row]
  val isImplicitlyInvocable: OptField[/* max 3 chars */ String, Row]
  val securityType: OptField[String, Row]
  val toSqlSpecificCatalog: OptField[String, Row]
  val toSqlSpecificSchema: OptField[String, Row]
  val toSqlSpecificName: OptField[String, Row]
  val asLocator: OptField[/* max 3 chars */ String, Row]
  val created: OptField[TypoInstant, Row]
  val lastAltered: OptField[TypoInstant, Row]
  val newSavepointLevel: OptField[/* max 3 chars */ String, Row]
  val isUdtDependent: OptField[/* max 3 chars */ String, Row]
  val resultCastFromDataType: OptField[String, Row]
  val resultCastAsLocator: OptField[/* max 3 chars */ String, Row]
  val resultCastCharMaxLength: OptField[Int, Row]
  val resultCastCharOctetLength: OptField[Int, Row]
  val resultCastCharSetCatalog: OptField[String, Row]
  val resultCastCharSetSchema: OptField[String, Row]
  val resultCastCharSetName: OptField[String, Row]
  val resultCastCollationCatalog: OptField[String, Row]
  val resultCastCollationSchema: OptField[String, Row]
  val resultCastCollationName: OptField[String, Row]
  val resultCastNumericPrecision: OptField[Int, Row]
  val resultCastNumericPrecisionRadix: OptField[Int, Row]
  val resultCastNumericScale: OptField[Int, Row]
  val resultCastDatetimePrecision: OptField[Int, Row]
  val resultCastIntervalType: OptField[String, Row]
  val resultCastIntervalPrecision: OptField[Int, Row]
  val resultCastTypeUdtCatalog: OptField[String, Row]
  val resultCastTypeUdtSchema: OptField[String, Row]
  val resultCastTypeUdtName: OptField[String, Row]
  val resultCastScopeCatalog: OptField[String, Row]
  val resultCastScopeSchema: OptField[String, Row]
  val resultCastScopeName: OptField[String, Row]
  val resultCastMaximumCardinality: OptField[Int, Row]
  val resultCastDtdIdentifier: OptField[String, Row]
}
object RoutinesViewFields extends RoutinesViewStructure[RoutinesViewRow](None, identity, (_, x) => x)

