/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package `_pg_foreign_tables`

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgForeignTablesViewRow(
  foreignTableCatalog: /* nullability unknown */ Option[String],
  foreignTableSchema: /* nullability unknown */ Option[String],
  foreignTableName: /* nullability unknown */ Option[String],
  /** Points to [[pg_catalog.pg_foreign_table.PgForeignTableRow.ftoptions]] */
  ftoptions: Option[Array[String]],
  foreignServerCatalog: /* nullability unknown */ Option[String],
  foreignServerName: /* nullability unknown */ Option[String],
  authorizationIdentifier: /* nullability unknown */ Option[String]
)

object PgForeignTablesViewRow {
  implicit lazy val decoder: JsonDecoder[PgForeignTablesViewRow] = DeriveJsonDecoder.gen[PgForeignTablesViewRow]
  implicit lazy val decoder: JsonDecoder[PgForeignTablesViewRow] = DeriveJsonEncoder.gen[PgForeignTablesViewRow]
}
