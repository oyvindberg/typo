/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package sql_parts

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.YesOrNo
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlFragment.Segment
import zio.jdbc.SqlFragment.Setter
import zio.jdbc.ZConnection
import zio.jdbc.sqlInterpolator
import zio.stream.ZStream

object SqlPartsRepoImpl extends SqlPartsRepo {
  override def delete: DeleteBuilder[SqlPartsFields, SqlPartsRow] = {
    DeleteBuilder("information_schema.sql_parts", SqlPartsFields)
  }
  override def insert(unsaved: SqlPartsRow): ZIO[ZConnection, Throwable, SqlPartsRow] = {
    sql"""insert into information_schema.sql_parts("feature_id", "feature_name", "is_supported", "is_verified_by", "comments")
          values (${Segment.paramSegment(unsaved.featureId)(Setter.optionParamSetter(CharacterData.setter))}::varchar, ${Segment.paramSegment(unsaved.featureName)(Setter.optionParamSetter(CharacterData.setter))}::varchar, ${Segment.paramSegment(unsaved.isSupported)(Setter.optionParamSetter(YesOrNo.setter))}::varchar, ${Segment.paramSegment(unsaved.isVerifiedBy)(Setter.optionParamSetter(CharacterData.setter))}::varchar, ${Segment.paramSegment(unsaved.comments)(Setter.optionParamSetter(CharacterData.setter))}::varchar)
          returning "feature_id", "feature_name", "is_supported", "is_verified_by", "comments"
       """.insertReturning(SqlPartsRow.jdbcDecoder).map(_.updatedKeys.head)
  }
  override def select: SelectBuilder[SqlPartsFields, SqlPartsRow] = {
    SelectBuilderSql("information_schema.sql_parts", SqlPartsFields, SqlPartsRow.jdbcDecoder)
  }
  override def selectAll: ZStream[ZConnection, Throwable, SqlPartsRow] = {
    sql"""select "feature_id", "feature_name", "is_supported", "is_verified_by", "comments" from information_schema.sql_parts""".query(SqlPartsRow.jdbcDecoder).selectStream
  }
  override def update: UpdateBuilder[SqlPartsFields, SqlPartsRow] = {
    UpdateBuilder("information_schema.sql_parts", SqlPartsFields, SqlPartsRow.jdbcDecoder)
  }
}
