/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package sql_parts

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.YesOrNo
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class SqlPartsStructure[Row](val prefix: Option[String], val extract: Row => SqlPartsRow, val merge: (Row, SqlPartsRow) => Row)
  extends Relation[SqlPartsFields, SqlPartsRow, Row]
    with SqlPartsFields[Row] { outer =>

  override val featureId = new OptField[CharacterData, Row](prefix, "feature_id", None, Some("varchar"))(x => extract(x).featureId, (row, value) => merge(row, extract(row).copy(featureId = value)))
  override val featureName = new OptField[CharacterData, Row](prefix, "feature_name", None, Some("varchar"))(x => extract(x).featureName, (row, value) => merge(row, extract(row).copy(featureName = value)))
  override val isSupported = new OptField[YesOrNo, Row](prefix, "is_supported", None, Some("varchar"))(x => extract(x).isSupported, (row, value) => merge(row, extract(row).copy(isSupported = value)))
  override val isVerifiedBy = new OptField[CharacterData, Row](prefix, "is_verified_by", None, Some("varchar"))(x => extract(x).isVerifiedBy, (row, value) => merge(row, extract(row).copy(isVerifiedBy = value)))
  override val comments = new OptField[CharacterData, Row](prefix, "comments", None, Some("varchar"))(x => extract(x).comments, (row, value) => merge(row, extract(row).copy(comments = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](featureId, featureName, isSupported, isVerifiedBy, comments)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => SqlPartsRow, merge: (NewRow, SqlPartsRow) => NewRow): SqlPartsStructure[NewRow] =
    new SqlPartsStructure(prefix, extract, merge)
}
