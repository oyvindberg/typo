/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package referential_constraints

import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class ReferentialConstraintsViewRow(
  constraintCatalog: /* nullability unknown */ Option[String],
  constraintSchema: /* nullability unknown */ Option[String],
  constraintName: /* nullability unknown */ Option[String],
  uniqueConstraintCatalog: /* nullability unknown */ Option[String],
  uniqueConstraintSchema: /* nullability unknown */ Option[String],
  uniqueConstraintName: /* nullability unknown */ Option[String],
  matchOption: /* nullability unknown */ Option[String],
  updateRule: /* nullability unknown */ Option[String],
  deleteRule: /* nullability unknown */ Option[String]
)

object ReferentialConstraintsViewRow {
  implicit lazy val decoder: JsonDecoder[ReferentialConstraintsViewRow] = DeriveJsonDecoder.gen[ReferentialConstraintsViewRow]
  implicit lazy val decoder: JsonDecoder[ReferentialConstraintsViewRow] = DeriveJsonEncoder.gen[ReferentialConstraintsViewRow]
}
