/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package `_pg_foreign_servers`

import adventureworks.pg_catalog.pg_foreign_server.PgForeignServerId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgForeignServersViewRow(
  /** Points to [[pg_catalog.pg_foreign_server.PgForeignServerRow.oid]] */
  oid: PgForeignServerId,
  /** Points to [[pg_catalog.pg_foreign_server.PgForeignServerRow.srvoptions]] */
  srvoptions: Option[Array[String]],
  foreignServerCatalog: /* nullability unknown */ Option[String],
  foreignServerName: /* nullability unknown */ Option[String],
  foreignDataWrapperCatalog: /* nullability unknown */ Option[String],
  foreignDataWrapperName: /* nullability unknown */ Option[String],
  foreignServerType: /* nullability unknown */ Option[String],
  foreignServerVersion: /* nullability unknown */ Option[String],
  authorizationIdentifier: /* nullability unknown */ Option[String]
)

object PgForeignServersViewRow {
  implicit lazy val decoder: JsonDecoder[PgForeignServersViewRow] = DeriveJsonDecoder.gen[PgForeignServersViewRow]
  implicit lazy val decoder: JsonDecoder[PgForeignServersViewRow] = DeriveJsonEncoder.gen[PgForeignServersViewRow]
}
