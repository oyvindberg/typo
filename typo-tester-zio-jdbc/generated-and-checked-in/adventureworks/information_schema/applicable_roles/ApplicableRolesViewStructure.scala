/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package applicable_roles

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class ApplicableRolesViewStructure[Row](val prefix: Option[String], val extract: Row => ApplicableRolesViewRow, val merge: (Row, ApplicableRolesViewRow) => Row)
  extends Relation[ApplicableRolesViewFields, ApplicableRolesViewRow, Row]
    with ApplicableRolesViewFields[Row] { outer =>

  override val grantee = new OptField[String, Row](prefix, "grantee", None, None)(x => extract(x).grantee, (row, value) => merge(row, extract(row).copy(grantee = value)))
  override val roleName = new OptField[String, Row](prefix, "role_name", None, None)(x => extract(x).roleName, (row, value) => merge(row, extract(row).copy(roleName = value)))
  override val isGrantable = new OptField[/* max 3 chars */ String, Row](prefix, "is_grantable", None, None)(x => extract(x).isGrantable, (row, value) => merge(row, extract(row).copy(isGrantable = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](grantee, roleName, isGrantable)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => ApplicableRolesViewRow, merge: (NewRow, ApplicableRolesViewRow) => NewRow): ApplicableRolesViewStructure[NewRow] =
    new ApplicableRolesViewStructure(prefix, extract, merge)
}
