/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package sql_implementation_info

import adventureworks.information_schema.CardinalNumber
import adventureworks.information_schema.CharacterData
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.SqlFragment.Segment
import zio.jdbc.SqlFragment.Setter
import zio.jdbc.ZConnection
import zio.jdbc.sqlInterpolator
import zio.stream.ZStream

object SqlImplementationInfoRepoImpl extends SqlImplementationInfoRepo {
  override def delete: DeleteBuilder[SqlImplementationInfoFields, SqlImplementationInfoRow] = {
    DeleteBuilder("information_schema.sql_implementation_info", SqlImplementationInfoFields)
  }
  override def insert(unsaved: SqlImplementationInfoRow): ZIO[ZConnection, Throwable, SqlImplementationInfoRow] = {
    sql"""insert into information_schema.sql_implementation_info("implementation_info_id", "implementation_info_name", "integer_value", "character_value", "comments")
          values (${Segment.paramSegment(unsaved.implementationInfoId)(Setter.optionParamSetter(CharacterData.setter))}::varchar, ${Segment.paramSegment(unsaved.implementationInfoName)(Setter.optionParamSetter(CharacterData.setter))}::varchar, ${Segment.paramSegment(unsaved.integerValue)(Setter.optionParamSetter(CardinalNumber.setter))}::int4, ${Segment.paramSegment(unsaved.characterValue)(Setter.optionParamSetter(CharacterData.setter))}::varchar, ${Segment.paramSegment(unsaved.comments)(Setter.optionParamSetter(CharacterData.setter))}::varchar)
          returning "implementation_info_id", "implementation_info_name", "integer_value", "character_value", "comments"
       """.insertReturning(SqlImplementationInfoRow.jdbcDecoder).map(_.updatedKeys.head)
  }
  override def select: SelectBuilder[SqlImplementationInfoFields, SqlImplementationInfoRow] = {
    SelectBuilderSql("information_schema.sql_implementation_info", SqlImplementationInfoFields, SqlImplementationInfoRow.jdbcDecoder)
  }
  override def selectAll: ZStream[ZConnection, Throwable, SqlImplementationInfoRow] = {
    sql"""select "implementation_info_id", "implementation_info_name", "integer_value", "character_value", "comments" from information_schema.sql_implementation_info""".query(SqlImplementationInfoRow.jdbcDecoder).selectStream
  }
  override def update: UpdateBuilder[SqlImplementationInfoFields, SqlImplementationInfoRow] = {
    UpdateBuilder("information_schema.sql_implementation_info", SqlImplementationInfoFields, SqlImplementationInfoRow.jdbcDecoder)
  }
}
