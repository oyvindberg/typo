/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package `_pg_foreign_data_wrappers`

import adventureworks.pg_catalog.pg_foreign_data_wrapper.PgForeignDataWrapperId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PgForeignDataWrappersViewRow(
  /** Points to [[pg_catalog.pg_foreign_data_wrapper.PgForeignDataWrapperRow.oid]] */
  oid: PgForeignDataWrapperId,
  /** Points to [[pg_catalog.pg_foreign_data_wrapper.PgForeignDataWrapperRow.fdwowner]] */
  fdwowner: /* oid */ Long,
  /** Points to [[pg_catalog.pg_foreign_data_wrapper.PgForeignDataWrapperRow.fdwoptions]] */
  fdwoptions: Option[Array[String]],
  foreignDataWrapperCatalog: /* nullability unknown */ Option[String],
  foreignDataWrapperName: /* nullability unknown */ Option[String],
  authorizationIdentifier: /* nullability unknown */ Option[String],
  foreignDataWrapperLanguage: /* nullability unknown */ Option[String]
)

object PgForeignDataWrappersViewRow {
  implicit lazy val decoder: JsonDecoder[PgForeignDataWrappersViewRow] = DeriveJsonDecoder.gen[PgForeignDataWrappersViewRow]
  implicit lazy val decoder: JsonDecoder[PgForeignDataWrappersViewRow] = DeriveJsonEncoder.gen[PgForeignDataWrappersViewRow]
}
