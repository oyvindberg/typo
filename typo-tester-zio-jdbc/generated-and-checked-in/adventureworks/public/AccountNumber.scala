/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Domain `public.AccountNumber`
  * No constraint
  */
case class AccountNumber(value: String) extends AnyVal
object AccountNumber {
  implicit lazy val bijection: Bijection[AccountNumber, String] = Bijection[AccountNumber, String](_.value)(AccountNumber.apply)
  implicit lazy val decoder: JsonDecoder[AccountNumber] = JsonDecoder.string.map(AccountNumber.apply)
  implicit lazy val encoder: JsonEncoder[AccountNumber] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[AccountNumber] = Ordering.by(_.value)
}