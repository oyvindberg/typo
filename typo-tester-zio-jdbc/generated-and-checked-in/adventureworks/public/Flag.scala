/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Domain `public.Flag`
  * No constraint
  */
case class Flag(value: Boolean) extends AnyVal
object Flag {
  implicit lazy val bijection: Bijection[Flag, Boolean] = Bijection[Flag, Boolean](_.value)(Flag.apply)
  implicit lazy val decoder: JsonDecoder[Flag] = JsonDecoder.boolean.map(Flag.apply)
  implicit lazy val encoder: JsonEncoder[Flag] = JsonEncoder.boolean.contramap(_.value)
  implicit lazy val ordering: Ordering[Flag] = Ordering.by(_.value)
}