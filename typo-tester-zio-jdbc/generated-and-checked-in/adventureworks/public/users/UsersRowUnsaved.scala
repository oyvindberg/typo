/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package users

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoInstant
import adventureworks.customtypes.TypoUnknownCitext
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** This class corresponds to a row in table `public.users` which has not been persisted yet */
case class UsersRowUnsaved(
  userId: UsersId,
  name: String,
  lastName: Option[String],
  email: TypoUnknownCitext,
  password: String,
  verifiedOn: Option[TypoInstant],
  /** Default: now() */
  createdAt: Defaulted[TypoInstant] = Defaulted.UseDefault
) {
  def toRow(createdAtDefault: => TypoInstant): UsersRow =
    UsersRow(
      userId = userId,
      name = name,
      lastName = lastName,
      email = email,
      password = password,
      verifiedOn = verifiedOn,
      createdAt = createdAt match {
                    case Defaulted.UseDefault => createdAtDefault
                    case Defaulted.Provided(value) => value
                  }
    )
}
object UsersRowUnsaved {
  implicit lazy val decoder: JsonDecoder[UsersRowUnsaved] = DeriveJsonDecoder.gen[UsersRowUnsaved]
  implicit lazy val decoder: JsonDecoder[UsersRowUnsaved] = DeriveJsonEncoder.gen[UsersRowUnsaved]
}
