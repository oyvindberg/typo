/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Domain `public.NameStyle`
  * No constraint
  */
case class NameStyle(value: Boolean) extends AnyVal
object NameStyle {
  implicit lazy val bijection: Bijection[NameStyle, Boolean] = Bijection[NameStyle, Boolean](_.value)(NameStyle.apply)
  implicit lazy val decoder: JsonDecoder[NameStyle] = JsonDecoder.boolean.map(NameStyle.apply)
  implicit lazy val encoder: JsonEncoder[NameStyle] = JsonEncoder.boolean.contramap(_.value)
  implicit lazy val ordering: Ordering[NameStyle] = Ordering.by(_.value)
}