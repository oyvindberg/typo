/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package c

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.customer.CustomerId
import adventureworks.sales.salesterritory.SalesterritoryId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class CViewRow(
  /** Points to [[sales.customer.CustomerRow.customerid]] */
  id: CustomerId,
  /** Points to [[sales.customer.CustomerRow.customerid]] */
  customerid: CustomerId,
  /** Points to [[sales.customer.CustomerRow.personid]] */
  personid: Option[BusinessentityId],
  /** Points to [[sales.customer.CustomerRow.storeid]] */
  storeid: Option[BusinessentityId],
  /** Points to [[sales.customer.CustomerRow.territoryid]] */
  territoryid: Option[SalesterritoryId],
  /** Points to [[sales.customer.CustomerRow.rowguid]] */
  rowguid: TypoUUID,
  /** Points to [[sales.customer.CustomerRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object CViewRow {
  implicit lazy val decoder: JsonDecoder[CViewRow] = DeriveJsonDecoder.gen[CViewRow]
  implicit lazy val decoder: JsonDecoder[CViewRow] = DeriveJsonEncoder.gen[CViewRow]
}
