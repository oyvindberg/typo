/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sci

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.sales.shoppingcartitem.ShoppingcartitemId
import java.sql.ResultSet
import zio.jdbc.JdbcDecoder
import zio.json.JsonDecoder
import zio.json.JsonEncoder
import zio.json.ast.Json
import zio.json.internal.Write

case class SciViewRow(
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.shoppingcartitemid]] */
  id: ShoppingcartitemId,
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.shoppingcartitemid]] */
  shoppingcartitemid: ShoppingcartitemId,
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.shoppingcartid]] */
  shoppingcartid: /* max 50 chars */ String,
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.quantity]] */
  quantity: Int,
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.productid]] */
  productid: ProductId,
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.datecreated]] */
  datecreated: TypoLocalDateTime,
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object SciViewRow {
  implicit lazy val jdbcDecoder: JdbcDecoder[SciViewRow] = new JdbcDecoder[SciViewRow] {
    override def unsafeDecode(columIndex: Int, rs: ResultSet): (Int, SciViewRow) =
      columIndex + 6 ->
        SciViewRow(
          id = ShoppingcartitemId.jdbcDecoder.unsafeDecode(columIndex + 0, rs)._2,
          shoppingcartitemid = ShoppingcartitemId.jdbcDecoder.unsafeDecode(columIndex + 1, rs)._2,
          shoppingcartid = JdbcDecoder.stringDecoder.unsafeDecode(columIndex + 2, rs)._2,
          quantity = JdbcDecoder.intDecoder.unsafeDecode(columIndex + 3, rs)._2,
          productid = ProductId.jdbcDecoder.unsafeDecode(columIndex + 4, rs)._2,
          datecreated = TypoLocalDateTime.jdbcDecoder.unsafeDecode(columIndex + 5, rs)._2,
          modifieddate = TypoLocalDateTime.jdbcDecoder.unsafeDecode(columIndex + 6, rs)._2
        )
  }
  implicit lazy val jsonDecoder: JsonDecoder[SciViewRow] = JsonDecoder[Json.Obj].mapOrFail { jsonObj =>
    val id = jsonObj.get("id").toRight("Missing field 'id'").flatMap(_.as(ShoppingcartitemId.jsonDecoder))
    val shoppingcartitemid = jsonObj.get("shoppingcartitemid").toRight("Missing field 'shoppingcartitemid'").flatMap(_.as(ShoppingcartitemId.jsonDecoder))
    val shoppingcartid = jsonObj.get("shoppingcartid").toRight("Missing field 'shoppingcartid'").flatMap(_.as(JsonDecoder.string))
    val quantity = jsonObj.get("quantity").toRight("Missing field 'quantity'").flatMap(_.as(JsonDecoder.int))
    val productid = jsonObj.get("productid").toRight("Missing field 'productid'").flatMap(_.as(ProductId.jsonDecoder))
    val datecreated = jsonObj.get("datecreated").toRight("Missing field 'datecreated'").flatMap(_.as(TypoLocalDateTime.jsonDecoder))
    val modifieddate = jsonObj.get("modifieddate").toRight("Missing field 'modifieddate'").flatMap(_.as(TypoLocalDateTime.jsonDecoder))
    if (id.isRight && shoppingcartitemid.isRight && shoppingcartid.isRight && quantity.isRight && productid.isRight && datecreated.isRight && modifieddate.isRight)
      Right(SciViewRow(id = id.toOption.get, shoppingcartitemid = shoppingcartitemid.toOption.get, shoppingcartid = shoppingcartid.toOption.get, quantity = quantity.toOption.get, productid = productid.toOption.get, datecreated = datecreated.toOption.get, modifieddate = modifieddate.toOption.get))
    else Left(List[Either[String, Any]](id, shoppingcartitemid, shoppingcartid, quantity, productid, datecreated, modifieddate).flatMap(_.left.toOption).mkString(", "))
  }
  implicit lazy val jsonEncoder: JsonEncoder[SciViewRow] = new JsonEncoder[SciViewRow] {
    override def unsafeEncode(a: SciViewRow, indent: Option[Int], out: Write): Unit = {
      out.write("{")
      out.write(""""id":""")
      ShoppingcartitemId.jsonEncoder.unsafeEncode(a.id, indent, out)
      out.write(",")
      out.write(""""shoppingcartitemid":""")
      ShoppingcartitemId.jsonEncoder.unsafeEncode(a.shoppingcartitemid, indent, out)
      out.write(",")
      out.write(""""shoppingcartid":""")
      JsonEncoder.string.unsafeEncode(a.shoppingcartid, indent, out)
      out.write(",")
      out.write(""""quantity":""")
      JsonEncoder.int.unsafeEncode(a.quantity, indent, out)
      out.write(",")
      out.write(""""productid":""")
      ProductId.jsonEncoder.unsafeEncode(a.productid, indent, out)
      out.write(",")
      out.write(""""datecreated":""")
      TypoLocalDateTime.jsonEncoder.unsafeEncode(a.datecreated, indent, out)
      out.write(",")
      out.write(""""modifieddate":""")
      TypoLocalDateTime.jsonEncoder.unsafeEncode(a.modifieddate, indent, out)
      out.write("}")
    }
  }
}
