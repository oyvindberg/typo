/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package s

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.customtypes.TypoXml
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class SViewRow(
  /** Points to [[sales.store.StoreRow.businessentityid]] */
  id: BusinessentityId,
  /** Points to [[sales.store.StoreRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Points to [[sales.store.StoreRow.name]] */
  name: Name,
  /** Points to [[sales.store.StoreRow.salespersonid]] */
  salespersonid: Option[BusinessentityId],
  /** Points to [[sales.store.StoreRow.demographics]] */
  demographics: Option[TypoXml],
  /** Points to [[sales.store.StoreRow.rowguid]] */
  rowguid: TypoUUID,
  /** Points to [[sales.store.StoreRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object SViewRow {
  implicit lazy val decoder: JsonDecoder[SViewRow] = DeriveJsonDecoder.gen[SViewRow]
  implicit lazy val decoder: JsonDecoder[SViewRow] = DeriveJsonEncoder.gen[SViewRow]
}
