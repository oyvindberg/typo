/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package sr

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.production.scrapreason.ScrapreasonId
import adventureworks.public.Name
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.Structure.Relation

trait SrViewFields {
  def id: Field[ScrapreasonId, SrViewRow]
  def scrapreasonid: Field[ScrapreasonId, SrViewRow]
  def name: Field[Name, SrViewRow]
  def modifieddate: Field[TypoLocalDateTime, SrViewRow]
}

object SrViewFields {
  lazy val structure: Relation[SrViewFields, SrViewRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[SrViewFields, SrViewRow] {
  
    override lazy val fields: SrViewFields = new SrViewFields {
      override def id = Field[ScrapreasonId, SrViewRow](_path, "id", None, None, x => x.id, (row, value) => row.copy(id = value))
      override def scrapreasonid = Field[ScrapreasonId, SrViewRow](_path, "scrapreasonid", None, None, x => x.scrapreasonid, (row, value) => row.copy(scrapreasonid = value))
      override def name = Field[Name, SrViewRow](_path, "name", None, None, x => x.name, (row, value) => row.copy(name = value))
      override def modifieddate = Field[TypoLocalDateTime, SrViewRow](_path, "modifieddate", Some("text"), None, x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, SrViewRow]] =
      List[FieldLikeNoHkt[?, SrViewRow]](fields.id, fields.scrapreasonid, fields.name, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
