/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pi

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.customtypes.TypoUUID
import adventureworks.production.location.LocationId
import adventureworks.production.product.ProductId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class PiViewRow(
  /** Points to [[production.productinventory.ProductinventoryRow.productid]] */
  id: ProductId,
  /** Points to [[production.productinventory.ProductinventoryRow.productid]] */
  productid: ProductId,
  /** Points to [[production.productinventory.ProductinventoryRow.locationid]] */
  locationid: LocationId,
  /** Points to [[production.productinventory.ProductinventoryRow.shelf]] */
  shelf: /* max 10 chars */ String,
  /** Points to [[production.productinventory.ProductinventoryRow.bin]] */
  bin: TypoShort,
  /** Points to [[production.productinventory.ProductinventoryRow.quantity]] */
  quantity: TypoShort,
  /** Points to [[production.productinventory.ProductinventoryRow.rowguid]] */
  rowguid: TypoUUID,
  /** Points to [[production.productinventory.ProductinventoryRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object PiViewRow {
  implicit lazy val decoder: JsonDecoder[PiViewRow] = DeriveJsonDecoder.gen[PiViewRow]
  implicit lazy val decoder: JsonDecoder[PiViewRow] = DeriveJsonEncoder.gen[PiViewRow]
}
