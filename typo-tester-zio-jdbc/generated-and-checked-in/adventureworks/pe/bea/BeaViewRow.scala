/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package bea

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.person.address.AddressId
import adventureworks.person.addresstype.AddresstypeId
import adventureworks.person.businessentity.BusinessentityId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class BeaViewRow(
  /** Points to [[person.businessentityaddress.BusinessentityaddressRow.businessentityid]] */
  id: BusinessentityId,
  /** Points to [[person.businessentityaddress.BusinessentityaddressRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Points to [[person.businessentityaddress.BusinessentityaddressRow.addressid]] */
  addressid: AddressId,
  /** Points to [[person.businessentityaddress.BusinessentityaddressRow.addresstypeid]] */
  addresstypeid: AddresstypeId,
  /** Points to [[person.businessentityaddress.BusinessentityaddressRow.rowguid]] */
  rowguid: TypoUUID,
  /** Points to [[person.businessentityaddress.BusinessentityaddressRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object BeaViewRow {
  implicit lazy val decoder: JsonDecoder[BeaViewRow] = DeriveJsonDecoder.gen[BeaViewRow]
  implicit lazy val decoder: JsonDecoder[BeaViewRow] = DeriveJsonEncoder.gen[BeaViewRow]
}
