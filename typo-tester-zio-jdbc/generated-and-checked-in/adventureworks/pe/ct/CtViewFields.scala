/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package ct

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.person.contacttype.ContacttypeId
import adventureworks.public.Name
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.Structure.Relation

trait CtViewFields {
  def id: Field[ContacttypeId, CtViewRow]
  def contacttypeid: Field[ContacttypeId, CtViewRow]
  def name: Field[Name, CtViewRow]
  def modifieddate: Field[TypoLocalDateTime, CtViewRow]
}

object CtViewFields {
  lazy val structure: Relation[CtViewFields, CtViewRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[CtViewFields, CtViewRow] {
  
    override lazy val fields: CtViewFields = new CtViewFields {
      override def id = Field[ContacttypeId, CtViewRow](_path, "id", None, None, x => x.id, (row, value) => row.copy(id = value))
      override def contacttypeid = Field[ContacttypeId, CtViewRow](_path, "contacttypeid", None, None, x => x.contacttypeid, (row, value) => row.copy(contacttypeid = value))
      override def name = Field[Name, CtViewRow](_path, "name", None, None, x => x.name, (row, value) => row.copy(name = value))
      override def modifieddate = Field[TypoLocalDateTime, CtViewRow](_path, "modifieddate", Some("text"), None, x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, CtViewRow]] =
      List[FieldLikeNoHkt[?, CtViewRow]](fields.id, fields.contacttypeid, fields.name, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
