/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package scrapreason

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.public.Name
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class ScrapreasonStructure[Row](val prefix: Option[String], val extract: Row => ScrapreasonRow, val merge: (Row, ScrapreasonRow) => Row)
  extends Relation[ScrapreasonFields, ScrapreasonRow, Row]
    with ScrapreasonFields[Row] { outer =>

  override val scrapreasonid = new IdField[ScrapreasonId, Row](prefix, "scrapreasonid", None, Some("int4"))(x => extract(x).scrapreasonid, (row, value) => merge(row, extract(row).copy(scrapreasonid = value)))
  override val name = new Field[Name, Row](prefix, "name", None, Some("varchar"))(x => extract(x).name, (row, value) => merge(row, extract(row).copy(name = value)))
  override val modifieddate = new Field[TypoLocalDateTime, Row](prefix, "modifieddate", Some("text"), Some("timestamp"))(x => extract(x).modifieddate, (row, value) => merge(row, extract(row).copy(modifieddate = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](scrapreasonid, name, modifieddate)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => ScrapreasonRow, merge: (NewRow, ScrapreasonRow) => NewRow): ScrapreasonStructure[NewRow] =
    new ScrapreasonStructure(prefix, extract, merge)
}
