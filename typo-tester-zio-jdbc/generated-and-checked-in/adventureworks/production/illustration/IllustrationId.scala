/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package illustration

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `production.illustration` */
case class IllustrationId(value: Int) extends AnyVal
object IllustrationId {
  implicit lazy val bijection: Bijection[IllustrationId, Int] = Bijection[IllustrationId, Int](_.value)(IllustrationId.apply)
  implicit lazy val decoder: JsonDecoder[IllustrationId] = JsonDecoder.int.map(IllustrationId.apply)
  implicit lazy val encoder: JsonEncoder[IllustrationId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[IllustrationId] = Ordering.by(_.value)
}
