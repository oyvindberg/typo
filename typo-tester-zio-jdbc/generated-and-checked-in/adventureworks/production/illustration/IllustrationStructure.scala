/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package illustration

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoXml
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class IllustrationStructure[Row](val prefix: Option[String], val extract: Row => IllustrationRow, val merge: (Row, IllustrationRow) => Row)
  extends Relation[IllustrationFields, IllustrationRow, Row]
    with IllustrationFields[Row] { outer =>

  override val illustrationid = new IdField[IllustrationId, Row](prefix, "illustrationid", None, Some("int4"))(x => extract(x).illustrationid, (row, value) => merge(row, extract(row).copy(illustrationid = value)))
  override val diagram = new OptField[TypoXml, Row](prefix, "diagram", None, Some("xml"))(x => extract(x).diagram, (row, value) => merge(row, extract(row).copy(diagram = value)))
  override val modifieddate = new Field[TypoLocalDateTime, Row](prefix, "modifieddate", Some("text"), Some("timestamp"))(x => extract(x).modifieddate, (row, value) => merge(row, extract(row).copy(modifieddate = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](illustrationid, diagram, modifieddate)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => IllustrationRow, merge: (NewRow, IllustrationRow) => NewRow): IllustrationStructure[NewRow] =
    new IllustrationStructure(prefix, extract, merge)
}
