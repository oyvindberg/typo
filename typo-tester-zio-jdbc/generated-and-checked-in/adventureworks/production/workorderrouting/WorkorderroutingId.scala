/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package workorderrouting

import adventureworks.customtypes.TypoShort
import adventureworks.production.workorder.WorkorderId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `production.workorderrouting` */
case class WorkorderroutingId(workorderid: WorkorderId, productid: Int, operationsequence: TypoShort)
object WorkorderroutingId {
  implicit lazy val decoder: JsonDecoder[WorkorderroutingId] = DeriveJsonDecoder.gen[WorkorderroutingId]
  implicit lazy val decoder: JsonDecoder[WorkorderroutingId] = DeriveJsonEncoder.gen[WorkorderroutingId]
  implicit def ordering(implicit O0: Ordering[TypoShort]): Ordering[WorkorderroutingId] = Ordering.by(x => (x.workorderid, x.productid, x.operationsequence))
}
