/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productcosthistory

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.production.product.ProductId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `production.productcosthistory` */
case class ProductcosthistoryId(productid: ProductId, startdate: TypoLocalDateTime)
object ProductcosthistoryId {
  implicit lazy val decoder: JsonDecoder[ProductcosthistoryId] = DeriveJsonDecoder.gen[ProductcosthistoryId]
  implicit lazy val decoder: JsonDecoder[ProductcosthistoryId] = DeriveJsonEncoder.gen[ProductcosthistoryId]
  implicit def ordering(implicit O0: Ordering[TypoLocalDateTime]): Ordering[ProductcosthistoryId] = Ordering.by(x => (x.productid, x.startdate))
}
