/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productsubcategory

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `production.productsubcategory` */
case class ProductsubcategoryId(value: Int) extends AnyVal
object ProductsubcategoryId {
  implicit lazy val bijection: Bijection[ProductsubcategoryId, Int] = Bijection[ProductsubcategoryId, Int](_.value)(ProductsubcategoryId.apply)
  implicit lazy val decoder: JsonDecoder[ProductsubcategoryId] = JsonDecoder.int.map(ProductsubcategoryId.apply)
  implicit lazy val encoder: JsonEncoder[ProductsubcategoryId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[ProductsubcategoryId] = Ordering.by(_.value)
}
