/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productproductphoto

import adventureworks.production.product.ProductId
import adventureworks.production.productphoto.ProductphotoId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `production.productproductphoto` */
case class ProductproductphotoId(productid: ProductId, productphotoid: ProductphotoId)
object ProductproductphotoId {
  implicit lazy val decoder: JsonDecoder[ProductproductphotoId] = DeriveJsonDecoder.gen[ProductproductphotoId]
  implicit lazy val decoder: JsonDecoder[ProductproductphotoId] = DeriveJsonEncoder.gen[ProductproductphotoId]
  implicit lazy val ordering: Ordering[ProductproductphotoId] = Ordering.by(x => (x.productid, x.productphotoid))
}
