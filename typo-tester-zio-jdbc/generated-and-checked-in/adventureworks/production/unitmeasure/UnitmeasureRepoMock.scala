/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package unitmeasure

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.ZConnection
import zio.stream.ZStream

class UnitmeasureRepoMock(toRow: Function1[UnitmeasureRowUnsaved, UnitmeasureRow],
                          map: scala.collection.mutable.Map[UnitmeasureId, UnitmeasureRow] = scala.collection.mutable.Map.empty) extends UnitmeasureRepo {
  override def delete(unitmeasurecode: UnitmeasureId): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def delete: DeleteBuilder[UnitmeasureFields, UnitmeasureRow] = {
    ???
  }
  override def insert(unsaved: UnitmeasureRow): ZIO[ZConnection, Throwable, UnitmeasureRow] = {
    ???
  }
  override def insert(unsaved: UnitmeasureRowUnsaved): ZIO[ZConnection, Throwable, UnitmeasureRow] = {
    ???
  }
  override def select: SelectBuilder[UnitmeasureFields, UnitmeasureRow] = {
    ???
  }
  override def selectAll: ZStream[ZConnection, Throwable, UnitmeasureRow] = {
    ???
  }
  override def selectById(unitmeasurecode: UnitmeasureId): ZIO[ZConnection, Throwable, Option[UnitmeasureRow]] = {
    ???
  }
  override def selectByIds(unitmeasurecodes: Array[UnitmeasureId]): ZStream[ZConnection, Throwable, UnitmeasureRow] = {
    ???
  }
  override def update(row: UnitmeasureRow): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def update: UpdateBuilder[UnitmeasureFields, UnitmeasureRow] = {
    ???
  }
  override def upsert(unsaved: UnitmeasureRow): ZIO[ZConnection, Throwable, UnitmeasureRow] = {
    ???
  }
}
