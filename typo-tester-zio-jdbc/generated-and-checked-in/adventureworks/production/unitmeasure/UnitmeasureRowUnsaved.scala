/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package unitmeasure

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.public.Name
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** This class corresponds to a row in table `production.unitmeasure` which has not been persisted yet */
case class UnitmeasureRowUnsaved(
  /** Primary key. */
  unitmeasurecode: UnitmeasureId,
  /** Unit of measure description. */
  name: Name,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(modifieddateDefault: => TypoLocalDateTime): UnitmeasureRow =
    UnitmeasureRow(
      unitmeasurecode = unitmeasurecode,
      name = name,
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object UnitmeasureRowUnsaved {
  implicit lazy val decoder: JsonDecoder[UnitmeasureRowUnsaved] = DeriveJsonDecoder.gen[UnitmeasureRowUnsaved]
  implicit lazy val decoder: JsonDecoder[UnitmeasureRowUnsaved] = DeriveJsonEncoder.gen[UnitmeasureRowUnsaved]
}
