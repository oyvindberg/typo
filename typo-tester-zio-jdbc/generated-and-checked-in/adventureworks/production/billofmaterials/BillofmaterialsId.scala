/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package billofmaterials

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `production.billofmaterials` */
case class BillofmaterialsId(value: Int) extends AnyVal
object BillofmaterialsId {
  implicit lazy val bijection: Bijection[BillofmaterialsId, Int] = Bijection[BillofmaterialsId, Int](_.value)(BillofmaterialsId.apply)
  implicit lazy val decoder: JsonDecoder[BillofmaterialsId] = JsonDecoder.int.map(BillofmaterialsId.apply)
  implicit lazy val encoder: JsonEncoder[BillofmaterialsId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[BillofmaterialsId] = Ordering.by(_.value)
}
