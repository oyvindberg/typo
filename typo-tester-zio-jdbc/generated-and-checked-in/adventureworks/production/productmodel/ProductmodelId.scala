/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productmodel

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `production.productmodel` */
case class ProductmodelId(value: Int) extends AnyVal
object ProductmodelId {
  implicit lazy val bijection: Bijection[ProductmodelId, Int] = Bijection[ProductmodelId, Int](_.value)(ProductmodelId.apply)
  implicit lazy val decoder: JsonDecoder[ProductmodelId] = JsonDecoder.int.map(ProductmodelId.apply)
  implicit lazy val encoder: JsonEncoder[ProductmodelId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[ProductmodelId] = Ordering.by(_.value)
}
