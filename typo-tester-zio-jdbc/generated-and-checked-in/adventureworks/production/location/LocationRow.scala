/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package location

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.public.Name
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class LocationRow(
  /** Primary key for Location records. */
  locationid: LocationId,
  /** Location description. */
  name: Name,
  /** Standard hourly cost of the manufacturing location.
      Constraint CK_Location_CostRate affecting columns "costrate":  ((costrate >= 0.00)) */
  costrate: BigDecimal,
  /** Work capacity (in hours) of the manufacturing location.
      Constraint CK_Location_Availability affecting columns "availability":  ((availability >= 0.00)) */
  availability: BigDecimal,
  modifieddate: TypoLocalDateTime
)

object LocationRow {
  implicit lazy val decoder: JsonDecoder[LocationRow] = DeriveJsonDecoder.gen[LocationRow]
  implicit lazy val decoder: JsonDecoder[LocationRow] = DeriveJsonEncoder.gen[LocationRow]
}
