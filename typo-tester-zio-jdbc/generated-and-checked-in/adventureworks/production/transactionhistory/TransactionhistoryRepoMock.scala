/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package transactionhistory

import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.ZConnection
import zio.stream.ZStream

class TransactionhistoryRepoMock(toRow: Function1[TransactionhistoryRowUnsaved, TransactionhistoryRow],
                                 map: scala.collection.mutable.Map[TransactionhistoryId, TransactionhistoryRow] = scala.collection.mutable.Map.empty) extends TransactionhistoryRepo {
  override def delete(transactionid: TransactionhistoryId): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def delete: DeleteBuilder[TransactionhistoryFields, TransactionhistoryRow] = {
    ???
  }
  override def insert(unsaved: TransactionhistoryRow): ZIO[ZConnection, Throwable, TransactionhistoryRow] = {
    ???
  }
  override def insert(unsaved: TransactionhistoryRowUnsaved): ZIO[ZConnection, Throwable, TransactionhistoryRow] = {
    ???
  }
  override def select: SelectBuilder[TransactionhistoryFields, TransactionhistoryRow] = {
    ???
  }
  override def selectAll: ZStream[ZConnection, Throwable, TransactionhistoryRow] = {
    ???
  }
  override def selectById(transactionid: TransactionhistoryId): ZIO[ZConnection, Throwable, Option[TransactionhistoryRow]] = {
    ???
  }
  override def selectByIds(transactionids: Array[TransactionhistoryId]): ZStream[ZConnection, Throwable, TransactionhistoryRow] = {
    ???
  }
  override def update(row: TransactionhistoryRow): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def update: UpdateBuilder[TransactionhistoryFields, TransactionhistoryRow] = {
    ???
  }
  override def upsert(unsaved: TransactionhistoryRow): ZIO[ZConnection, Throwable, TransactionhistoryRow] = {
    ???
  }
}
