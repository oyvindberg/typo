/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductmodelcatalogdescription

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.production.productmodel.ProductmodelId
import adventureworks.public.Name
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait VproductmodelcatalogdescriptionViewFields[Row] {
  val productmodelid: Field[ProductmodelId, Row]
  val name: Field[Name, Row]
  val Summary: OptField[String, Row]
  val manufacturer: OptField[String, Row]
  val copyright: OptField[/* max 30 chars */ String, Row]
  val producturl: OptField[/* max 256 chars */ String, Row]
  val warrantyperiod: OptField[/* max 256 chars */ String, Row]
  val warrantydescription: OptField[/* max 256 chars */ String, Row]
  val noofyears: OptField[/* max 256 chars */ String, Row]
  val maintenancedescription: OptField[/* max 256 chars */ String, Row]
  val wheel: OptField[/* max 256 chars */ String, Row]
  val saddle: OptField[/* max 256 chars */ String, Row]
  val pedal: OptField[/* max 256 chars */ String, Row]
  val bikeframe: OptField[String, Row]
  val crankset: OptField[/* max 256 chars */ String, Row]
  val pictureangle: OptField[/* max 256 chars */ String, Row]
  val picturesize: OptField[/* max 256 chars */ String, Row]
  val productphotoid: OptField[/* max 256 chars */ String, Row]
  val material: OptField[/* max 256 chars */ String, Row]
  val color: OptField[/* max 256 chars */ String, Row]
  val productline: OptField[/* max 256 chars */ String, Row]
  val style: OptField[/* max 256 chars */ String, Row]
  val riderexperience: OptField[/* max 1024 chars */ String, Row]
  val rowguid: Field[TypoUUID, Row]
  val modifieddate: Field[TypoLocalDateTime, Row]
}

object VproductmodelcatalogdescriptionViewFields {
  val structure: Relation[VproductmodelcatalogdescriptionViewFields, VproductmodelcatalogdescriptionViewRow, VproductmodelcatalogdescriptionViewRow] = 
    new Impl(None, identity, (_, x) => x)
    
  private final class Impl[Row](val prefix: Option[String], val extract: Row => VproductmodelcatalogdescriptionViewRow, val merge: (Row, VproductmodelcatalogdescriptionViewRow) => Row)
    extends Relation[VproductmodelcatalogdescriptionViewFields, VproductmodelcatalogdescriptionViewRow, Row] { 
  
    override val fields: VproductmodelcatalogdescriptionViewFields[Row] = new VproductmodelcatalogdescriptionViewFields[Row] {
      override val productmodelid = new Field[ProductmodelId, Row](prefix, "productmodelid", None, None)(x => extract(x).productmodelid, (row, value) => merge(row, extract(row).copy(productmodelid = value)))
      override val name = new Field[Name, Row](prefix, "name", None, None)(x => extract(x).name, (row, value) => merge(row, extract(row).copy(name = value)))
      override val Summary = new OptField[String, Row](prefix, "Summary", None, None)(x => extract(x).Summary, (row, value) => merge(row, extract(row).copy(Summary = value)))
      override val manufacturer = new OptField[String, Row](prefix, "manufacturer", None, None)(x => extract(x).manufacturer, (row, value) => merge(row, extract(row).copy(manufacturer = value)))
      override val copyright = new OptField[/* max 30 chars */ String, Row](prefix, "copyright", None, None)(x => extract(x).copyright, (row, value) => merge(row, extract(row).copy(copyright = value)))
      override val producturl = new OptField[/* max 256 chars */ String, Row](prefix, "producturl", None, None)(x => extract(x).producturl, (row, value) => merge(row, extract(row).copy(producturl = value)))
      override val warrantyperiod = new OptField[/* max 256 chars */ String, Row](prefix, "warrantyperiod", None, None)(x => extract(x).warrantyperiod, (row, value) => merge(row, extract(row).copy(warrantyperiod = value)))
      override val warrantydescription = new OptField[/* max 256 chars */ String, Row](prefix, "warrantydescription", None, None)(x => extract(x).warrantydescription, (row, value) => merge(row, extract(row).copy(warrantydescription = value)))
      override val noofyears = new OptField[/* max 256 chars */ String, Row](prefix, "noofyears", None, None)(x => extract(x).noofyears, (row, value) => merge(row, extract(row).copy(noofyears = value)))
      override val maintenancedescription = new OptField[/* max 256 chars */ String, Row](prefix, "maintenancedescription", None, None)(x => extract(x).maintenancedescription, (row, value) => merge(row, extract(row).copy(maintenancedescription = value)))
      override val wheel = new OptField[/* max 256 chars */ String, Row](prefix, "wheel", None, None)(x => extract(x).wheel, (row, value) => merge(row, extract(row).copy(wheel = value)))
      override val saddle = new OptField[/* max 256 chars */ String, Row](prefix, "saddle", None, None)(x => extract(x).saddle, (row, value) => merge(row, extract(row).copy(saddle = value)))
      override val pedal = new OptField[/* max 256 chars */ String, Row](prefix, "pedal", None, None)(x => extract(x).pedal, (row, value) => merge(row, extract(row).copy(pedal = value)))
      override val bikeframe = new OptField[String, Row](prefix, "bikeframe", None, None)(x => extract(x).bikeframe, (row, value) => merge(row, extract(row).copy(bikeframe = value)))
      override val crankset = new OptField[/* max 256 chars */ String, Row](prefix, "crankset", None, None)(x => extract(x).crankset, (row, value) => merge(row, extract(row).copy(crankset = value)))
      override val pictureangle = new OptField[/* max 256 chars */ String, Row](prefix, "pictureangle", None, None)(x => extract(x).pictureangle, (row, value) => merge(row, extract(row).copy(pictureangle = value)))
      override val picturesize = new OptField[/* max 256 chars */ String, Row](prefix, "picturesize", None, None)(x => extract(x).picturesize, (row, value) => merge(row, extract(row).copy(picturesize = value)))
      override val productphotoid = new OptField[/* max 256 chars */ String, Row](prefix, "productphotoid", None, None)(x => extract(x).productphotoid, (row, value) => merge(row, extract(row).copy(productphotoid = value)))
      override val material = new OptField[/* max 256 chars */ String, Row](prefix, "material", None, None)(x => extract(x).material, (row, value) => merge(row, extract(row).copy(material = value)))
      override val color = new OptField[/* max 256 chars */ String, Row](prefix, "color", None, None)(x => extract(x).color, (row, value) => merge(row, extract(row).copy(color = value)))
      override val productline = new OptField[/* max 256 chars */ String, Row](prefix, "productline", None, None)(x => extract(x).productline, (row, value) => merge(row, extract(row).copy(productline = value)))
      override val style = new OptField[/* max 256 chars */ String, Row](prefix, "style", None, None)(x => extract(x).style, (row, value) => merge(row, extract(row).copy(style = value)))
      override val riderexperience = new OptField[/* max 1024 chars */ String, Row](prefix, "riderexperience", None, None)(x => extract(x).riderexperience, (row, value) => merge(row, extract(row).copy(riderexperience = value)))
      override val rowguid = new Field[TypoUUID, Row](prefix, "rowguid", None, None)(x => extract(x).rowguid, (row, value) => merge(row, extract(row).copy(rowguid = value)))
      override val modifieddate = new Field[TypoLocalDateTime, Row](prefix, "modifieddate", Some("text"), None)(x => extract(x).modifieddate, (row, value) => merge(row, extract(row).copy(modifieddate = value)))
    }
  
    override val columns: List[FieldLikeNoHkt[?, Row]] =
      List[FieldLikeNoHkt[?, Row]](fields.productmodelid, fields.name, fields.Summary, fields.manufacturer, fields.copyright, fields.producturl, fields.warrantyperiod, fields.warrantydescription, fields.noofyears, fields.maintenancedescription, fields.wheel, fields.saddle, fields.pedal, fields.bikeframe, fields.crankset, fields.pictureangle, fields.picturesize, fields.productphotoid, fields.material, fields.color, fields.productline, fields.style, fields.riderexperience, fields.rowguid, fields.modifieddate)
  
    override def copy[NewRow](prefix: Option[String], extract: NewRow => VproductmodelcatalogdescriptionViewRow, merge: (NewRow, VproductmodelcatalogdescriptionViewRow) => NewRow): Impl[NewRow] =
      new Impl(prefix, extract, merge)
  }
  
}
