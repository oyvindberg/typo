/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package document

import adventureworks.customtypes.TypoUUID
import java.lang.Throwable
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.ZConnection
import zio.stream.ZStream

class DocumentRepoMock(toRow: Function1[DocumentRowUnsaved, DocumentRow],
                       map: scala.collection.mutable.Map[DocumentId, DocumentRow] = scala.collection.mutable.Map.empty) extends DocumentRepo {
  override def delete(documentnode: DocumentId): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def delete: DeleteBuilder[DocumentFields, DocumentRow] = {
    ???
  }
  override def insert(unsaved: DocumentRow): ZIO[ZConnection, Throwable, DocumentRow] = {
    ???
  }
  override def insert(unsaved: DocumentRowUnsaved): ZIO[ZConnection, Throwable, DocumentRow] = {
    ???
  }
  override def select: SelectBuilder[DocumentFields, DocumentRow] = {
    ???
  }
  override def selectAll: ZStream[ZConnection, Throwable, DocumentRow] = {
    ???
  }
  override def selectById(documentnode: DocumentId): ZIO[ZConnection, Throwable, Option[DocumentRow]] = {
    ???
  }
  override def selectByIds(documentnodes: Array[DocumentId]): ZStream[ZConnection, Throwable, DocumentRow] = {
    ???
  }
  override def selectByUnique(rowguid: TypoUUID): ZIO[ZConnection, Throwable, Option[DocumentRow]] = {
    ???
  }
  override def update(row: DocumentRow): ZIO[ZConnection, Throwable, Boolean] = {
    ???
  }
  override def update: UpdateBuilder[DocumentFields, DocumentRow] = {
    ???
  }
  override def upsert(unsaved: DocumentRow): ZIO[ZConnection, Throwable, DocumentRow] = {
    ???
  }
}
