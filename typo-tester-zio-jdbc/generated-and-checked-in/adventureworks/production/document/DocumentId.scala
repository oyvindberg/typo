/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package document

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `production.document` */
case class DocumentId(value: String) extends AnyVal
object DocumentId {
  implicit lazy val bijection: Bijection[DocumentId, String] = Bijection[DocumentId, String](_.value)(DocumentId.apply)
  implicit lazy val decoder: JsonDecoder[DocumentId] = JsonDecoder.string.map(DocumentId.apply)
  implicit lazy val encoder: JsonEncoder[DocumentId] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[DocumentId] = Ordering.by(_.value)
}
