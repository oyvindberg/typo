/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductanddescription

import adventureworks.production.culture.CultureId
import adventureworks.production.product.ProductId
import adventureworks.public.Name
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class VproductanddescriptionMVRow(
  /** Points to [[product.ProductRow.productid]] */
  productid: ProductId,
  /** Points to [[product.ProductRow.name]] */
  name: Name,
  /** Points to [[productmodel.ProductmodelRow.name]] */
  productmodel: Name,
  /** Points to [[productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.cultureid]] */
  cultureid: CultureId,
  /** Points to [[productdescription.ProductdescriptionRow.description]] */
  description: /* max 400 chars */ String
)

object VproductanddescriptionMVRow {
  implicit lazy val decoder: JsonDecoder[VproductanddescriptionMVRow] = DeriveJsonDecoder.gen[VproductanddescriptionMVRow]
  implicit lazy val decoder: JsonDecoder[VproductanddescriptionMVRow] = DeriveJsonEncoder.gen[VproductanddescriptionMVRow]
}
