/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductanddescription

import adventureworks.production.culture.CultureId
import adventureworks.production.product.ProductId
import adventureworks.public.Name
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.Structure.Relation

class VproductanddescriptionMVStructure[Row](val prefix: Option[String], val extract: Row => VproductanddescriptionMVRow, val merge: (Row, VproductanddescriptionMVRow) => Row)
  extends Relation[VproductanddescriptionMVFields, VproductanddescriptionMVRow, Row]
    with VproductanddescriptionMVFields[Row] { outer =>

  override val productid = new Field[ProductId, Row](prefix, "productid", None, None)(x => extract(x).productid, (row, value) => merge(row, extract(row).copy(productid = value)))
  override val name = new Field[Name, Row](prefix, "name", None, None)(x => extract(x).name, (row, value) => merge(row, extract(row).copy(name = value)))
  override val productmodel = new Field[Name, Row](prefix, "productmodel", None, None)(x => extract(x).productmodel, (row, value) => merge(row, extract(row).copy(productmodel = value)))
  override val cultureid = new Field[CultureId, Row](prefix, "cultureid", None, None)(x => extract(x).cultureid, (row, value) => merge(row, extract(row).copy(cultureid = value)))
  override val description = new Field[/* max 400 chars */ String, Row](prefix, "description", None, None)(x => extract(x).description, (row, value) => merge(row, extract(row).copy(description = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](productid, name, productmodel, cultureid, description)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => VproductanddescriptionMVRow, merge: (NewRow, VproductanddescriptionMVRow) => NewRow): VproductanddescriptionMVStructure[NewRow] =
    new VproductanddescriptionMVStructure(prefix, extract, merge)
}
