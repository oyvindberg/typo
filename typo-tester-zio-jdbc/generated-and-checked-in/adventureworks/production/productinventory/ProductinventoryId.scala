/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productinventory

import adventureworks.production.location.LocationId
import adventureworks.production.product.ProductId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `production.productinventory` */
case class ProductinventoryId(productid: ProductId, locationid: LocationId)
object ProductinventoryId {
  implicit lazy val decoder: JsonDecoder[ProductinventoryId] = DeriveJsonDecoder.gen[ProductinventoryId]
  implicit lazy val decoder: JsonDecoder[ProductinventoryId] = DeriveJsonEncoder.gen[ProductinventoryId]
  implicit lazy val ordering: Ordering[ProductinventoryId] = Ordering.by(x => (x.productid, x.locationid))
}
