/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productinventory

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.customtypes.TypoUUID
import adventureworks.production.location.LocationId
import adventureworks.production.product.ProductId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** This class corresponds to a row in table `production.productinventory` which has not been persisted yet */
case class ProductinventoryRowUnsaved(
  /** Product identification number. Foreign key to Product.ProductID.
      Points to [[product.ProductRow.productid]] */
  productid: ProductId,
  /** Inventory location identification number. Foreign key to Location.LocationID.
      Points to [[location.LocationRow.locationid]] */
  locationid: LocationId,
  /** Storage compartment within an inventory location. */
  shelf: /* max 10 chars */ String,
  /** Storage container on a shelf in an inventory location.
      Constraint CK_ProductInventory_Bin affecting columns "bin":  (((bin >= 0) AND (bin <= 100))) */
  bin: TypoShort,
  /** Default: 0
      Quantity of products in the inventory location. */
  quantity: Defaulted[TypoShort] = Defaulted.UseDefault,
  /** Default: uuid_generate_v1() */
  rowguid: Defaulted[TypoUUID] = Defaulted.UseDefault,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(quantityDefault: => TypoShort, rowguidDefault: => TypoUUID, modifieddateDefault: => TypoLocalDateTime): ProductinventoryRow =
    ProductinventoryRow(
      productid = productid,
      locationid = locationid,
      shelf = shelf,
      bin = bin,
      quantity = quantity match {
                   case Defaulted.UseDefault => quantityDefault
                   case Defaulted.Provided(value) => value
                 },
      rowguid = rowguid match {
                  case Defaulted.UseDefault => rowguidDefault
                  case Defaulted.Provided(value) => value
                },
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object ProductinventoryRowUnsaved {
  implicit lazy val decoder: JsonDecoder[ProductinventoryRowUnsaved] = DeriveJsonDecoder.gen[ProductinventoryRowUnsaved]
  implicit lazy val decoder: JsonDecoder[ProductinventoryRowUnsaved] = DeriveJsonEncoder.gen[ProductinventoryRowUnsaved]
}
