/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package department

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.public.Name
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

trait DepartmentFields {
  def departmentid: IdField[DepartmentId, DepartmentRow]
  def name: Field[Name, DepartmentRow]
  def groupname: Field[Name, DepartmentRow]
  def modifieddate: Field[TypoLocalDateTime, DepartmentRow]
}

object DepartmentFields {
  lazy val structure: Relation[DepartmentFields, DepartmentRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[DepartmentFields, DepartmentRow] {
  
    override lazy val fields: DepartmentFields = new DepartmentFields {
      override def departmentid = IdField[DepartmentId, DepartmentRow](_path, "departmentid", None, Some("int4"), x => x.departmentid, (row, value) => row.copy(departmentid = value))
      override def name = Field[Name, DepartmentRow](_path, "name", None, Some("varchar"), x => x.name, (row, value) => row.copy(name = value))
      override def groupname = Field[Name, DepartmentRow](_path, "groupname", None, Some("varchar"), x => x.groupname, (row, value) => row.copy(groupname = value))
      override def modifieddate = Field[TypoLocalDateTime, DepartmentRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, DepartmentRow]] =
      List[FieldLikeNoHkt[?, DepartmentRow]](fields.departmentid, fields.name, fields.groupname, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
