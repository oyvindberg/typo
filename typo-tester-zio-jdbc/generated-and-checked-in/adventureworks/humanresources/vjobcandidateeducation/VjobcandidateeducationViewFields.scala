/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vjobcandidateeducation

import adventureworks.customtypes.TypoLocalDate
import adventureworks.humanresources.jobcandidate.JobcandidateId
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait VjobcandidateeducationViewFields[Row] {
  val jobcandidateid: Field[JobcandidateId, Row]
  val EduLevel: OptField[/* max 50 chars */ String, Row]
  val EduStartDate: OptField[TypoLocalDate, Row]
  val EduEndDate: OptField[TypoLocalDate, Row]
  val EduDegree: OptField[/* max 50 chars */ String, Row]
  val EduMajor: OptField[/* max 50 chars */ String, Row]
  val EduMinor: OptField[/* max 50 chars */ String, Row]
  val EduGPA: OptField[/* max 5 chars */ String, Row]
  val EduGPAScale: OptField[/* max 5 chars */ String, Row]
  val EduSchool: OptField[/* max 100 chars */ String, Row]
  val EduLocCountryRegion: OptField[/* max 100 chars */ String, Row]
  val EduLocState: OptField[/* max 100 chars */ String, Row]
  val EduLocCity: OptField[/* max 100 chars */ String, Row]
}

object VjobcandidateeducationViewFields {
  val structure: Relation[VjobcandidateeducationViewFields, VjobcandidateeducationViewRow, VjobcandidateeducationViewRow] = 
    new Impl(None, identity, (_, x) => x)
    
  private final class Impl[Row](val prefix: Option[String], val extract: Row => VjobcandidateeducationViewRow, val merge: (Row, VjobcandidateeducationViewRow) => Row)
    extends Relation[VjobcandidateeducationViewFields, VjobcandidateeducationViewRow, Row] { 
  
    override val fields: VjobcandidateeducationViewFields[Row] = new VjobcandidateeducationViewFields[Row] {
      override val jobcandidateid = new Field[JobcandidateId, Row](prefix, "jobcandidateid", None, None)(x => extract(x).jobcandidateid, (row, value) => merge(row, extract(row).copy(jobcandidateid = value)))
      override val EduLevel = new OptField[/* max 50 chars */ String, Row](prefix, "Edu.Level", None, None)(x => extract(x).EduLevel, (row, value) => merge(row, extract(row).copy(EduLevel = value)))
      override val EduStartDate = new OptField[TypoLocalDate, Row](prefix, "Edu.StartDate", Some("text"), None)(x => extract(x).EduStartDate, (row, value) => merge(row, extract(row).copy(EduStartDate = value)))
      override val EduEndDate = new OptField[TypoLocalDate, Row](prefix, "Edu.EndDate", Some("text"), None)(x => extract(x).EduEndDate, (row, value) => merge(row, extract(row).copy(EduEndDate = value)))
      override val EduDegree = new OptField[/* max 50 chars */ String, Row](prefix, "Edu.Degree", None, None)(x => extract(x).EduDegree, (row, value) => merge(row, extract(row).copy(EduDegree = value)))
      override val EduMajor = new OptField[/* max 50 chars */ String, Row](prefix, "Edu.Major", None, None)(x => extract(x).EduMajor, (row, value) => merge(row, extract(row).copy(EduMajor = value)))
      override val EduMinor = new OptField[/* max 50 chars */ String, Row](prefix, "Edu.Minor", None, None)(x => extract(x).EduMinor, (row, value) => merge(row, extract(row).copy(EduMinor = value)))
      override val EduGPA = new OptField[/* max 5 chars */ String, Row](prefix, "Edu.GPA", None, None)(x => extract(x).EduGPA, (row, value) => merge(row, extract(row).copy(EduGPA = value)))
      override val EduGPAScale = new OptField[/* max 5 chars */ String, Row](prefix, "Edu.GPAScale", None, None)(x => extract(x).EduGPAScale, (row, value) => merge(row, extract(row).copy(EduGPAScale = value)))
      override val EduSchool = new OptField[/* max 100 chars */ String, Row](prefix, "Edu.School", None, None)(x => extract(x).EduSchool, (row, value) => merge(row, extract(row).copy(EduSchool = value)))
      override val EduLocCountryRegion = new OptField[/* max 100 chars */ String, Row](prefix, "Edu.Loc.CountryRegion", None, None)(x => extract(x).EduLocCountryRegion, (row, value) => merge(row, extract(row).copy(EduLocCountryRegion = value)))
      override val EduLocState = new OptField[/* max 100 chars */ String, Row](prefix, "Edu.Loc.State", None, None)(x => extract(x).EduLocState, (row, value) => merge(row, extract(row).copy(EduLocState = value)))
      override val EduLocCity = new OptField[/* max 100 chars */ String, Row](prefix, "Edu.Loc.City", None, None)(x => extract(x).EduLocCity, (row, value) => merge(row, extract(row).copy(EduLocCity = value)))
    }
  
    override val columns: List[FieldLikeNoHkt[?, Row]] =
      List[FieldLikeNoHkt[?, Row]](fields.jobcandidateid, fields.EduLevel, fields.EduStartDate, fields.EduEndDate, fields.EduDegree, fields.EduMajor, fields.EduMinor, fields.EduGPA, fields.EduGPAScale, fields.EduSchool, fields.EduLocCountryRegion, fields.EduLocState, fields.EduLocCity)
  
    override def copy[NewRow](prefix: Option[String], extract: NewRow => VjobcandidateeducationViewRow, merge: (NewRow, VjobcandidateeducationViewRow) => NewRow): Impl[NewRow] =
      new Impl(prefix, extract, merge)
  }
  
}
