/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vjobcandidate

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.humanresources.jobcandidate.JobcandidateId
import adventureworks.person.businessentity.BusinessentityId
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class VjobcandidateViewStructure[Row](val prefix: Option[String], val extract: Row => VjobcandidateViewRow, val merge: (Row, VjobcandidateViewRow) => Row)
  extends Relation[VjobcandidateViewFields, VjobcandidateViewRow, Row]
    with VjobcandidateViewFields[Row] { outer =>

  override val jobcandidateid = new Field[JobcandidateId, Row](prefix, "jobcandidateid", None, None)(x => extract(x).jobcandidateid, (row, value) => merge(row, extract(row).copy(jobcandidateid = value)))
  override val businessentityid = new OptField[BusinessentityId, Row](prefix, "businessentityid", None, None)(x => extract(x).businessentityid, (row, value) => merge(row, extract(row).copy(businessentityid = value)))
  override val `Name.Prefix` = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Prefix", None, None)(x => extract(x).`Name.Prefix`, (row, value) => merge(row, extract(row).copy(`Name.Prefix` = value)))
  override val `Name.First` = new OptField[/* max 30 chars */ String, Row](prefix, "Name.First", None, None)(x => extract(x).`Name.First`, (row, value) => merge(row, extract(row).copy(`Name.First` = value)))
  override val `Name.Middle` = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Middle", None, None)(x => extract(x).`Name.Middle`, (row, value) => merge(row, extract(row).copy(`Name.Middle` = value)))
  override val `Name.Last` = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Last", None, None)(x => extract(x).`Name.Last`, (row, value) => merge(row, extract(row).copy(`Name.Last` = value)))
  override val `Name.Suffix` = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Suffix", None, None)(x => extract(x).`Name.Suffix`, (row, value) => merge(row, extract(row).copy(`Name.Suffix` = value)))
  override val Skills = new OptField[String, Row](prefix, "Skills", None, None)(x => extract(x).Skills, (row, value) => merge(row, extract(row).copy(Skills = value)))
  override val `Addr.Type` = new OptField[/* max 30 chars */ String, Row](prefix, "Addr.Type", None, None)(x => extract(x).`Addr.Type`, (row, value) => merge(row, extract(row).copy(`Addr.Type` = value)))
  override val `Addr.Loc.CountryRegion` = new OptField[/* max 100 chars */ String, Row](prefix, "Addr.Loc.CountryRegion", None, None)(x => extract(x).`Addr.Loc.CountryRegion`, (row, value) => merge(row, extract(row).copy(`Addr.Loc.CountryRegion` = value)))
  override val `Addr.Loc.State` = new OptField[/* max 100 chars */ String, Row](prefix, "Addr.Loc.State", None, None)(x => extract(x).`Addr.Loc.State`, (row, value) => merge(row, extract(row).copy(`Addr.Loc.State` = value)))
  override val `Addr.Loc.City` = new OptField[/* max 100 chars */ String, Row](prefix, "Addr.Loc.City", None, None)(x => extract(x).`Addr.Loc.City`, (row, value) => merge(row, extract(row).copy(`Addr.Loc.City` = value)))
  override val `Addr.PostalCode` = new OptField[/* max 20 chars */ String, Row](prefix, "Addr.PostalCode", None, None)(x => extract(x).`Addr.PostalCode`, (row, value) => merge(row, extract(row).copy(`Addr.PostalCode` = value)))
  override val EMail = new OptField[String, Row](prefix, "EMail", None, None)(x => extract(x).EMail, (row, value) => merge(row, extract(row).copy(EMail = value)))
  override val WebSite = new OptField[String, Row](prefix, "WebSite", None, None)(x => extract(x).WebSite, (row, value) => merge(row, extract(row).copy(WebSite = value)))
  override val modifieddate = new Field[TypoLocalDateTime, Row](prefix, "modifieddate", Some("text"), None)(x => extract(x).modifieddate, (row, value) => merge(row, extract(row).copy(modifieddate = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](jobcandidateid, businessentityid, `Name.Prefix`, `Name.First`, `Name.Middle`, `Name.Last`, `Name.Suffix`, Skills, `Addr.Type`, `Addr.Loc.CountryRegion`, `Addr.Loc.State`, `Addr.Loc.City`, `Addr.PostalCode`, EMail, WebSite, modifieddate)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => VjobcandidateViewRow, merge: (NewRow, VjobcandidateViewRow) => NewRow): VjobcandidateViewStructure[NewRow] =
    new VjobcandidateViewStructure(prefix, extract, merge)
}
