/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package jobcandidate

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `humanresources.jobcandidate` */
case class JobcandidateId(value: Int) extends AnyVal
object JobcandidateId {
  implicit lazy val bijection: Bijection[JobcandidateId, Int] = Bijection[JobcandidateId, Int](_.value)(JobcandidateId.apply)
  implicit lazy val decoder: JsonDecoder[JobcandidateId] = JsonDecoder.int.map(JobcandidateId.apply)
  implicit lazy val encoder: JsonEncoder[JobcandidateId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[JobcandidateId] = Ordering.by(_.value)
}
