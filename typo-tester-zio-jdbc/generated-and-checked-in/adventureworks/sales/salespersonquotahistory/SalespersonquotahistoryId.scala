/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salespersonquotahistory

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `sales.salespersonquotahistory` */
case class SalespersonquotahistoryId(businessentityid: BusinessentityId, quotadate: TypoLocalDateTime)
object SalespersonquotahistoryId {
  implicit lazy val decoder: JsonDecoder[SalespersonquotahistoryId] = DeriveJsonDecoder.gen[SalespersonquotahistoryId]
  implicit lazy val decoder: JsonDecoder[SalespersonquotahistoryId] = DeriveJsonEncoder.gen[SalespersonquotahistoryId]
  implicit def ordering(implicit O0: Ordering[TypoLocalDateTime]): Ordering[SalespersonquotahistoryId] = Ordering.by(x => (x.businessentityid, x.quotadate))
}
