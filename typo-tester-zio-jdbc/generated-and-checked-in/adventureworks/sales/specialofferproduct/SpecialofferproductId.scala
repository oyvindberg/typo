/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package specialofferproduct

import adventureworks.production.product.ProductId
import adventureworks.sales.specialoffer.SpecialofferId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `sales.specialofferproduct` */
case class SpecialofferproductId(specialofferid: SpecialofferId, productid: ProductId)
object SpecialofferproductId {
  implicit lazy val decoder: JsonDecoder[SpecialofferproductId] = DeriveJsonDecoder.gen[SpecialofferproductId]
  implicit lazy val decoder: JsonDecoder[SpecialofferproductId] = DeriveJsonEncoder.gen[SpecialofferproductId]
  implicit lazy val ordering: Ordering[SpecialofferproductId] = Ordering.by(x => (x.specialofferid, x.productid))
}
