/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package specialoffer

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `sales.specialoffer` */
case class SpecialofferId(value: Int) extends AnyVal
object SpecialofferId {
  implicit lazy val bijection: Bijection[SpecialofferId, Int] = Bijection[SpecialofferId, Int](_.value)(SpecialofferId.apply)
  implicit lazy val decoder: JsonDecoder[SpecialofferId] = JsonDecoder.int.map(SpecialofferId.apply)
  implicit lazy val encoder: JsonEncoder[SpecialofferId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[SpecialofferId] = Ordering.by(_.value)
}
