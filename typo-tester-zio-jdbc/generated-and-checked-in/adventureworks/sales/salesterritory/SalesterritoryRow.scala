/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesterritory

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.person.countryregion.CountryregionId
import adventureworks.public.Name
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class SalesterritoryRow(
  /** Primary key for SalesTerritory records. */
  territoryid: SalesterritoryId,
  /** Sales territory description */
  name: Name,
  /** ISO standard country or region code. Foreign key to CountryRegion.CountryRegionCode.
      Points to [[person.countryregion.CountryregionRow.countryregioncode]] */
  countryregioncode: CountryregionId,
  /** Geographic area to which the sales territory belong. */
  group: /* max 50 chars */ String,
  /** Sales in the territory year to date.
      Constraint CK_SalesTerritory_SalesYTD affecting columns "salesytd":  ((salesytd >= 0.00)) */
  salesytd: BigDecimal,
  /** Sales in the territory the previous year.
      Constraint CK_SalesTerritory_SalesLastYear affecting columns "saleslastyear":  ((saleslastyear >= 0.00)) */
  saleslastyear: BigDecimal,
  /** Business costs in the territory year to date.
      Constraint CK_SalesTerritory_CostYTD affecting columns "costytd":  ((costytd >= 0.00)) */
  costytd: BigDecimal,
  /** Business costs in the territory the previous year.
      Constraint CK_SalesTerritory_CostLastYear affecting columns "costlastyear":  ((costlastyear >= 0.00)) */
  costlastyear: BigDecimal,
  rowguid: TypoUUID,
  modifieddate: TypoLocalDateTime
)

object SalesterritoryRow {
  implicit lazy val decoder: JsonDecoder[SalesterritoryRow] = DeriveJsonDecoder.gen[SalesterritoryRow]
  implicit lazy val decoder: JsonDecoder[SalesterritoryRow] = DeriveJsonEncoder.gen[SalesterritoryRow]
}
