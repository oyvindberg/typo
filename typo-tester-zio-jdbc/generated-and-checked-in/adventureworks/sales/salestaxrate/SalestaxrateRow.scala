/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salestaxrate

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.customtypes.TypoUUID
import adventureworks.person.stateprovince.StateprovinceId
import adventureworks.public.Name
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class SalestaxrateRow(
  /** Primary key for SalesTaxRate records. */
  salestaxrateid: SalestaxrateId,
  /** State, province, or country/region the sales tax applies to.
      Points to [[person.stateprovince.StateprovinceRow.stateprovinceid]] */
  stateprovinceid: StateprovinceId,
  /** 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
      Constraint CK_SalesTaxRate_TaxType affecting columns "taxtype":  (((taxtype >= 1) AND (taxtype <= 3))) */
  taxtype: TypoShort,
  /** Tax rate amount. */
  taxrate: BigDecimal,
  /** Tax rate description. */
  name: Name,
  rowguid: TypoUUID,
  modifieddate: TypoLocalDateTime
)

object SalestaxrateRow {
  implicit lazy val decoder: JsonDecoder[SalestaxrateRow] = DeriveJsonDecoder.gen[SalestaxrateRow]
  implicit lazy val decoder: JsonDecoder[SalestaxrateRow] = DeriveJsonEncoder.gen[SalestaxrateRow]
}
