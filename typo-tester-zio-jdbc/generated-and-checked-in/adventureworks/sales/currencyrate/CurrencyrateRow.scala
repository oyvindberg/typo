/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package currencyrate

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.sales.currency.CurrencyId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

case class CurrencyrateRow(
  /** Primary key for CurrencyRate records. */
  currencyrateid: CurrencyrateId,
  /** Date and time the exchange rate was obtained. */
  currencyratedate: TypoLocalDateTime,
  /** Exchange rate was converted from this currency code.
      Points to [[currency.CurrencyRow.currencycode]] */
  fromcurrencycode: CurrencyId,
  /** Exchange rate was converted to this currency code.
      Points to [[currency.CurrencyRow.currencycode]] */
  tocurrencycode: CurrencyId,
  /** Average exchange rate for the day. */
  averagerate: BigDecimal,
  /** Final exchange rate for the day. */
  endofdayrate: BigDecimal,
  modifieddate: TypoLocalDateTime
)

object CurrencyrateRow {
  implicit lazy val decoder: JsonDecoder[CurrencyrateRow] = DeriveJsonDecoder.gen[CurrencyrateRow]
  implicit lazy val decoder: JsonDecoder[CurrencyrateRow] = DeriveJsonEncoder.gen[CurrencyrateRow]
}
