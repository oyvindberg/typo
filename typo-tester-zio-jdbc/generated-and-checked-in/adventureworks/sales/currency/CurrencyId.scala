/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package currency

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `sales.currency` */
case class CurrencyId(value: /* bpchar, max 3 chars */ String) extends AnyVal
object CurrencyId {
  implicit lazy val bijection: Bijection[CurrencyId, /* bpchar, max 3 chars */ String] = Bijection[CurrencyId, /* bpchar, max 3 chars */ String](_.value)(CurrencyId.apply)
  implicit lazy val decoder: JsonDecoder[CurrencyId] = JsonDecoder.string.map(CurrencyId.apply)
  implicit lazy val encoder: JsonEncoder[CurrencyId] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[CurrencyId] = Ordering.by(_.value)
}
