/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package personcreditcard

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.userdefined.CustomCreditcardId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `sales.personcreditcard` */
case class PersoncreditcardId(businessentityid: BusinessentityId, creditcardid: /* user-picked */ CustomCreditcardId)
object PersoncreditcardId {
  implicit lazy val decoder: JsonDecoder[PersoncreditcardId] = DeriveJsonDecoder.gen[PersoncreditcardId]
  implicit lazy val decoder: JsonDecoder[PersoncreditcardId] = DeriveJsonEncoder.gen[PersoncreditcardId]
  implicit lazy val ordering: Ordering[PersoncreditcardId] = Ordering.by(x => (x.businessentityid, x.creditcardid))
}
