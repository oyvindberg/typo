/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package person

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.frontpage.address.AddressFields
import adventureworks.frontpage.address.AddressId
import adventureworks.frontpage.address.AddressRow
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait PersonFields {
  def id: IdField[PersonId, PersonRow]
  def name: Field[String, PersonRow]
  def addressId: OptField[AddressId, PersonRow]
  def createdAt: OptField[TypoLocalDateTime, PersonRow]
  def fkAddress: ForeignKey[AddressFields, AddressRow] =
    ForeignKey[AddressFields, AddressRow]("frontpage.fk_address", Nil)
      .withColumnPair(addressId, _.id)
}

object PersonFields {
  lazy val structure: Relation[PersonFields, PersonRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[PersonFields, PersonRow] {
  
    override lazy val fields: PersonFields = new PersonFields {
      override def id = IdField[PersonId, PersonRow](_path, "id", None, Some("uuid"), x => x.id, (row, value) => row.copy(id = value))
      override def name = Field[String, PersonRow](_path, "name", None, None, x => x.name, (row, value) => row.copy(name = value))
      override def addressId = OptField[AddressId, PersonRow](_path, "address_id", None, Some("uuid"), x => x.addressId, (row, value) => row.copy(addressId = value))
      override def createdAt = OptField[TypoLocalDateTime, PersonRow](_path, "created_at", Some("text"), Some("timestamp"), x => x.createdAt, (row, value) => row.copy(createdAt = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, PersonRow]] =
      List[FieldLikeNoHkt[?, PersonRow]](fields.id, fields.name, fields.addressId, fields.createdAt)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
