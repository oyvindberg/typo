/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package product_category

import adventureworks.frontpage.category.CategoryFields
import adventureworks.frontpage.category.CategoryId
import adventureworks.frontpage.category.CategoryRow
import adventureworks.frontpage.product.ProductFields
import adventureworks.frontpage.product.ProductId
import adventureworks.frontpage.product.ProductRow
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.Required
import typo.dsl.SqlExpr
import typo.dsl.SqlExpr.CompositeIn
import typo.dsl.SqlExpr.CompositeIn.TuplePart
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

trait ProductCategoryFields {
  def productId: IdField[ProductId, ProductCategoryRow]
  def categoryId: IdField[CategoryId, ProductCategoryRow]
  def fkCategory: ForeignKey[CategoryFields, CategoryRow] =
    ForeignKey[CategoryFields, CategoryRow]("frontpage.product_category_category_id_fkey", Nil)
      .withColumnPair(categoryId, _.id)
  def fkProduct: ForeignKey[ProductFields, ProductRow] =
    ForeignKey[ProductFields, ProductRow]("frontpage.product_category_product_id_fkey", Nil)
      .withColumnPair(productId, _.id)
  def compositeIdIs(compositeId: ProductCategoryId): SqlExpr[Boolean, Required] =
    productId.isEqual(compositeId.productId).and(categoryId.isEqual(compositeId.categoryId))
  def compositeIdIn(compositeIds: Array[ProductCategoryId]): SqlExpr[Boolean, Required] =
    new CompositeIn(compositeIds)(TuplePart(productId)(_.productId), TuplePart(categoryId)(_.categoryId))
  
}

object ProductCategoryFields {
  lazy val structure: Relation[ProductCategoryFields, ProductCategoryRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[ProductCategoryFields, ProductCategoryRow] {
  
    override lazy val fields: ProductCategoryFields = new ProductCategoryFields {
      override def productId = IdField[ProductId, ProductCategoryRow](_path, "product_id", None, Some("uuid"), x => x.productId, (row, value) => row.copy(productId = value))
      override def categoryId = IdField[CategoryId, ProductCategoryRow](_path, "category_id", None, Some("uuid"), x => x.categoryId, (row, value) => row.copy(categoryId = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, ProductCategoryRow]] =
      List[FieldLikeNoHkt[?, ProductCategoryRow]](fields.productId, fields.categoryId)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
