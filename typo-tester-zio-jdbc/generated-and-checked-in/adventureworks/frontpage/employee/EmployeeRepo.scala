/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package employee

import adventureworks.frontpage.person.PersonId
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder
import zio.ZIO
import zio.jdbc.UpdateResult
import zio.jdbc.ZConnection
import zio.stream.ZStream

trait EmployeeRepo {
  def delete: DeleteBuilder[EmployeeFields, EmployeeRow]
  def deleteById(id: EmployeeId): ZIO[ZConnection, Throwable, Boolean]
  def deleteByIds(ids: Array[EmployeeId]): ZIO[ZConnection, Throwable, Long]
  def insert(unsaved: EmployeeRow): ZIO[ZConnection, Throwable, EmployeeRow]
  def insert(unsaved: EmployeeRowUnsaved): ZIO[ZConnection, Throwable, EmployeeRow]
  def insertStreaming(unsaved: ZStream[ZConnection, Throwable, EmployeeRow], batchSize: Int = 10000): ZIO[ZConnection, Throwable, Long]
  /* NOTE: this functionality requires PostgreSQL 16 or later! */
  def insertUnsavedStreaming(unsaved: ZStream[ZConnection, Throwable, EmployeeRowUnsaved], batchSize: Int = 10000): ZIO[ZConnection, Throwable, Long]
  def select: SelectBuilder[EmployeeFields, EmployeeRow]
  def selectAll: ZStream[ZConnection, Throwable, EmployeeRow]
  def selectById(id: EmployeeId): ZIO[ZConnection, Throwable, Option[EmployeeRow]]
  def selectByIds(ids: Array[EmployeeId]): ZStream[ZConnection, Throwable, EmployeeRow]
  def selectByIdsTracked(ids: Array[EmployeeId]): ZIO[ZConnection, Throwable, Map[EmployeeId, EmployeeRow]]
  def selectByUniquePersonId(personId: PersonId): ZIO[ZConnection, Throwable, Option[EmployeeRow]]
  def update: UpdateBuilder[EmployeeFields, EmployeeRow]
  def update(row: EmployeeRow): ZIO[ZConnection, Throwable, Boolean]
  def upsert(unsaved: EmployeeRow): ZIO[ZConnection, Throwable, UpdateResult[EmployeeRow]]
  // Not implementable for zio-jdbc: upsertBatch
  /* NOTE: this functionality is not safe if you use auto-commit mode! it runs 3 SQL statements */
  def upsertStreaming(unsaved: ZStream[ZConnection, Throwable, EmployeeRow], batchSize: Int = 10000): ZIO[ZConnection, Throwable, Long]
}
