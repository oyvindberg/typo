/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package businessentity

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `person.businessentity` */
case class BusinessentityId(value: Int) extends AnyVal
object BusinessentityId {
  implicit lazy val bijection: Bijection[BusinessentityId, Int] = Bijection[BusinessentityId, Int](_.value)(BusinessentityId.apply)
  implicit lazy val decoder: JsonDecoder[BusinessentityId] = JsonDecoder.int.map(BusinessentityId.apply)
  implicit lazy val encoder: JsonEncoder[BusinessentityId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[BusinessentityId] = Ordering.by(_.value)
}
