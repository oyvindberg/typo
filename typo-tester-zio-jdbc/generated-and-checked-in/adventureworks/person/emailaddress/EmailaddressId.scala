/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package emailaddress

import adventureworks.person.businessentity.BusinessentityId
import zio.json.DeriveJsonDecoder
import zio.json.DeriveJsonEncoder
import zio.json.JsonDecoder

/** Type for the composite primary key of table `person.emailaddress` */
case class EmailaddressId(businessentityid: BusinessentityId, emailaddressid: Int)
object EmailaddressId {
  implicit lazy val decoder: JsonDecoder[EmailaddressId] = DeriveJsonDecoder.gen[EmailaddressId]
  implicit lazy val decoder: JsonDecoder[EmailaddressId] = DeriveJsonEncoder.gen[EmailaddressId]
  implicit lazy val ordering: Ordering[EmailaddressId] = Ordering.by(x => (x.businessentityid, x.emailaddressid))
}
