/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package phonenumbertype

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `person.phonenumbertype` */
case class PhonenumbertypeId(value: Int) extends AnyVal
object PhonenumbertypeId {
  implicit lazy val bijection: Bijection[PhonenumbertypeId, Int] = Bijection[PhonenumbertypeId, Int](_.value)(PhonenumbertypeId.apply)
  implicit lazy val decoder: JsonDecoder[PhonenumbertypeId] = JsonDecoder.int.map(PhonenumbertypeId.apply)
  implicit lazy val encoder: JsonEncoder[PhonenumbertypeId] = JsonEncoder.int.contramap(_.value)
  implicit lazy val ordering: Ordering[PhonenumbertypeId] = Ordering.by(_.value)
}
