/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package countryregion

import typo.dsl.Bijection
import zio.json.JsonDecoder
import zio.json.JsonEncoder

/** Type for the primary key of table `person.countryregion` */
case class CountryregionId(value: /* max 3 chars */ String) extends AnyVal
object CountryregionId {
  implicit lazy val bijection: Bijection[CountryregionId, /* max 3 chars */ String] = Bijection[CountryregionId, /* max 3 chars */ String](_.value)(CountryregionId.apply)
  implicit lazy val decoder: JsonDecoder[CountryregionId] = JsonDecoder.string.map(CountryregionId.apply)
  implicit lazy val encoder: JsonEncoder[CountryregionId] = JsonEncoder.string.contramap(_.value)
  implicit lazy val ordering: Ordering[CountryregionId] = Ordering.by(_.value)
}
