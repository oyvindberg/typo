/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package d

import adventureworks.humanresources.department.DepartmentId
import adventureworks.public.Name
import anorm.NamedParameter
import anorm.ParameterValue
import anorm.RowParser
import anorm.SqlStringInterpolation
import anorm.Success
import java.sql.Connection
import java.time.LocalDateTime

object DViewRepoImpl extends DViewRepo {
  override def selectAll(implicit c: Connection): List[DViewRow] = {
    SQL"""select "id", departmentid, "name", groupname, modifieddate
          from hr.d
       """.as(rowParser.*)
  }
  override def selectByFieldValues(fieldValues: List[DViewFieldOrIdValue[_]])(implicit c: Connection): List[DViewRow] = {
    fieldValues match {
      case Nil => selectAll
      case nonEmpty =>
        val namedParams = nonEmpty.map{
          case DViewFieldValue.id(value) => NamedParameter("id", ParameterValue.from(value))
          case DViewFieldValue.departmentid(value) => NamedParameter("departmentid", ParameterValue.from(value))
          case DViewFieldValue.name(value) => NamedParameter("name", ParameterValue.from(value))
          case DViewFieldValue.groupname(value) => NamedParameter("groupname", ParameterValue.from(value))
          case DViewFieldValue.modifieddate(value) => NamedParameter("modifieddate", ParameterValue.from(value))
        }
        val quote = '"'.toString
        val q = s"""select "id", departmentid, "name", groupname, modifieddate
                    from hr.d
                    where ${namedParams.map(x => s"$quote${x.name}$quote = {${x.name}}").mkString(" AND ")}
                 """
        // this line is here to include an extension method which is only needed for scala 3. no import is emitted for `SQL` to avoid warning for scala 2
        import anorm._
        SQL(q)
          .on(namedParams: _*)
          .as(rowParser.*)
    }
  
  }
  val rowParser: RowParser[DViewRow] =
    RowParser[DViewRow] { row =>
      Success(
        DViewRow(
          id = row[Option[Int]]("id"),
          departmentid = row[Option[DepartmentId]]("departmentid"),
          name = row[Option[Name]]("name"),
          groupname = row[Option[Name]]("groupname"),
          modifieddate = row[Option[LocalDateTime]]("modifieddate")
        )
      )
    }
}
