/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package s

import adventureworks.humanresources.shift.ShiftId
import adventureworks.public.Name
import java.time.LocalDateTime
import java.time.LocalTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SViewRow(
  id: Option[Int],
  /** Points to [[humanresources.shift.ShiftRow.shiftid]] */
  shiftid: Option[ShiftId],
  /** Points to [[humanresources.shift.ShiftRow.name]] */
  name: Option[Name],
  /** Points to [[humanresources.shift.ShiftRow.starttime]] */
  starttime: Option[LocalTime],
  /** Points to [[humanresources.shift.ShiftRow.endtime]] */
  endtime: Option[LocalTime],
  /** Points to [[humanresources.shift.ShiftRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object SViewRow {
  implicit val oFormat: OFormat[SViewRow] = new OFormat[SViewRow]{
    override def writes(o: SViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "shiftid" -> o.shiftid,
        "name" -> o.name,
        "starttime" -> o.starttime,
        "endtime" -> o.endtime,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SViewRow] = {
      JsResult.fromTry(
        Try(
          SViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            shiftid = json.\("shiftid").toOption.map(_.as[ShiftId]),
            name = json.\("name").toOption.map(_.as[Name]),
            starttime = json.\("starttime").toOption.map(_.as[LocalTime]),
            endtime = json.\("endtime").toOption.map(_.as[LocalTime]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
