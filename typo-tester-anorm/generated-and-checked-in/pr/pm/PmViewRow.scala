/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pm

import adventureworks.production.productmodel.ProductmodelId
import adventureworks.public.Name
import java.time.LocalDateTime
import java.util.UUID
import org.postgresql.jdbc.PgSQLXML
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PmViewRow(
  id: Option[Int],
  /** Points to [[production.productmodel.ProductmodelRow.productmodelid]] */
  productmodelid: Option[ProductmodelId],
  /** Points to [[production.productmodel.ProductmodelRow.name]] */
  name: Option[Name],
  /** Points to [[production.productmodel.ProductmodelRow.catalogdescription]] */
  catalogdescription: Option[PgSQLXML],
  /** Points to [[production.productmodel.ProductmodelRow.instructions]] */
  instructions: Option[PgSQLXML],
  /** Points to [[production.productmodel.ProductmodelRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[production.productmodel.ProductmodelRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object PmViewRow {
  implicit val oFormat: OFormat[PmViewRow] = new OFormat[PmViewRow]{
    override def writes(o: PmViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "productmodelid" -> o.productmodelid,
        "name" -> o.name,
        "catalogdescription" -> o.catalogdescription,
        "instructions" -> o.instructions,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PmViewRow] = {
      JsResult.fromTry(
        Try(
          PmViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            productmodelid = json.\("productmodelid").toOption.map(_.as[ProductmodelId]),
            name = json.\("name").toOption.map(_.as[Name]),
            catalogdescription = json.\("catalogdescription").toOption.map(_.as[PgSQLXML]),
            instructions = json.\("instructions").toOption.map(_.as[PgSQLXML]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
