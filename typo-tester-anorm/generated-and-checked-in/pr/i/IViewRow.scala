/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package i

import adventureworks.TypoLocalDateTime
import adventureworks.TypoXml
import adventureworks.production.illustration.IllustrationId
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class IViewRow(
  id: Option[Int],
  /** Points to [[production.illustration.IllustrationRow.illustrationid]] */
  illustrationid: Option[IllustrationId],
  /** Points to [[production.illustration.IllustrationRow.diagram]] */
  diagram: Option[TypoXml],
  /** Points to [[production.illustration.IllustrationRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object IViewRow {
  implicit val reads: Reads[IViewRow] = Reads[IViewRow](json => JsResult.fromTry(
      Try(
        IViewRow(
          id = json.\("id").toOption.map(_.as[Int]),
          illustrationid = json.\("illustrationid").toOption.map(_.as[IllustrationId]),
          diagram = json.\("diagram").toOption.map(_.as[TypoXml]),
          modifieddate = json.\("modifieddate").toOption.map(_.as[TypoLocalDateTime])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[IViewRow] = RowParser[IViewRow] { row =>
    Success(
      IViewRow(
        id = row[Option[Int]](idx + 0),
        illustrationid = row[Option[IllustrationId]](idx + 1),
        diagram = row[Option[TypoXml]](idx + 2),
        modifieddate = row[Option[TypoLocalDateTime]](idx + 3)
      )
    )
  }
  implicit val writes: OWrites[IViewRow] = OWrites[IViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Json.toJson(o.id),
      "illustrationid" -> Json.toJson(o.illustrationid),
      "diagram" -> Json.toJson(o.diagram),
      "modifieddate" -> Json.toJson(o.modifieddate)
    ))
  )
}
