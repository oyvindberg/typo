/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pr

import adventureworks.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.production.productreview.ProductreviewId
import adventureworks.public.Name
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class PrViewRow(
  id: Option[Int],
  /** Points to [[production.productreview.ProductreviewRow.productreviewid]] */
  productreviewid: Option[ProductreviewId],
  /** Points to [[production.productreview.ProductreviewRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[production.productreview.ProductreviewRow.reviewername]] */
  reviewername: Option[Name],
  /** Points to [[production.productreview.ProductreviewRow.reviewdate]] */
  reviewdate: Option[TypoLocalDateTime],
  /** Points to [[production.productreview.ProductreviewRow.emailaddress]] */
  emailaddress: Option[/* max 50 chars */ String],
  /** Points to [[production.productreview.ProductreviewRow.rating]] */
  rating: Option[Int],
  /** Points to [[production.productreview.ProductreviewRow.comments]] */
  comments: Option[/* max 3850 chars */ String],
  /** Points to [[production.productreview.ProductreviewRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object PrViewRow {
  implicit val reads: Reads[PrViewRow] = Reads[PrViewRow](json => JsResult.fromTry(
      Try(
        PrViewRow(
          id = json.\("id").toOption.map(_.as[Int]),
          productreviewid = json.\("productreviewid").toOption.map(_.as[ProductreviewId]),
          productid = json.\("productid").toOption.map(_.as[ProductId]),
          reviewername = json.\("reviewername").toOption.map(_.as[Name]),
          reviewdate = json.\("reviewdate").toOption.map(_.as[TypoLocalDateTime]),
          emailaddress = json.\("emailaddress").toOption.map(_.as[/* max 50 chars */ String]),
          rating = json.\("rating").toOption.map(_.as[Int]),
          comments = json.\("comments").toOption.map(_.as[/* max 3850 chars */ String]),
          modifieddate = json.\("modifieddate").toOption.map(_.as[TypoLocalDateTime])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PrViewRow] = RowParser[PrViewRow] { row =>
    Success(
      PrViewRow(
        id = row[Option[Int]](idx + 0),
        productreviewid = row[Option[ProductreviewId]](idx + 1),
        productid = row[Option[ProductId]](idx + 2),
        reviewername = row[Option[Name]](idx + 3),
        reviewdate = row[Option[TypoLocalDateTime]](idx + 4),
        emailaddress = row[Option[/* max 50 chars */ String]](idx + 5),
        rating = row[Option[Int]](idx + 6),
        comments = row[Option[/* max 3850 chars */ String]](idx + 7),
        modifieddate = row[Option[TypoLocalDateTime]](idx + 8)
      )
    )
  }
  implicit val writes: OWrites[PrViewRow] = OWrites[PrViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Json.toJson(o.id),
      "productreviewid" -> Json.toJson(o.productreviewid),
      "productid" -> Json.toJson(o.productid),
      "reviewername" -> Json.toJson(o.reviewername),
      "reviewdate" -> Json.toJson(o.reviewdate),
      "emailaddress" -> Json.toJson(o.emailaddress),
      "rating" -> Json.toJson(o.rating),
      "comments" -> Json.toJson(o.comments),
      "modifieddate" -> Json.toJson(o.modifieddate)
    ))
  )
}
