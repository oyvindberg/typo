/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package d

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.production.document.DocumentId
import adventureworks.public.Flag
import java.time.LocalDateTime
import java.util.UUID

sealed abstract class DViewFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class DViewFieldValue[T](name: String, value: T) extends DViewFieldOrIdValue(name, value)

object DViewFieldValue {
  case class title(override val value: Option[String]) extends DViewFieldValue("title", value)
  case class owner(override val value: Option[BusinessentityId]) extends DViewFieldValue("owner", value)
  case class folderflag(override val value: Flag) extends DViewFieldValue("folderflag", value)
  case class filename(override val value: Option[String]) extends DViewFieldValue("filename", value)
  case class fileextension(override val value: Option[String]) extends DViewFieldValue("fileextension", value)
  case class revision(override val value: Option[/* bpchar */ String]) extends DViewFieldValue("revision", value)
  case class changenumber(override val value: Option[Int]) extends DViewFieldValue("changenumber", value)
  case class status(override val value: Option[Int]) extends DViewFieldValue("status", value)
  case class documentsummary(override val value: Option[String]) extends DViewFieldValue("documentsummary", value)
  case class document(override val value: Option[Byte]) extends DViewFieldValue("document", value)
  case class rowguid(override val value: Option[UUID]) extends DViewFieldValue("rowguid", value)
  case class modifieddate(override val value: Option[LocalDateTime]) extends DViewFieldValue("modifieddate", value)
  case class documentnode(override val value: Option[DocumentId]) extends DViewFieldValue("documentnode", value)
}
