/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salestaxrate

import adventureworks.person.stateprovince.StateprovinceId
import adventureworks.public.Name
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SalestaxrateRow(
  /** Primary key for SalesTaxRate records. */
  salestaxrateid: SalestaxrateId,
  /** State, province, or country/region the sales tax applies to.
      Points to [[person.stateprovince.StateprovinceRow.stateprovinceid]] */
  stateprovinceid: StateprovinceId,
  /** 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions. */
  taxtype: Int,
  /** Tax rate amount. */
  taxrate: BigDecimal,
  /** Tax rate description. */
  name: Name,
  rowguid: UUID,
  modifieddate: LocalDateTime
)

object SalestaxrateRow {
  implicit val oFormat: OFormat[SalestaxrateRow] = new OFormat[SalestaxrateRow]{
    override def writes(o: SalestaxrateRow): JsObject =
      Json.obj(
        "salestaxrateid" -> o.salestaxrateid,
        "stateprovinceid" -> o.stateprovinceid,
        "taxtype" -> o.taxtype,
        "taxrate" -> o.taxrate,
        "name" -> o.name,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SalestaxrateRow] = {
      JsResult.fromTry(
        Try(
          SalestaxrateRow(
            salestaxrateid = json.\("salestaxrateid").as[SalestaxrateId],
            stateprovinceid = json.\("stateprovinceid").as[StateprovinceId],
            taxtype = json.\("taxtype").as[Int],
            taxrate = json.\("taxrate").as[BigDecimal],
            name = json.\("name").as[Name],
            rowguid = json.\("rowguid").as[UUID],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
