/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salestaxrate

import anorm.Column
import anorm.ParameterMetaData
import anorm.ToStatement
import play.api.libs.json.Format

/** Type for the primary key of table `sales.salestaxrate` */
case class SalestaxrateId(value: Int) extends AnyVal
object SalestaxrateId {
  implicit val ordering: Ordering[SalestaxrateId] = Ordering.by(_.value)
  implicit val format: Format[SalestaxrateId] = implicitly[Format[Int]].bimap(SalestaxrateId.apply, _.value)
  implicit val toStatement: ToStatement[SalestaxrateId] = implicitly[ToStatement[Int]].contramap(_.value)
  implicit val column: Column[SalestaxrateId] = implicitly[Column[Int]].map(SalestaxrateId.apply)
  implicit val parameterMetadata: ParameterMetaData[SalestaxrateId] = new ParameterMetaData[SalestaxrateId] {
    override def sqlType: String = implicitly[ParameterMetaData[Int]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[Int]].jdbcType
  }

}
