/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package creditcard

import adventureworks.TypoLocalDateTime
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class CreditcardRow(
  /** Primary key for CreditCard records. */
  creditcardid: CreditcardId,
  /** Credit card name. */
  cardtype: /* max 50 chars */ String,
  /** Credit card number. */
  cardnumber: /* max 25 chars */ String,
  /** Credit card expiration month. */
  expmonth: Int,
  /** Credit card expiration year. */
  expyear: Int,
  modifieddate: TypoLocalDateTime
)

object CreditcardRow {
  implicit val reads: Reads[CreditcardRow] = Reads[CreditcardRow](json => JsResult.fromTry(
      Try(
        CreditcardRow(
          creditcardid = json.\("creditcardid").as(CreditcardId.reads),
          cardtype = json.\("cardtype").as(Reads.StringReads),
          cardnumber = json.\("cardnumber").as(Reads.StringReads),
          expmonth = json.\("expmonth").as(Reads.IntReads),
          expyear = json.\("expyear").as(Reads.IntReads),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[CreditcardRow] = RowParser[CreditcardRow] { row =>
    Success(
      CreditcardRow(
        creditcardid = row(idx + 0)(CreditcardId.column),
        cardtype = row(idx + 1)(Column.columnToString),
        cardnumber = row(idx + 2)(Column.columnToString),
        expmonth = row(idx + 3)(Column.columnToInt),
        expyear = row(idx + 4)(Column.columnToInt),
        modifieddate = row(idx + 5)(TypoLocalDateTime.column)
      )
    )
  }
  implicit val writes: OWrites[CreditcardRow] = OWrites[CreditcardRow](o =>
    new JsObject(ListMap[String, JsValue](
      "creditcardid" -> CreditcardId.writes.writes(o.creditcardid),
      "cardtype" -> Writes.StringWrites.writes(o.cardtype),
      "cardnumber" -> Writes.StringWrites.writes(o.cardnumber),
      "expmonth" -> Writes.IntWrites.writes(o.expmonth),
      "expyear" -> Writes.IntWrites.writes(o.expyear),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
