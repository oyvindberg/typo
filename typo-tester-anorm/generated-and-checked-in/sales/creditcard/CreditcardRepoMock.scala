/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package creditcard

import java.sql.Connection

class CreditcardRepoMock(toRow: Function1[CreditcardRowUnsaved, CreditcardRow],
                         map: scala.collection.mutable.Map[CreditcardId, CreditcardRow] = scala.collection.mutable.Map.empty) extends CreditcardRepo {
  override def delete(creditcardid: CreditcardId)(implicit c: Connection): Boolean = {
    map.remove(creditcardid).isDefined
  }
  override def insert(unsaved: CreditcardRow)(implicit c: Connection): CreditcardRow = {
    if (map.contains(unsaved.creditcardid))
      sys.error(s"id ${unsaved.creditcardid} already exists")
    else
      map.put(unsaved.creditcardid, unsaved)
    unsaved
  }
  override def insert(unsaved: CreditcardRowUnsaved)(implicit c: Connection): CreditcardRow = {
    insert(toRow(unsaved))
  }
  override def selectAll(implicit c: Connection): List[CreditcardRow] = {
    map.values.toList
  }
  override def selectById(creditcardid: CreditcardId)(implicit c: Connection): Option[CreditcardRow] = {
    map.get(creditcardid)
  }
  override def selectByIds(creditcardids: Array[CreditcardId])(implicit c: Connection): List[CreditcardRow] = {
    creditcardids.flatMap(map.get).toList
  }
  override def update(row: CreditcardRow)(implicit c: Connection): Boolean = {
    map.get(row.creditcardid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.creditcardid, row)
        true
      case None => false
    }
  }
  override def upsert(unsaved: CreditcardRow)(implicit c: Connection): CreditcardRow = {
    map.put(unsaved.creditcardid, unsaved)
    unsaved
  }
}
