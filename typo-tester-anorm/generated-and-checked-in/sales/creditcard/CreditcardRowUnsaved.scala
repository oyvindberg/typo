/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package creditcard

import adventureworks.Defaulted
import adventureworks.TypoLocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `sales.creditcard` which has not been persisted yet */
case class CreditcardRowUnsaved(
  /** Credit card name. */
  cardtype: /* max 50 chars */ String,
  /** Credit card number. */
  cardnumber: /* max 25 chars */ String,
  /** Credit card expiration month. */
  expmonth: Int,
  /** Credit card expiration year. */
  expyear: Int,
  /** Default: nextval('sales.creditcard_creditcardid_seq'::regclass)
      Primary key for CreditCard records. */
  creditcardid: Defaulted[CreditcardId] = Defaulted.UseDefault,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(creditcardidDefault: => CreditcardId, modifieddateDefault: => TypoLocalDateTime): CreditcardRow =
    CreditcardRow(
      cardtype = cardtype,
      cardnumber = cardnumber,
      expmonth = expmonth,
      expyear = expyear,
      creditcardid = creditcardid match {
                       case Defaulted.UseDefault => creditcardidDefault
                       case Defaulted.Provided(value) => value
                     },
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object CreditcardRowUnsaved {
  implicit val reads: Reads[CreditcardRowUnsaved] = Reads[CreditcardRowUnsaved](json => JsResult.fromTry(
      Try(
        CreditcardRowUnsaved(
          cardtype = json.\("cardtype").as(Reads.StringReads),
          cardnumber = json.\("cardnumber").as(Reads.StringReads),
          expmonth = json.\("expmonth").as(Reads.IntReads),
          expyear = json.\("expyear").as(Reads.IntReads),
          creditcardid = json.\("creditcardid").as(Defaulted.reads(CreditcardId.reads)),
          modifieddate = json.\("modifieddate").as(Defaulted.reads(TypoLocalDateTime.reads))
        )
      )
    ),
  )
  implicit val writes: OWrites[CreditcardRowUnsaved] = OWrites[CreditcardRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "cardtype" -> Writes.StringWrites.writes(o.cardtype),
      "cardnumber" -> Writes.StringWrites.writes(o.cardnumber),
      "expmonth" -> Writes.IntWrites.writes(o.expmonth),
      "expyear" -> Writes.IntWrites.writes(o.expyear),
      "creditcardid" -> Defaulted.writes(CreditcardId.writes).writes(o.creditcardid),
      "modifieddate" -> Defaulted.writes(TypoLocalDateTime.writes).writes(o.modifieddate)
    ))
  )
}
