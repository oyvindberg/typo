/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package specialoffer

import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SpecialofferRow(
  /** Primary key for SpecialOffer records. */
  specialofferid: SpecialofferId,
  /** Discount description. */
  description: String,
  /** Discount precentage. */
  discountpct: BigDecimal,
  /** Discount type category. */
  `type`: String,
  /** Group the discount applies to such as Reseller or Customer. */
  category: String,
  /** Discount start date. */
  startdate: LocalDateTime,
  /** Discount end date. */
  enddate: LocalDateTime,
  /** Minimum discount percent allowed. */
  minqty: Int,
  /** Maximum discount percent allowed. */
  maxqty: Option[Int],
  rowguid: UUID,
  modifieddate: LocalDateTime
)

object SpecialofferRow {
  implicit val oFormat: OFormat[SpecialofferRow] = new OFormat[SpecialofferRow]{
    override def writes(o: SpecialofferRow): JsObject =
      Json.obj(
        "specialofferid" -> o.specialofferid,
        "description" -> o.description,
        "discountpct" -> o.discountpct,
        "type" -> o.`type`,
        "category" -> o.category,
        "startdate" -> o.startdate,
        "enddate" -> o.enddate,
        "minqty" -> o.minqty,
        "maxqty" -> o.maxqty,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[SpecialofferRow] = {
      JsResult.fromTry(
        Try(
          SpecialofferRow(
            specialofferid = json.\("specialofferid").as[SpecialofferId],
            description = json.\("description").as[String],
            discountpct = json.\("discountpct").as[BigDecimal],
            `type` = json.\("type").as[String],
            category = json.\("category").as[String],
            startdate = json.\("startdate").as[LocalDateTime],
            enddate = json.\("enddate").as[LocalDateTime],
            minqty = json.\("minqty").as[Int],
            maxqty = json.\("maxqty").toOption.map(_.as[Int]),
            rowguid = json.\("rowguid").as[UUID],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
