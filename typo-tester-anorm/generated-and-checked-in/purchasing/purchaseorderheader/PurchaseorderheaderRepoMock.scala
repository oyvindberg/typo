/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package purchasing
package purchaseorderheader

import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.DeleteBuilder.DeleteBuilderMock
import typo.dsl.DeleteParams
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderMock
import typo.dsl.SelectParams
import typo.dsl.UpdateBuilder
import typo.dsl.UpdateBuilder.UpdateBuilderMock
import typo.dsl.UpdateParams

class PurchaseorderheaderRepoMock(toRow: Function1[PurchaseorderheaderRowUnsaved, PurchaseorderheaderRow],
                                  map: scala.collection.mutable.Map[PurchaseorderheaderId, PurchaseorderheaderRow] = scala.collection.mutable.Map.empty) extends PurchaseorderheaderRepo {
  override def delete(purchaseorderid: PurchaseorderheaderId)(implicit c: Connection): Boolean = {
    map.remove(purchaseorderid).isDefined
  }
  override def delete: DeleteBuilder[PurchaseorderheaderFields, PurchaseorderheaderRow] = {
    DeleteBuilderMock(DeleteParams.empty, PurchaseorderheaderFields, map)
  }
  override def insert(unsaved: PurchaseorderheaderRow)(implicit c: Connection): PurchaseorderheaderRow = {
    if (map.contains(unsaved.purchaseorderid))
      sys.error(s"id ${unsaved.purchaseorderid} already exists")
    else
      map.put(unsaved.purchaseorderid, unsaved)
    unsaved
  }
  override def insert(unsaved: PurchaseorderheaderRowUnsaved)(implicit c: Connection): PurchaseorderheaderRow = {
    insert(toRow(unsaved))
  }
  override def select: SelectBuilder[PurchaseorderheaderFields, PurchaseorderheaderRow] = {
    SelectBuilderMock(PurchaseorderheaderFields, () => map.values.toList, SelectParams.empty)
  }
  override def selectAll(implicit c: Connection): List[PurchaseorderheaderRow] = {
    map.values.toList
  }
  override def selectById(purchaseorderid: PurchaseorderheaderId)(implicit c: Connection): Option[PurchaseorderheaderRow] = {
    map.get(purchaseorderid)
  }
  override def selectByIds(purchaseorderids: Array[PurchaseorderheaderId])(implicit c: Connection): List[PurchaseorderheaderRow] = {
    purchaseorderids.flatMap(map.get).toList
  }
  override def update(row: PurchaseorderheaderRow)(implicit c: Connection): Boolean = {
    map.get(row.purchaseorderid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.purchaseorderid, row)
        true
      case None => false
    }
  }
  override def update: UpdateBuilder[PurchaseorderheaderFields, PurchaseorderheaderRow] = {
    UpdateBuilderMock(UpdateParams.empty, PurchaseorderheaderFields, map)
  }
  override def upsert(unsaved: PurchaseorderheaderRow)(implicit c: Connection): PurchaseorderheaderRow = {
    map.put(unsaved.purchaseorderid, unsaved)
    unsaved
  }
}
