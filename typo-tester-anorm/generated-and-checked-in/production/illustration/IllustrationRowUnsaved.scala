/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package illustration

import adventureworks.Defaulted
import adventureworks.TypoLocalDateTime
import adventureworks.TypoXml
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `production.illustration` which has not been persisted yet */
case class IllustrationRowUnsaved(
  /** Illustrations used in manufacturing instructions. Stored as XML. */
  diagram: Option[TypoXml],
  /** Default: nextval('production.illustration_illustrationid_seq'::regclass)
      Primary key for Illustration records. */
  illustrationid: Defaulted[IllustrationId] = Defaulted.UseDefault,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(illustrationidDefault: => IllustrationId, modifieddateDefault: => TypoLocalDateTime): IllustrationRow =
    IllustrationRow(
      diagram = diagram,
      illustrationid = illustrationid match {
                         case Defaulted.UseDefault => illustrationidDefault
                         case Defaulted.Provided(value) => value
                       },
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object IllustrationRowUnsaved {
  implicit val reads: Reads[IllustrationRowUnsaved] = Reads[IllustrationRowUnsaved](json => JsResult.fromTry(
      Try(
        IllustrationRowUnsaved(
          diagram = json.\("diagram").toOption.map(_.as[TypoXml]),
          illustrationid = json.\("illustrationid").as[Defaulted[IllustrationId]],
          modifieddate = json.\("modifieddate").as[Defaulted[TypoLocalDateTime]]
        )
      )
    ),
  )
  implicit val writes: OWrites[IllustrationRowUnsaved] = OWrites[IllustrationRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "diagram" -> Json.toJson(o.diagram),
      "illustrationid" -> Json.toJson(o.illustrationid),
      "modifieddate" -> Json.toJson(o.modifieddate)
    ))
  )
}
