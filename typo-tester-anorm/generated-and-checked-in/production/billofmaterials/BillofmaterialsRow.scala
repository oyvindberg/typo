/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package billofmaterials

import adventureworks.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.production.unitmeasure.UnitmeasureId
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class BillofmaterialsRow(
  /** Primary key for BillOfMaterials records. */
  billofmaterialsid: BillofmaterialsId,
  /** Parent product identification number. Foreign key to Product.ProductID.
      Points to [[product.ProductRow.productid]] */
  productassemblyid: Option[ProductId],
  /** Component identification number. Foreign key to Product.ProductID.
      Points to [[product.ProductRow.productid]] */
  componentid: ProductId,
  /** Date the component started being used in the assembly item. */
  startdate: TypoLocalDateTime,
  /** Date the component stopped being used in the assembly item. */
  enddate: Option[TypoLocalDateTime],
  /** Standard code identifying the unit of measure for the quantity.
      Points to [[unitmeasure.UnitmeasureRow.unitmeasurecode]] */
  unitmeasurecode: UnitmeasureId,
  /** Indicates the depth the component is from its parent (AssemblyID). */
  bomlevel: Int,
  /** Quantity of the component needed to create the assembly. */
  perassemblyqty: BigDecimal,
  modifieddate: TypoLocalDateTime
)

object BillofmaterialsRow {
  implicit val reads: Reads[BillofmaterialsRow] = Reads[BillofmaterialsRow](json => JsResult.fromTry(
      Try(
        BillofmaterialsRow(
          billofmaterialsid = json.\("billofmaterialsid").as(BillofmaterialsId.reads),
          productassemblyid = json.\("productassemblyid").toOption.map(_.as(ProductId.reads)),
          componentid = json.\("componentid").as(ProductId.reads),
          startdate = json.\("startdate").as(TypoLocalDateTime.reads),
          enddate = json.\("enddate").toOption.map(_.as(TypoLocalDateTime.reads)),
          unitmeasurecode = json.\("unitmeasurecode").as(UnitmeasureId.reads),
          bomlevel = json.\("bomlevel").as(Reads.IntReads),
          perassemblyqty = json.\("perassemblyqty").as(Reads.bigDecReads),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[BillofmaterialsRow] = RowParser[BillofmaterialsRow] { row =>
    Success(
      BillofmaterialsRow(
        billofmaterialsid = row(idx + 0)(BillofmaterialsId.column),
        productassemblyid = row(idx + 1)(Column.columnToOption(ProductId.column)),
        componentid = row(idx + 2)(ProductId.column),
        startdate = row(idx + 3)(TypoLocalDateTime.column),
        enddate = row(idx + 4)(Column.columnToOption(TypoLocalDateTime.column)),
        unitmeasurecode = row(idx + 5)(UnitmeasureId.column),
        bomlevel = row(idx + 6)(Column.columnToInt),
        perassemblyqty = row(idx + 7)(Column.columnToScalaBigDecimal),
        modifieddate = row(idx + 8)(TypoLocalDateTime.column)
      )
    )
  }
  implicit val writes: OWrites[BillofmaterialsRow] = OWrites[BillofmaterialsRow](o =>
    new JsObject(ListMap[String, JsValue](
      "billofmaterialsid" -> BillofmaterialsId.writes.writes(o.billofmaterialsid),
      "productassemblyid" -> Writes.OptionWrites(ProductId.writes).writes(o.productassemblyid),
      "componentid" -> ProductId.writes.writes(o.componentid),
      "startdate" -> TypoLocalDateTime.writes.writes(o.startdate),
      "enddate" -> Writes.OptionWrites(TypoLocalDateTime.writes).writes(o.enddate),
      "unitmeasurecode" -> UnitmeasureId.writes.writes(o.unitmeasurecode),
      "bomlevel" -> Writes.IntWrites.writes(o.bomlevel),
      "perassemblyqty" -> Writes.BigDecimalWrites.writes(o.perassemblyqty),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
