/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package billofmaterials

import adventureworks.Defaulted
import adventureworks.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.production.unitmeasure.UnitmeasureId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `production.billofmaterials` which has not been persisted yet */
case class BillofmaterialsRowUnsaved(
  /** Parent product identification number. Foreign key to Product.ProductID.
      Points to [[product.ProductRow.productid]] */
  productassemblyid: Option[ProductId],
  /** Component identification number. Foreign key to Product.ProductID.
      Points to [[product.ProductRow.productid]] */
  componentid: ProductId,
  /** Date the component stopped being used in the assembly item. */
  enddate: Option[TypoLocalDateTime],
  /** Standard code identifying the unit of measure for the quantity.
      Points to [[unitmeasure.UnitmeasureRow.unitmeasurecode]] */
  unitmeasurecode: UnitmeasureId,
  /** Indicates the depth the component is from its parent (AssemblyID). */
  bomlevel: Int,
  /** Default: nextval('production.billofmaterials_billofmaterialsid_seq'::regclass)
      Primary key for BillOfMaterials records. */
  billofmaterialsid: Defaulted[BillofmaterialsId] = Defaulted.UseDefault,
  /** Default: now()
      Date the component started being used in the assembly item. */
  startdate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault,
  /** Default: 1.00
      Quantity of the component needed to create the assembly. */
  perassemblyqty: Defaulted[BigDecimal] = Defaulted.UseDefault,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(billofmaterialsidDefault: => BillofmaterialsId, startdateDefault: => TypoLocalDateTime, perassemblyqtyDefault: => BigDecimal, modifieddateDefault: => TypoLocalDateTime): BillofmaterialsRow =
    BillofmaterialsRow(
      productassemblyid = productassemblyid,
      componentid = componentid,
      enddate = enddate,
      unitmeasurecode = unitmeasurecode,
      bomlevel = bomlevel,
      billofmaterialsid = billofmaterialsid match {
                            case Defaulted.UseDefault => billofmaterialsidDefault
                            case Defaulted.Provided(value) => value
                          },
      startdate = startdate match {
                    case Defaulted.UseDefault => startdateDefault
                    case Defaulted.Provided(value) => value
                  },
      perassemblyqty = perassemblyqty match {
                         case Defaulted.UseDefault => perassemblyqtyDefault
                         case Defaulted.Provided(value) => value
                       },
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object BillofmaterialsRowUnsaved {
  implicit val reads: Reads[BillofmaterialsRowUnsaved] = Reads[BillofmaterialsRowUnsaved](json => JsResult.fromTry(
      Try(
        BillofmaterialsRowUnsaved(
          productassemblyid = json.\("productassemblyid").toOption.map(_.as(ProductId.reads)),
          componentid = json.\("componentid").as(ProductId.reads),
          enddate = json.\("enddate").toOption.map(_.as(TypoLocalDateTime.reads)),
          unitmeasurecode = json.\("unitmeasurecode").as(UnitmeasureId.reads),
          bomlevel = json.\("bomlevel").as(Reads.IntReads),
          billofmaterialsid = json.\("billofmaterialsid").as(Defaulted.reads(BillofmaterialsId.reads)),
          startdate = json.\("startdate").as(Defaulted.reads(TypoLocalDateTime.reads)),
          perassemblyqty = json.\("perassemblyqty").as(Defaulted.reads(Reads.bigDecReads)),
          modifieddate = json.\("modifieddate").as(Defaulted.reads(TypoLocalDateTime.reads))
        )
      )
    ),
  )
  implicit val writes: OWrites[BillofmaterialsRowUnsaved] = OWrites[BillofmaterialsRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "productassemblyid" -> Writes.OptionWrites(ProductId.writes).writes(o.productassemblyid),
      "componentid" -> ProductId.writes.writes(o.componentid),
      "enddate" -> Writes.OptionWrites(TypoLocalDateTime.writes).writes(o.enddate),
      "unitmeasurecode" -> UnitmeasureId.writes.writes(o.unitmeasurecode),
      "bomlevel" -> Writes.IntWrites.writes(o.bomlevel),
      "billofmaterialsid" -> Defaulted.writes(BillofmaterialsId.writes).writes(o.billofmaterialsid),
      "startdate" -> Defaulted.writes(TypoLocalDateTime.writes).writes(o.startdate),
      "perassemblyqty" -> Defaulted.writes(Writes.BigDecimalWrites).writes(o.perassemblyqty),
      "modifieddate" -> Defaulted.writes(TypoLocalDateTime.writes).writes(o.modifieddate)
    ))
  )
}
