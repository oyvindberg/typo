/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productmodelillustration

import adventureworks.TypoLocalDateTime
import adventureworks.production.illustration.IllustrationId
import adventureworks.production.productmodel.ProductmodelId
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class ProductmodelillustrationRow(
  /** Primary key. Foreign key to ProductModel.ProductModelID.
      Points to [[productmodel.ProductmodelRow.productmodelid]] */
  productmodelid: ProductmodelId,
  /** Primary key. Foreign key to Illustration.IllustrationID.
      Points to [[illustration.IllustrationRow.illustrationid]] */
  illustrationid: IllustrationId,
  modifieddate: TypoLocalDateTime
){
   val compositeId: ProductmodelillustrationId = ProductmodelillustrationId(productmodelid, illustrationid)
 }

object ProductmodelillustrationRow {
  implicit val reads: Reads[ProductmodelillustrationRow] = Reads[ProductmodelillustrationRow](json => JsResult.fromTry(
      Try(
        ProductmodelillustrationRow(
          productmodelid = json.\("productmodelid").as[ProductmodelId],
          illustrationid = json.\("illustrationid").as[IllustrationId],
          modifieddate = json.\("modifieddate").as[TypoLocalDateTime]
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[ProductmodelillustrationRow] = RowParser[ProductmodelillustrationRow] { row =>
    Success(
      ProductmodelillustrationRow(
        productmodelid = row[ProductmodelId](idx + 0),
        illustrationid = row[IllustrationId](idx + 1),
        modifieddate = row[TypoLocalDateTime](idx + 2)
      )
    )
  }
  implicit val writes: OWrites[ProductmodelillustrationRow] = OWrites[ProductmodelillustrationRow](o =>
    new JsObject(ListMap[String, JsValue](
      "productmodelid" -> Json.toJson(o.productmodelid),
      "illustrationid" -> Json.toJson(o.illustrationid),
      "modifieddate" -> Json.toJson(o.modifieddate)
    ))
  )
}
