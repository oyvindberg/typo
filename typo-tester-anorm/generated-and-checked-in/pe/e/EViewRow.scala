/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package e

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import anorm.RowParser
import anorm.Success
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class EViewRow(
  id: Option[Int],
  /** Points to [[person.emailaddress.EmailaddressRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[person.emailaddress.EmailaddressRow.emailaddressid]] */
  emailaddressid: Option[Int],
  /** Points to [[person.emailaddress.EmailaddressRow.emailaddress]] */
  emailaddress: Option[/* max 50 chars */ String],
  /** Points to [[person.emailaddress.EmailaddressRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[person.emailaddress.EmailaddressRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object EViewRow {
  implicit val reads: Reads[EViewRow] = Reads[EViewRow](json => JsResult.fromTry(
      Try(
        EViewRow(
          id = json.\("id").toOption.map(_.as[Int]),
          businessentityid = json.\("businessentityid").toOption.map(_.as[BusinessentityId]),
          emailaddressid = json.\("emailaddressid").toOption.map(_.as[Int]),
          emailaddress = json.\("emailaddress").toOption.map(_.as[/* max 50 chars */ String]),
          rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
          modifieddate = json.\("modifieddate").toOption.map(_.as[TypoLocalDateTime])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[EViewRow] = RowParser[EViewRow] { row =>
    Success(
      EViewRow(
        id = row[Option[Int]](idx + 0),
        businessentityid = row[Option[BusinessentityId]](idx + 1),
        emailaddressid = row[Option[Int]](idx + 2),
        emailaddress = row[Option[/* max 50 chars */ String]](idx + 3),
        rowguid = row[Option[UUID]](idx + 4),
        modifieddate = row[Option[TypoLocalDateTime]](idx + 5)
      )
    )
  }
  implicit val writes: OWrites[EViewRow] = OWrites[EViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Json.toJson(o.id),
      "businessentityid" -> Json.toJson(o.businessentityid),
      "emailaddressid" -> Json.toJson(o.emailaddressid),
      "emailaddress" -> Json.toJson(o.emailaddress),
      "rowguid" -> Json.toJson(o.rowguid),
      "modifieddate" -> Json.toJson(o.modifieddate)
    ))
  )
}
