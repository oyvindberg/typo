/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package pnt

import adventureworks.person.phonenumbertype.PhonenumbertypeId
import adventureworks.public.Name
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PntViewRow(
  id: Option[Int],
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.phonenumbertypeid]] */
  phonenumbertypeid: Option[PhonenumbertypeId],
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.name]] */
  name: Option[Name],
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object PntViewRow {
  implicit val oFormat: OFormat[PntViewRow] = new OFormat[PntViewRow]{
    override def writes(o: PntViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "phonenumbertypeid" -> o.phonenumbertypeid,
        "name" -> o.name,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PntViewRow] = {
      JsResult.fromTry(
        Try(
          PntViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            phonenumbertypeid = json.\("phonenumbertypeid").toOption.map(_.as[PhonenumbertypeId]),
            name = json.\("name").toOption.map(_.as[Name]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
