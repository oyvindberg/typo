/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package employeepayhistory

import adventureworks.Defaulted
import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `humanresources.employeepayhistory` which has not been persisted yet */
case class EmployeepayhistoryRowUnsaved(
  /** Employee identification number. Foreign key to Employee.BusinessEntityID.
      Points to [[employee.EmployeeRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Date the change in pay is effective */
  ratechangedate: TypoLocalDateTime,
  /** Salary hourly rate. */
  rate: BigDecimal,
  /** 1 = Salary received monthly, 2 = Salary received biweekly */
  payfrequency: Int,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(modifieddateDefault: => TypoLocalDateTime): EmployeepayhistoryRow =
    EmployeepayhistoryRow(
      businessentityid = businessentityid,
      ratechangedate = ratechangedate,
      rate = rate,
      payfrequency = payfrequency,
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object EmployeepayhistoryRowUnsaved {
  implicit val reads: Reads[EmployeepayhistoryRowUnsaved] = Reads[EmployeepayhistoryRowUnsaved](json => JsResult.fromTry(
      Try(
        EmployeepayhistoryRowUnsaved(
          businessentityid = json.\("businessentityid").as(BusinessentityId.reads),
          ratechangedate = json.\("ratechangedate").as(TypoLocalDateTime.reads),
          rate = json.\("rate").as(Reads.bigDecReads),
          payfrequency = json.\("payfrequency").as(Reads.IntReads),
          modifieddate = json.\("modifieddate").as(Defaulted.reads(TypoLocalDateTime.reads))
        )
      )
    ),
  )
  implicit val writes: OWrites[EmployeepayhistoryRowUnsaved] = OWrites[EmployeepayhistoryRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "businessentityid" -> BusinessentityId.writes.writes(o.businessentityid),
      "ratechangedate" -> TypoLocalDateTime.writes.writes(o.ratechangedate),
      "rate" -> Writes.BigDecimalWrites.writes(o.rate),
      "payfrequency" -> Writes.IntWrites.writes(o.payfrequency),
      "modifieddate" -> Defaulted.writes(TypoLocalDateTime.writes).writes(o.modifieddate)
    ))
  )
}
