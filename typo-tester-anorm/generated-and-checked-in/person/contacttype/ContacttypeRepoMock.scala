/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package contacttype

import java.sql.Connection

class ContacttypeRepoMock(toRow: Function1[ContacttypeRowUnsaved, ContacttypeRow],
                          map: scala.collection.mutable.Map[ContacttypeId, ContacttypeRow] = scala.collection.mutable.Map.empty) extends ContacttypeRepo {
  override def delete(contacttypeid: ContacttypeId)(implicit c: Connection): Boolean = {
    map.remove(contacttypeid).isDefined
  }
  override def insert(unsaved: ContacttypeRow)(implicit c: Connection): ContacttypeRow = {
    if (map.contains(unsaved.contacttypeid))
      sys.error(s"id ${unsaved.contacttypeid} already exists")
    else
      map.put(unsaved.contacttypeid, unsaved)
    unsaved
  }
  override def insert(unsaved: ContacttypeRowUnsaved)(implicit c: Connection): ContacttypeRow = {
    insert(toRow(unsaved))
  }
  override def selectAll(implicit c: Connection): List[ContacttypeRow] = {
    map.values.toList
  }
  override def selectById(contacttypeid: ContacttypeId)(implicit c: Connection): Option[ContacttypeRow] = {
    map.get(contacttypeid)
  }
  override def selectByIds(contacttypeids: Array[ContacttypeId])(implicit c: Connection): List[ContacttypeRow] = {
    contacttypeids.flatMap(map.get).toList
  }
  override def update(row: ContacttypeRow)(implicit c: Connection): Boolean = {
    map.get(row.contacttypeid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.contacttypeid, row)
        true
      case None => false
    }
  }
  override def upsert(unsaved: ContacttypeRow)(implicit c: Connection): ContacttypeRow = {
    map.put(unsaved.contacttypeid, unsaved)
    unsaved
  }
}
