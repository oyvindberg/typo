/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sohsr

import adventureworks.TypoLocalDateTime
import adventureworks.sales.salesorderheader.SalesorderheaderId
import adventureworks.sales.salesreason.SalesreasonId
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class SohsrViewRow(
  /** Points to [[sales.salesorderheadersalesreason.SalesorderheadersalesreasonRow.salesorderid]] */
  salesorderid: Option[SalesorderheaderId],
  /** Points to [[sales.salesorderheadersalesreason.SalesorderheadersalesreasonRow.salesreasonid]] */
  salesreasonid: Option[SalesreasonId],
  /** Points to [[sales.salesorderheadersalesreason.SalesorderheadersalesreasonRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object SohsrViewRow {
  implicit val reads: Reads[SohsrViewRow] = Reads[SohsrViewRow](json => JsResult.fromTry(
      Try(
        SohsrViewRow(
          salesorderid = json.\("salesorderid").toOption.map(_.as(SalesorderheaderId.reads)),
          salesreasonid = json.\("salesreasonid").toOption.map(_.as(SalesreasonId.reads)),
          modifieddate = json.\("modifieddate").toOption.map(_.as(TypoLocalDateTime.reads))
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[SohsrViewRow] = RowParser[SohsrViewRow] { row =>
    Success(
      SohsrViewRow(
        salesorderid = row(idx + 0)(Column.columnToOption(SalesorderheaderId.column)),
        salesreasonid = row(idx + 1)(Column.columnToOption(SalesreasonId.column)),
        modifieddate = row(idx + 2)(Column.columnToOption(TypoLocalDateTime.column))
      )
    )
  }
  implicit val writes: OWrites[SohsrViewRow] = OWrites[SohsrViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "salesorderid" -> Writes.OptionWrites(SalesorderheaderId.writes).writes(o.salesorderid),
      "salesreasonid" -> Writes.OptionWrites(SalesreasonId.writes).writes(o.salesreasonid),
      "modifieddate" -> Writes.OptionWrites(TypoLocalDateTime.writes).writes(o.modifieddate)
    ))
  )
}
