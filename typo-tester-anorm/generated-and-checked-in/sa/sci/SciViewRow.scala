/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sci

import adventureworks.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.sales.shoppingcartitem.ShoppingcartitemId
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class SciViewRow(
  id: Option[Int],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.shoppingcartitemid]] */
  shoppingcartitemid: Option[ShoppingcartitemId],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.shoppingcartid]] */
  shoppingcartid: Option[/* max 50 chars */ String],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.quantity]] */
  quantity: Option[Int],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.datecreated]] */
  datecreated: Option[TypoLocalDateTime],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object SciViewRow {
  implicit val reads: Reads[SciViewRow] = Reads[SciViewRow](json => JsResult.fromTry(
      Try(
        SciViewRow(
          id = json.\("id").toOption.map(_.as[Int]),
          shoppingcartitemid = json.\("shoppingcartitemid").toOption.map(_.as[ShoppingcartitemId]),
          shoppingcartid = json.\("shoppingcartid").toOption.map(_.as[/* max 50 chars */ String]),
          quantity = json.\("quantity").toOption.map(_.as[Int]),
          productid = json.\("productid").toOption.map(_.as[ProductId]),
          datecreated = json.\("datecreated").toOption.map(_.as[TypoLocalDateTime]),
          modifieddate = json.\("modifieddate").toOption.map(_.as[TypoLocalDateTime])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[SciViewRow] = RowParser[SciViewRow] { row =>
    Success(
      SciViewRow(
        id = row[Option[Int]](idx + 0),
        shoppingcartitemid = row[Option[ShoppingcartitemId]](idx + 1),
        shoppingcartid = row[Option[/* max 50 chars */ String]](idx + 2),
        quantity = row[Option[Int]](idx + 3),
        productid = row[Option[ProductId]](idx + 4),
        datecreated = row[Option[TypoLocalDateTime]](idx + 5),
        modifieddate = row[Option[TypoLocalDateTime]](idx + 6)
      )
    )
  }
  implicit val writes: OWrites[SciViewRow] = OWrites[SciViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Json.toJson(o.id),
      "shoppingcartitemid" -> Json.toJson(o.shoppingcartitemid),
      "shoppingcartid" -> Json.toJson(o.shoppingcartid),
      "quantity" -> Json.toJson(o.quantity),
      "productid" -> Json.toJson(o.productid),
      "datecreated" -> Json.toJson(o.datecreated),
      "modifieddate" -> Json.toJson(o.modifieddate)
    ))
  )
}
