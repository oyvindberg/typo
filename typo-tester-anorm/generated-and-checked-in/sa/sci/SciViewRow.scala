/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sci

import adventureworks.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.sales.shoppingcartitem.ShoppingcartitemId
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class SciViewRow(
  id: Option[Int],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.shoppingcartitemid]] */
  shoppingcartitemid: Option[ShoppingcartitemId],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.shoppingcartid]] */
  shoppingcartid: Option[/* max 50 chars */ String],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.quantity]] */
  quantity: Option[Int],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.datecreated]] */
  datecreated: Option[TypoLocalDateTime],
  /** Points to [[sales.shoppingcartitem.ShoppingcartitemRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object SciViewRow {
  implicit val reads: Reads[SciViewRow] = Reads[SciViewRow](json => JsResult.fromTry(
      Try(
        SciViewRow(
          id = json.\("id").toOption.map(_.as(Reads.IntReads)),
          shoppingcartitemid = json.\("shoppingcartitemid").toOption.map(_.as(ShoppingcartitemId.reads)),
          shoppingcartid = json.\("shoppingcartid").toOption.map(_.as(Reads.StringReads)),
          quantity = json.\("quantity").toOption.map(_.as(Reads.IntReads)),
          productid = json.\("productid").toOption.map(_.as(ProductId.reads)),
          datecreated = json.\("datecreated").toOption.map(_.as(TypoLocalDateTime.reads)),
          modifieddate = json.\("modifieddate").toOption.map(_.as(TypoLocalDateTime.reads))
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[SciViewRow] = RowParser[SciViewRow] { row =>
    Success(
      SciViewRow(
        id = row(idx + 0)(Column.columnToOption(Column.columnToInt)),
        shoppingcartitemid = row(idx + 1)(Column.columnToOption(ShoppingcartitemId.column)),
        shoppingcartid = row(idx + 2)(Column.columnToOption(Column.columnToString)),
        quantity = row(idx + 3)(Column.columnToOption(Column.columnToInt)),
        productid = row(idx + 4)(Column.columnToOption(ProductId.column)),
        datecreated = row(idx + 5)(Column.columnToOption(TypoLocalDateTime.column)),
        modifieddate = row(idx + 6)(Column.columnToOption(TypoLocalDateTime.column))
      )
    )
  }
  implicit val writes: OWrites[SciViewRow] = OWrites[SciViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Writes.OptionWrites(Writes.IntWrites).writes(o.id),
      "shoppingcartitemid" -> Writes.OptionWrites(ShoppingcartitemId.writes).writes(o.shoppingcartitemid),
      "shoppingcartid" -> Writes.OptionWrites(Writes.StringWrites).writes(o.shoppingcartid),
      "quantity" -> Writes.OptionWrites(Writes.IntWrites).writes(o.quantity),
      "productid" -> Writes.OptionWrites(ProductId.writes).writes(o.productid),
      "datecreated" -> Writes.OptionWrites(TypoLocalDateTime.writes).writes(o.datecreated),
      "modifieddate" -> Writes.OptionWrites(TypoLocalDateTime.writes).writes(o.modifieddate)
    ))
  )
}
