/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package spqh

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import anorm.Column
import anorm.RowParser
import anorm.Success
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class SpqhViewRow(
  id: Option[Int],
  /** Points to [[sales.salespersonquotahistory.SalespersonquotahistoryRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[sales.salespersonquotahistory.SalespersonquotahistoryRow.quotadate]] */
  quotadate: Option[TypoLocalDateTime],
  /** Points to [[sales.salespersonquotahistory.SalespersonquotahistoryRow.salesquota]] */
  salesquota: Option[BigDecimal],
  /** Points to [[sales.salespersonquotahistory.SalespersonquotahistoryRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[sales.salespersonquotahistory.SalespersonquotahistoryRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object SpqhViewRow {
  implicit val reads: Reads[SpqhViewRow] = Reads[SpqhViewRow](json => JsResult.fromTry(
      Try(
        SpqhViewRow(
          id = json.\("id").toOption.map(_.as(Reads.IntReads)),
          businessentityid = json.\("businessentityid").toOption.map(_.as(BusinessentityId.reads)),
          quotadate = json.\("quotadate").toOption.map(_.as(TypoLocalDateTime.reads)),
          salesquota = json.\("salesquota").toOption.map(_.as(Reads.bigDecReads)),
          rowguid = json.\("rowguid").toOption.map(_.as(Reads.uuidReads)),
          modifieddate = json.\("modifieddate").toOption.map(_.as(TypoLocalDateTime.reads))
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[SpqhViewRow] = RowParser[SpqhViewRow] { row =>
    Success(
      SpqhViewRow(
        id = row(idx + 0)(Column.columnToOption(Column.columnToInt)),
        businessentityid = row(idx + 1)(Column.columnToOption(BusinessentityId.column)),
        quotadate = row(idx + 2)(Column.columnToOption(TypoLocalDateTime.column)),
        salesquota = row(idx + 3)(Column.columnToOption(Column.columnToScalaBigDecimal)),
        rowguid = row(idx + 4)(Column.columnToOption(Column.columnToUUID)),
        modifieddate = row(idx + 5)(Column.columnToOption(TypoLocalDateTime.column))
      )
    )
  }
  implicit val writes: OWrites[SpqhViewRow] = OWrites[SpqhViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Writes.OptionWrites(Writes.IntWrites).writes(o.id),
      "businessentityid" -> Writes.OptionWrites(BusinessentityId.writes).writes(o.businessentityid),
      "quotadate" -> Writes.OptionWrites(TypoLocalDateTime.writes).writes(o.quotadate),
      "salesquota" -> Writes.OptionWrites(Writes.BigDecimalWrites).writes(o.salesquota),
      "rowguid" -> Writes.OptionWrites(Writes.UuidWrites).writes(o.rowguid),
      "modifieddate" -> Writes.OptionWrites(TypoLocalDateTime.writes).writes(o.modifieddate)
    ))
  )
}
