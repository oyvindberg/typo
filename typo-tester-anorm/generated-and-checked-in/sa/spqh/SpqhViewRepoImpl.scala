/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package spqh

import adventureworks.person.businessentity.BusinessentityId
import anorm.NamedParameter
import anorm.ParameterValue
import anorm.RowParser
import anorm.SqlStringInterpolation
import anorm.Success
import java.sql.Connection
import java.time.LocalDateTime
import java.util.UUID

object SpqhViewRepoImpl extends SpqhViewRepo {
  override def selectAll(implicit c: Connection): List[SpqhViewRow] = {
    SQL"""select "id", businessentityid, quotadate, salesquota, rowguid, modifieddate
          from sa.spqh
       """.as(rowParser.*)
  }
  override def selectByFieldValues(fieldValues: List[SpqhViewFieldOrIdValue[_]])(implicit c: Connection): List[SpqhViewRow] = {
    fieldValues match {
      case Nil => selectAll
      case nonEmpty =>
        val namedParams = nonEmpty.map{
          case SpqhViewFieldValue.id(value) => NamedParameter("id", ParameterValue.from(value))
          case SpqhViewFieldValue.businessentityid(value) => NamedParameter("businessentityid", ParameterValue.from(value))
          case SpqhViewFieldValue.quotadate(value) => NamedParameter("quotadate", ParameterValue.from(value))
          case SpqhViewFieldValue.salesquota(value) => NamedParameter("salesquota", ParameterValue.from(value))
          case SpqhViewFieldValue.rowguid(value) => NamedParameter("rowguid", ParameterValue.from(value))
          case SpqhViewFieldValue.modifieddate(value) => NamedParameter("modifieddate", ParameterValue.from(value))
        }
        val quote = '"'.toString
        val q = s"""select "id", businessentityid, quotadate, salesquota, rowguid, modifieddate
                    from sa.spqh
                    where ${namedParams.map(x => s"$quote${x.name}$quote = {${x.name}}").mkString(" AND ")}
                 """
        // this line is here to include an extension method which is only needed for scala 3. no import is emitted for `SQL` to avoid warning for scala 2
        import anorm._
        SQL(q)
          .on(namedParams: _*)
          .as(rowParser.*)
    }
  
  }
  val rowParser: RowParser[SpqhViewRow] =
    RowParser[SpqhViewRow] { row =>
      Success(
        SpqhViewRow(
          id = row[Option[Int]]("id"),
          businessentityid = row[Option[BusinessentityId]]("businessentityid"),
          quotadate = row[Option[LocalDateTime]]("quotadate"),
          salesquota = row[Option[BigDecimal]]("salesquota"),
          rowguid = row[Option[UUID]]("rowguid"),
          modifieddate = row[Option[LocalDateTime]]("modifieddate")
        )
      )
    }
}
