/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package poh

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId
import adventureworks.purchasing.shipmethod.ShipmethodId
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class PohViewRow(
  id: Option[Int],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.purchaseorderid]] */
  purchaseorderid: Option[PurchaseorderheaderId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.revisionnumber]] */
  revisionnumber: Option[Int],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.status]] */
  status: Option[Int],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.employeeid]] */
  employeeid: Option[BusinessentityId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.vendorid]] */
  vendorid: Option[BusinessentityId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.shipmethodid]] */
  shipmethodid: Option[ShipmethodId],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.orderdate]] */
  orderdate: Option[TypoLocalDateTime],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.shipdate]] */
  shipdate: Option[TypoLocalDateTime],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.subtotal]] */
  subtotal: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.taxamt]] */
  taxamt: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.freight]] */
  freight: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderheader.PurchaseorderheaderRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object PohViewRow {
  implicit val reads: Reads[PohViewRow] = Reads[PohViewRow](json => JsResult.fromTry(
      Try(
        PohViewRow(
          id = json.\("id").toOption.map(_.as[Int]),
          purchaseorderid = json.\("purchaseorderid").toOption.map(_.as[PurchaseorderheaderId]),
          revisionnumber = json.\("revisionnumber").toOption.map(_.as[Int]),
          status = json.\("status").toOption.map(_.as[Int]),
          employeeid = json.\("employeeid").toOption.map(_.as[BusinessentityId]),
          vendorid = json.\("vendorid").toOption.map(_.as[BusinessentityId]),
          shipmethodid = json.\("shipmethodid").toOption.map(_.as[ShipmethodId]),
          orderdate = json.\("orderdate").toOption.map(_.as[TypoLocalDateTime]),
          shipdate = json.\("shipdate").toOption.map(_.as[TypoLocalDateTime]),
          subtotal = json.\("subtotal").toOption.map(_.as[BigDecimal]),
          taxamt = json.\("taxamt").toOption.map(_.as[BigDecimal]),
          freight = json.\("freight").toOption.map(_.as[BigDecimal]),
          modifieddate = json.\("modifieddate").toOption.map(_.as[TypoLocalDateTime])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PohViewRow] = RowParser[PohViewRow] { row =>
    Success(
      PohViewRow(
        id = row[Option[Int]](idx + 0),
        purchaseorderid = row[Option[PurchaseorderheaderId]](idx + 1),
        revisionnumber = row[Option[Int]](idx + 2),
        status = row[Option[Int]](idx + 3),
        employeeid = row[Option[BusinessentityId]](idx + 4),
        vendorid = row[Option[BusinessentityId]](idx + 5),
        shipmethodid = row[Option[ShipmethodId]](idx + 6),
        orderdate = row[Option[TypoLocalDateTime]](idx + 7),
        shipdate = row[Option[TypoLocalDateTime]](idx + 8),
        subtotal = row[Option[BigDecimal]](idx + 9),
        taxamt = row[Option[BigDecimal]](idx + 10),
        freight = row[Option[BigDecimal]](idx + 11),
        modifieddate = row[Option[TypoLocalDateTime]](idx + 12)
      )
    )
  }
  implicit val writes: OWrites[PohViewRow] = OWrites[PohViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Json.toJson(o.id),
      "purchaseorderid" -> Json.toJson(o.purchaseorderid),
      "revisionnumber" -> Json.toJson(o.revisionnumber),
      "status" -> Json.toJson(o.status),
      "employeeid" -> Json.toJson(o.employeeid),
      "vendorid" -> Json.toJson(o.vendorid),
      "shipmethodid" -> Json.toJson(o.shipmethodid),
      "orderdate" -> Json.toJson(o.orderdate),
      "shipdate" -> Json.toJson(o.shipdate),
      "subtotal" -> Json.toJson(o.subtotal),
      "taxamt" -> Json.toJson(o.taxamt),
      "freight" -> Json.toJson(o.freight),
      "modifieddate" -> Json.toJson(o.modifieddate)
    ))
  )
}
