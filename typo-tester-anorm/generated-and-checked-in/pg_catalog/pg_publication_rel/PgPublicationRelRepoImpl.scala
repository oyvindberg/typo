/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_publication_rel

import anorm.SqlStringInterpolation
import java.sql.Connection

object PgPublicationRelRepoImpl extends PgPublicationRelRepo {
  override def delete(oid: PgPublicationRelId)(implicit c: Connection): Boolean = {
    SQL"delete from pg_catalog.pg_publication_rel where oid = $oid".executeUpdate() > 0
  }
  override def insert(unsaved: PgPublicationRelRow)(implicit c: Connection): PgPublicationRelRow = {
    SQL"""insert into pg_catalog.pg_publication_rel(oid, prpubid, prrelid)
          values (${unsaved.oid}::oid, ${unsaved.prpubid}::oid, ${unsaved.prrelid}::oid)
          returning oid, prpubid, prrelid
       """
      .executeInsert(PgPublicationRelRow.rowParser(1).single)
  
  }
  override def selectAll(implicit c: Connection): List[PgPublicationRelRow] = {
    SQL"""select oid, prpubid, prrelid
          from pg_catalog.pg_publication_rel
       """.as(PgPublicationRelRow.rowParser(1).*)
  }
  override def selectById(oid: PgPublicationRelId)(implicit c: Connection): Option[PgPublicationRelRow] = {
    SQL"""select oid, prpubid, prrelid
          from pg_catalog.pg_publication_rel
          where oid = $oid
       """.as(PgPublicationRelRow.rowParser(1).singleOpt)
  }
  override def selectByIds(oids: Array[PgPublicationRelId])(implicit c: Connection): List[PgPublicationRelRow] = {
    SQL"""select oid, prpubid, prrelid
          from pg_catalog.pg_publication_rel
          where oid = ANY($oids)
       """.as(PgPublicationRelRow.rowParser(1).*)
  
  }
  override def update(row: PgPublicationRelRow)(implicit c: Connection): Boolean = {
    val oid = row.oid
    SQL"""update pg_catalog.pg_publication_rel
          set prpubid = ${row.prpubid}::oid,
              prrelid = ${row.prrelid}::oid
          where oid = $oid
       """.executeUpdate() > 0
  }
  override def upsert(unsaved: PgPublicationRelRow)(implicit c: Connection): PgPublicationRelRow = {
    SQL"""insert into pg_catalog.pg_publication_rel(oid, prpubid, prrelid)
          values (
            ${unsaved.oid}::oid,
            ${unsaved.prpubid}::oid,
            ${unsaved.prrelid}::oid
          )
          on conflict (oid)
          do update set
            prpubid = EXCLUDED.prpubid,
            prrelid = EXCLUDED.prrelid
          returning oid, prpubid, prrelid
       """
      .executeInsert(PgPublicationRelRow.rowParser(1).single)
  
  }
}
