/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_config

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgTsConfigRow(
  oid: PgTsConfigId,
  cfgname: String,
  cfgnamespace: /* oid */ Long,
  cfgowner: /* oid */ Long,
  cfgparser: /* oid */ Long
)

object PgTsConfigRow {
  def rowParser(idx: Int): RowParser[PgTsConfigRow] =
    RowParser[PgTsConfigRow] { row =>
      Success(
        PgTsConfigRow(
          oid = row[PgTsConfigId](idx + 0),
          cfgname = row[String](idx + 1),
          cfgnamespace = row[/* oid */ Long](idx + 2),
          cfgowner = row[/* oid */ Long](idx + 3),
          cfgparser = row[/* oid */ Long](idx + 4)
        )
      )
    }
  implicit val oFormat: OFormat[PgTsConfigRow] = new OFormat[PgTsConfigRow]{
    override def writes(o: PgTsConfigRow): JsObject =
      Json.obj(
        "oid" -> o.oid,
        "cfgname" -> o.cfgname,
        "cfgnamespace" -> o.cfgnamespace,
        "cfgowner" -> o.cfgowner,
        "cfgparser" -> o.cfgparser
      )
  
    override def reads(json: JsValue): JsResult[PgTsConfigRow] = {
      JsResult.fromTry(
        Try(
          PgTsConfigRow(
            oid = json.\("oid").as[PgTsConfigId],
            cfgname = json.\("cfgname").as[String],
            cfgnamespace = json.\("cfgnamespace").as[/* oid */ Long],
            cfgowner = json.\("cfgowner").as[/* oid */ Long],
            cfgparser = json.\("cfgparser").as[/* oid */ Long]
          )
        )
      )
    }
  }
}
