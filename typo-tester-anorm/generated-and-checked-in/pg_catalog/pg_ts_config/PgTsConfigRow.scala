/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_config

import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgTsConfigRow(
  oid: PgTsConfigId,
  cfgname: String,
  cfgnamespace: /* oid */ Long,
  cfgowner: /* oid */ Long,
  cfgparser: /* oid */ Long
)

object PgTsConfigRow {
  implicit val reads: Reads[PgTsConfigRow] = Reads[PgTsConfigRow](json => JsResult.fromTry(
      Try(
        PgTsConfigRow(
          oid = json.\("oid").as(PgTsConfigId.reads),
          cfgname = json.\("cfgname").as(Reads.StringReads),
          cfgnamespace = json.\("cfgnamespace").as(Reads.LongReads),
          cfgowner = json.\("cfgowner").as(Reads.LongReads),
          cfgparser = json.\("cfgparser").as(Reads.LongReads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgTsConfigRow] = RowParser[PgTsConfigRow] { row =>
    Success(
      PgTsConfigRow(
        oid = row(idx + 0)(PgTsConfigId.column),
        cfgname = row(idx + 1)(Column.columnToString),
        cfgnamespace = row(idx + 2)(Column.columnToLong),
        cfgowner = row(idx + 3)(Column.columnToLong),
        cfgparser = row(idx + 4)(Column.columnToLong)
      )
    )
  }
  implicit val writes: OWrites[PgTsConfigRow] = OWrites[PgTsConfigRow](o =>
    new JsObject(ListMap[String, JsValue](
      "oid" -> PgTsConfigId.writes.writes(o.oid),
      "cfgname" -> Writes.StringWrites.writes(o.cfgname),
      "cfgnamespace" -> Writes.LongWrites.writes(o.cfgnamespace),
      "cfgowner" -> Writes.LongWrites.writes(o.cfgowner),
      "cfgparser" -> Writes.LongWrites.writes(o.cfgparser)
    ))
  )
}
