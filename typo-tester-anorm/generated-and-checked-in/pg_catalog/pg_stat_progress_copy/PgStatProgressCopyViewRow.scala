/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_progress_copy

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgStatProgressCopyViewRow(
  pid: Option[Int],
  datid: Option[/* oid */ Long],
  datname: Option[String],
  relid: Option[/* oid */ Long],
  command: Option[String],
  `type`: Option[String],
  bytesProcessed: Option[Long],
  bytesTotal: Option[Long],
  tuplesProcessed: Option[Long],
  tuplesExcluded: Option[Long]
)

object PgStatProgressCopyViewRow {
  implicit val reads: Reads[PgStatProgressCopyViewRow] = Reads[PgStatProgressCopyViewRow](json => JsResult.fromTry(
      Try(
        PgStatProgressCopyViewRow(
          pid = json.\("pid").toOption.map(_.as[Int]),
          datid = json.\("datid").toOption.map(_.as[/* oid */ Long]),
          datname = json.\("datname").toOption.map(_.as[String]),
          relid = json.\("relid").toOption.map(_.as[/* oid */ Long]),
          command = json.\("command").toOption.map(_.as[String]),
          `type` = json.\("type").toOption.map(_.as[String]),
          bytesProcessed = json.\("bytes_processed").toOption.map(_.as[Long]),
          bytesTotal = json.\("bytes_total").toOption.map(_.as[Long]),
          tuplesProcessed = json.\("tuples_processed").toOption.map(_.as[Long]),
          tuplesExcluded = json.\("tuples_excluded").toOption.map(_.as[Long])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgStatProgressCopyViewRow] = RowParser[PgStatProgressCopyViewRow] { row =>
    Success(
      PgStatProgressCopyViewRow(
        pid = row[Option[Int]](idx + 0),
        datid = row[Option[/* oid */ Long]](idx + 1),
        datname = row[Option[String]](idx + 2),
        relid = row[Option[/* oid */ Long]](idx + 3),
        command = row[Option[String]](idx + 4),
        `type` = row[Option[String]](idx + 5),
        bytesProcessed = row[Option[Long]](idx + 6),
        bytesTotal = row[Option[Long]](idx + 7),
        tuplesProcessed = row[Option[Long]](idx + 8),
        tuplesExcluded = row[Option[Long]](idx + 9)
      )
    )
  }
  implicit val writes: OWrites[PgStatProgressCopyViewRow] = OWrites[PgStatProgressCopyViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "pid" -> Json.toJson(o.pid),
      "datid" -> Json.toJson(o.datid),
      "datname" -> Json.toJson(o.datname),
      "relid" -> Json.toJson(o.relid),
      "command" -> Json.toJson(o.command),
      "type" -> Json.toJson(o.`type`),
      "bytes_processed" -> Json.toJson(o.bytesProcessed),
      "bytes_total" -> Json.toJson(o.bytesTotal),
      "tuples_processed" -> Json.toJson(o.tuplesProcessed),
      "tuples_excluded" -> Json.toJson(o.tuplesExcluded)
    ))
  )
}
