/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_inherits

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgInheritsRow(
  inhrelid: /* oid */ Long,
  inhparent: /* oid */ Long,
  inhseqno: Int,
  inhdetachpending: Boolean
){
   val compositeId: PgInheritsId = PgInheritsId(inhrelid, inhseqno)
 }

object PgInheritsRow {
  def rowParser(idx: Int): RowParser[PgInheritsRow] =
    RowParser[PgInheritsRow] { row =>
      Success(
        PgInheritsRow(
          inhrelid = row[/* oid */ Long](idx + 0),
          inhparent = row[/* oid */ Long](idx + 1),
          inhseqno = row[Int](idx + 2),
          inhdetachpending = row[Boolean](idx + 3)
        )
      )
    }
  implicit val oFormat: OFormat[PgInheritsRow] = new OFormat[PgInheritsRow]{
    override def writes(o: PgInheritsRow): JsObject =
      Json.obj(
        "inhrelid" -> o.inhrelid,
        "inhparent" -> o.inhparent,
        "inhseqno" -> o.inhseqno,
        "inhdetachpending" -> o.inhdetachpending
      )
  
    override def reads(json: JsValue): JsResult[PgInheritsRow] = {
      JsResult.fromTry(
        Try(
          PgInheritsRow(
            inhrelid = json.\("inhrelid").as[/* oid */ Long],
            inhparent = json.\("inhparent").as[/* oid */ Long],
            inhseqno = json.\("inhseqno").as[Int],
            inhdetachpending = json.\("inhdetachpending").as[Boolean]
          )
        )
      )
    }
  }
}
