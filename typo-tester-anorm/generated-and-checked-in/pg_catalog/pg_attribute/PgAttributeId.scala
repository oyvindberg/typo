/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_attribute

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** Type for the composite primary key of table `pg_catalog.pg_attribute` */
case class PgAttributeId(attrelid: /* oid */ Long, attnum: Int)
object PgAttributeId {
  implicit val ordering: Ordering[PgAttributeId] = Ordering.by(x => (x.attrelid, x.attnum))
  implicit val oFormat: OFormat[PgAttributeId] = new OFormat[PgAttributeId]{
    override def writes(o: PgAttributeId): JsObject =
      Json.obj(
        "attrelid" -> o.attrelid,
        "attnum" -> o.attnum
      )
  
    override def reads(json: JsValue): JsResult[PgAttributeId] = {
      JsResult.fromTry(
        Try(
          PgAttributeId(
            attrelid = json.\("attrelid").as[/* oid */ Long],
            attnum = json.\("attnum").as[Int]
          )
        )
      )
    }
  }
}
