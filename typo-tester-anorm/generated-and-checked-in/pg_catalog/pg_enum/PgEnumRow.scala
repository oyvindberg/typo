/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_enum

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgEnumRow(
  oid: PgEnumId,
  enumtypid: /* oid */ Long,
  enumsortorder: Float,
  enumlabel: String
)

object PgEnumRow {
  implicit val reads: Reads[PgEnumRow] = Reads[PgEnumRow](json => JsResult.fromTry(
      Try(
        PgEnumRow(
          oid = json.\("oid").as[PgEnumId],
          enumtypid = json.\("enumtypid").as[/* oid */ Long],
          enumsortorder = json.\("enumsortorder").as[Float],
          enumlabel = json.\("enumlabel").as[String]
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgEnumRow] = RowParser[PgEnumRow] { row =>
    Success(
      PgEnumRow(
        oid = row[PgEnumId](idx + 0),
        enumtypid = row[/* oid */ Long](idx + 1),
        enumsortorder = row[Float](idx + 2),
        enumlabel = row[String](idx + 3)
      )
    )
  }
  implicit val writes: OWrites[PgEnumRow] = OWrites[PgEnumRow](o =>
    new JsObject(ListMap[String, JsValue](
      "oid" -> Json.toJson(o.oid),
      "enumtypid" -> Json.toJson(o.enumtypid),
      "enumsortorder" -> Json.toJson(o.enumsortorder),
      "enumlabel" -> Json.toJson(o.enumlabel)
    ))
  )
}
