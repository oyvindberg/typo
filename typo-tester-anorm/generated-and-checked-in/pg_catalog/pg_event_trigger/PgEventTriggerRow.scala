/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_event_trigger

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgEventTriggerRow(
  oid: PgEventTriggerId,
  evtname: String,
  evtevent: String,
  evtowner: /* oid */ Long,
  evtfoid: /* oid */ Long,
  evtenabled: String,
  evttags: Option[Array[String]]
)

object PgEventTriggerRow {
  def rowParser(idx: Int): RowParser[PgEventTriggerRow] =
    RowParser[PgEventTriggerRow] { row =>
      Success(
        PgEventTriggerRow(
          oid = row[PgEventTriggerId](idx + 0),
          evtname = row[String](idx + 1),
          evtevent = row[String](idx + 2),
          evtowner = row[/* oid */ Long](idx + 3),
          evtfoid = row[/* oid */ Long](idx + 4),
          evtenabled = row[String](idx + 5),
          evttags = row[Option[Array[String]]](idx + 6)
        )
      )
    }
  implicit val oFormat: OFormat[PgEventTriggerRow] = new OFormat[PgEventTriggerRow]{
    override def writes(o: PgEventTriggerRow): JsObject =
      Json.obj(
        "oid" -> o.oid,
        "evtname" -> o.evtname,
        "evtevent" -> o.evtevent,
        "evtowner" -> o.evtowner,
        "evtfoid" -> o.evtfoid,
        "evtenabled" -> o.evtenabled,
        "evttags" -> o.evttags
      )
  
    override def reads(json: JsValue): JsResult[PgEventTriggerRow] = {
      JsResult.fromTry(
        Try(
          PgEventTriggerRow(
            oid = json.\("oid").as[PgEventTriggerId],
            evtname = json.\("evtname").as[String],
            evtevent = json.\("evtevent").as[String],
            evtowner = json.\("evtowner").as[/* oid */ Long],
            evtfoid = json.\("evtfoid").as[/* oid */ Long],
            evtenabled = json.\("evtenabled").as[String],
            evttags = json.\("evttags").toOption.map(_.as[Array[String]])
          )
        )
      )
    }
  }
}
