/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_event_trigger

import anorm.SqlStringInterpolation
import java.sql.Connection

object PgEventTriggerRepoImpl extends PgEventTriggerRepo {
  override def delete(oid: PgEventTriggerId)(implicit c: Connection): Boolean = {
    SQL"delete from pg_catalog.pg_event_trigger where oid = $oid".executeUpdate() > 0
  }
  override def insert(unsaved: PgEventTriggerRow)(implicit c: Connection): PgEventTriggerRow = {
    SQL"""insert into pg_catalog.pg_event_trigger(oid, evtname, evtevent, evtowner, evtfoid, evtenabled, evttags)
          values (${unsaved.oid}::oid, ${unsaved.evtname}::name, ${unsaved.evtevent}::name, ${unsaved.evtowner}::oid, ${unsaved.evtfoid}::oid, ${unsaved.evtenabled}::char, ${unsaved.evttags}::_text)
          returning oid, evtname, evtevent, evtowner, evtfoid, evtenabled, evttags
       """
      .executeInsert(PgEventTriggerRow.rowParser(1).single)
  
  }
  override def selectAll(implicit c: Connection): List[PgEventTriggerRow] = {
    SQL"""select oid, evtname, evtevent, evtowner, evtfoid, evtenabled, evttags
          from pg_catalog.pg_event_trigger
       """.as(PgEventTriggerRow.rowParser(1).*)
  }
  override def selectById(oid: PgEventTriggerId)(implicit c: Connection): Option[PgEventTriggerRow] = {
    SQL"""select oid, evtname, evtevent, evtowner, evtfoid, evtenabled, evttags
          from pg_catalog.pg_event_trigger
          where oid = $oid
       """.as(PgEventTriggerRow.rowParser(1).singleOpt)
  }
  override def selectByIds(oids: Array[PgEventTriggerId])(implicit c: Connection): List[PgEventTriggerRow] = {
    SQL"""select oid, evtname, evtevent, evtowner, evtfoid, evtenabled, evttags
          from pg_catalog.pg_event_trigger
          where oid = ANY($oids)
       """.as(PgEventTriggerRow.rowParser(1).*)
  
  }
  override def update(row: PgEventTriggerRow)(implicit c: Connection): Boolean = {
    val oid = row.oid
    SQL"""update pg_catalog.pg_event_trigger
          set evtname = ${row.evtname}::name,
              evtevent = ${row.evtevent}::name,
              evtowner = ${row.evtowner}::oid,
              evtfoid = ${row.evtfoid}::oid,
              evtenabled = ${row.evtenabled}::char,
              evttags = ${row.evttags}::_text
          where oid = $oid
       """.executeUpdate() > 0
  }
  override def upsert(unsaved: PgEventTriggerRow)(implicit c: Connection): PgEventTriggerRow = {
    SQL"""insert into pg_catalog.pg_event_trigger(oid, evtname, evtevent, evtowner, evtfoid, evtenabled, evttags)
          values (
            ${unsaved.oid}::oid,
            ${unsaved.evtname}::name,
            ${unsaved.evtevent}::name,
            ${unsaved.evtowner}::oid,
            ${unsaved.evtfoid}::oid,
            ${unsaved.evtenabled}::char,
            ${unsaved.evttags}::_text
          )
          on conflict (oid)
          do update set
            evtname = EXCLUDED.evtname,
            evtevent = EXCLUDED.evtevent,
            evtowner = EXCLUDED.evtowner,
            evtfoid = EXCLUDED.evtfoid,
            evtenabled = EXCLUDED.evtenabled,
            evttags = EXCLUDED.evttags
          returning oid, evtname, evtevent, evtowner, evtfoid, evtenabled, evttags
       """
      .executeInsert(PgEventTriggerRow.rowParser(1).single)
  
  }
}
