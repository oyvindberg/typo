/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_config_map

import anorm.SqlStringInterpolation
import java.sql.Connection

object PgTsConfigMapRepoImpl extends PgTsConfigMapRepo {
  override def delete(compositeId: PgTsConfigMapId)(implicit c: Connection): Boolean = {
    SQL"delete from pg_catalog.pg_ts_config_map where mapcfg = ${compositeId.mapcfg} AND maptokentype = ${compositeId.maptokentype} AND mapseqno = ${compositeId.mapseqno}".executeUpdate() > 0
  }
  override def insert(unsaved: PgTsConfigMapRow)(implicit c: Connection): PgTsConfigMapRow = {
    SQL"""insert into pg_catalog.pg_ts_config_map(mapcfg, maptokentype, mapseqno, mapdict)
          values (${unsaved.mapcfg}::oid, ${unsaved.maptokentype}::int4, ${unsaved.mapseqno}::int4, ${unsaved.mapdict}::oid)
          returning mapcfg, maptokentype, mapseqno, mapdict
       """
      .executeInsert(PgTsConfigMapRow.rowParser(1).single)
  
  }
  override def selectAll(implicit c: Connection): List[PgTsConfigMapRow] = {
    SQL"""select mapcfg, maptokentype, mapseqno, mapdict
          from pg_catalog.pg_ts_config_map
       """.as(PgTsConfigMapRow.rowParser(1).*)
  }
  override def selectById(compositeId: PgTsConfigMapId)(implicit c: Connection): Option[PgTsConfigMapRow] = {
    SQL"""select mapcfg, maptokentype, mapseqno, mapdict
          from pg_catalog.pg_ts_config_map
          where mapcfg = ${compositeId.mapcfg} AND maptokentype = ${compositeId.maptokentype} AND mapseqno = ${compositeId.mapseqno}
       """.as(PgTsConfigMapRow.rowParser(1).singleOpt)
  }
  override def update(row: PgTsConfigMapRow)(implicit c: Connection): Boolean = {
    val compositeId = row.compositeId
    SQL"""update pg_catalog.pg_ts_config_map
          set mapdict = ${row.mapdict}::oid
          where mapcfg = ${compositeId.mapcfg} AND maptokentype = ${compositeId.maptokentype} AND mapseqno = ${compositeId.mapseqno}
       """.executeUpdate() > 0
  }
  override def upsert(unsaved: PgTsConfigMapRow)(implicit c: Connection): PgTsConfigMapRow = {
    SQL"""insert into pg_catalog.pg_ts_config_map(mapcfg, maptokentype, mapseqno, mapdict)
          values (
            ${unsaved.mapcfg}::oid,
            ${unsaved.maptokentype}::int4,
            ${unsaved.mapseqno}::int4,
            ${unsaved.mapdict}::oid
          )
          on conflict (mapcfg, maptokentype, mapseqno)
          do update set
            mapdict = EXCLUDED.mapdict
          returning mapcfg, maptokentype, mapseqno, mapdict
       """
      .executeInsert(PgTsConfigMapRow.rowParser(1).single)
  
  }
}
