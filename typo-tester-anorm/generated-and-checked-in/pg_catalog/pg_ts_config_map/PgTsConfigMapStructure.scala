/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_config_map

import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class PgTsConfigMapStructure[Row](val prefix: Option[String], val extract: Row => PgTsConfigMapRow, val merge: (Row, PgTsConfigMapRow) => Row)
  extends Relation[PgTsConfigMapFields, PgTsConfigMapRow, Row]
    with PgTsConfigMapFields[Row] { outer =>

  override val mapcfg = new IdField[/* oid */ Long, Row](prefix, "mapcfg", None, Some("oid"))(x => extract(x).mapcfg, (row, value) => merge(row, extract(row).copy(mapcfg = value)))
  override val maptokentype = new IdField[Int, Row](prefix, "maptokentype", None, Some("int4"))(x => extract(x).maptokentype, (row, value) => merge(row, extract(row).copy(maptokentype = value)))
  override val mapseqno = new IdField[Int, Row](prefix, "mapseqno", None, Some("int4"))(x => extract(x).mapseqno, (row, value) => merge(row, extract(row).copy(mapseqno = value)))
  override val mapdict = new Field[/* oid */ Long, Row](prefix, "mapdict", None, Some("oid"))(x => extract(x).mapdict, (row, value) => merge(row, extract(row).copy(mapdict = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](mapcfg, maptokentype, mapseqno, mapdict)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgTsConfigMapRow, merge: (NewRow, PgTsConfigMapRow) => NewRow): PgTsConfigMapStructure[NewRow] =
    new PgTsConfigMapStructure(prefix, extract, merge)
}
