/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_opclass

import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.DeleteBuilder.DeleteBuilderMock
import typo.dsl.DeleteParams
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderMock
import typo.dsl.SelectParams
import typo.dsl.UpdateBuilder
import typo.dsl.UpdateBuilder.UpdateBuilderMock
import typo.dsl.UpdateParams

class PgOpclassRepoMock(map: scala.collection.mutable.Map[PgOpclassId, PgOpclassRow] = scala.collection.mutable.Map.empty) extends PgOpclassRepo {
  override def delete(oid: PgOpclassId)(implicit c: Connection): Boolean = {
    map.remove(oid).isDefined
  }
  override def delete: DeleteBuilder[PgOpclassFields, PgOpclassRow] = {
    DeleteBuilderMock(DeleteParams.empty, PgOpclassFields, map)
  }
  override def insert(unsaved: PgOpclassRow)(implicit c: Connection): PgOpclassRow = {
    if (map.contains(unsaved.oid))
      sys.error(s"id ${unsaved.oid} already exists")
    else
      map.put(unsaved.oid, unsaved)
    unsaved
  }
  override def select: SelectBuilder[PgOpclassFields, PgOpclassRow] = {
    SelectBuilderMock(PgOpclassFields, () => map.values.toList, SelectParams.empty)
  }
  override def selectAll(implicit c: Connection): List[PgOpclassRow] = {
    map.values.toList
  }
  override def selectById(oid: PgOpclassId)(implicit c: Connection): Option[PgOpclassRow] = {
    map.get(oid)
  }
  override def selectByIds(oids: Array[PgOpclassId])(implicit c: Connection): List[PgOpclassRow] = {
    oids.flatMap(map.get).toList
  }
  override def update(row: PgOpclassRow)(implicit c: Connection): Boolean = {
    map.get(row.oid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.oid, row)
        true
      case None => false
    }
  }
  override def update: UpdateBuilder[PgOpclassFields, PgOpclassRow] = {
    UpdateBuilderMock(UpdateParams.empty, PgOpclassFields, map)
  }
  override def upsert(unsaved: PgOpclassRow)(implicit c: Connection): PgOpclassRow = {
    map.put(unsaved.oid, unsaved)
    unsaved
  }
}
