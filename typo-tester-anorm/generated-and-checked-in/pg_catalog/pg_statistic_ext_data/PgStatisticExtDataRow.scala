/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statistic_ext_data

import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgStatisticExtDataRow(
  stxoid: PgStatisticExtDataId,
  stxdndistinct: Option[String],
  stxddependencies: Option[String],
  stxdmcv: Option[String],
  stxdexpr: Option[String]
)

object PgStatisticExtDataRow {
  implicit val reads: Reads[PgStatisticExtDataRow] = Reads[PgStatisticExtDataRow](json => JsResult.fromTry(
      Try(
        PgStatisticExtDataRow(
          stxoid = json.\("stxoid").as(PgStatisticExtDataId.reads),
          stxdndistinct = json.\("stxdndistinct").toOption.map(_.as(Reads.StringReads)),
          stxddependencies = json.\("stxddependencies").toOption.map(_.as(Reads.StringReads)),
          stxdmcv = json.\("stxdmcv").toOption.map(_.as(Reads.StringReads)),
          stxdexpr = json.\("stxdexpr").toOption.map(_.as(Reads.StringReads))
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgStatisticExtDataRow] = RowParser[PgStatisticExtDataRow] { row =>
    Success(
      PgStatisticExtDataRow(
        stxoid = row(idx + 0)(PgStatisticExtDataId.column),
        stxdndistinct = row(idx + 1)(Column.columnToOption(Column.columnToString)),
        stxddependencies = row(idx + 2)(Column.columnToOption(Column.columnToString)),
        stxdmcv = row(idx + 3)(Column.columnToOption(Column.columnToString)),
        stxdexpr = row(idx + 4)(Column.columnToOption(Column.columnToString))
      )
    )
  }
  implicit val writes: OWrites[PgStatisticExtDataRow] = OWrites[PgStatisticExtDataRow](o =>
    new JsObject(ListMap[String, JsValue](
      "stxoid" -> PgStatisticExtDataId.writes.writes(o.stxoid),
      "stxdndistinct" -> Writes.OptionWrites(Writes.StringWrites).writes(o.stxdndistinct),
      "stxddependencies" -> Writes.OptionWrites(Writes.StringWrites).writes(o.stxddependencies),
      "stxdmcv" -> Writes.OptionWrites(Writes.StringWrites).writes(o.stxdmcv),
      "stxdexpr" -> Writes.OptionWrites(Writes.StringWrites).writes(o.stxdexpr)
    ))
  )
}
