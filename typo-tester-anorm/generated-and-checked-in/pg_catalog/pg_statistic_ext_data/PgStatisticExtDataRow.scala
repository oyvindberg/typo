/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statistic_ext_data

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgStatisticExtDataRow(
  stxoid: PgStatisticExtDataId,
  stxdndistinct: Option[String],
  stxddependencies: Option[String],
  stxdmcv: Option[String],
  stxdexpr: Option[String]
)

object PgStatisticExtDataRow {
  implicit val reads: Reads[PgStatisticExtDataRow] = Reads[PgStatisticExtDataRow](json => JsResult.fromTry(
      Try(
        PgStatisticExtDataRow(
          stxoid = json.\("stxoid").as[PgStatisticExtDataId],
          stxdndistinct = json.\("stxdndistinct").toOption.map(_.as[String]),
          stxddependencies = json.\("stxddependencies").toOption.map(_.as[String]),
          stxdmcv = json.\("stxdmcv").toOption.map(_.as[String]),
          stxdexpr = json.\("stxdexpr").toOption.map(_.as[String])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgStatisticExtDataRow] = RowParser[PgStatisticExtDataRow] { row =>
    Success(
      PgStatisticExtDataRow(
        stxoid = row[PgStatisticExtDataId](idx + 0),
        stxdndistinct = row[Option[String]](idx + 1),
        stxddependencies = row[Option[String]](idx + 2),
        stxdmcv = row[Option[String]](idx + 3),
        stxdexpr = row[Option[String]](idx + 4)
      )
    )
  }
  implicit val writes: OWrites[PgStatisticExtDataRow] = OWrites[PgStatisticExtDataRow](o =>
    new JsObject(ListMap[String, JsValue](
      "stxoid" -> Json.toJson(o.stxoid),
      "stxdndistinct" -> Json.toJson(o.stxdndistinct),
      "stxddependencies" -> Json.toJson(o.stxddependencies),
      "stxdmcv" -> Json.toJson(o.stxdmcv),
      "stxdexpr" -> Json.toJson(o.stxdexpr)
    ))
  )
}
