/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statistic_ext_data

import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.DeleteBuilder.DeleteBuilderMock
import typo.dsl.DeleteParams
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderMock
import typo.dsl.SelectParams
import typo.dsl.UpdateBuilder
import typo.dsl.UpdateBuilder.UpdateBuilderMock
import typo.dsl.UpdateParams

class PgStatisticExtDataRepoMock(map: scala.collection.mutable.Map[PgStatisticExtDataId, PgStatisticExtDataRow] = scala.collection.mutable.Map.empty) extends PgStatisticExtDataRepo {
  override def delete(stxoid: PgStatisticExtDataId)(implicit c: Connection): Boolean = {
    map.remove(stxoid).isDefined
  }
  override def delete: DeleteBuilder[PgStatisticExtDataFields, PgStatisticExtDataRow] = {
    DeleteBuilderMock(DeleteParams.empty, PgStatisticExtDataFields, map)
  }
  override def insert(unsaved: PgStatisticExtDataRow)(implicit c: Connection): PgStatisticExtDataRow = {
    if (map.contains(unsaved.stxoid))
      sys.error(s"id ${unsaved.stxoid} already exists")
    else
      map.put(unsaved.stxoid, unsaved)
    unsaved
  }
  override def select: SelectBuilder[PgStatisticExtDataFields, PgStatisticExtDataRow] = {
    SelectBuilderMock(PgStatisticExtDataFields, () => map.values.toList, SelectParams.empty)
  }
  override def selectAll(implicit c: Connection): List[PgStatisticExtDataRow] = {
    map.values.toList
  }
  override def selectById(stxoid: PgStatisticExtDataId)(implicit c: Connection): Option[PgStatisticExtDataRow] = {
    map.get(stxoid)
  }
  override def selectByIds(stxoids: Array[PgStatisticExtDataId])(implicit c: Connection): List[PgStatisticExtDataRow] = {
    stxoids.flatMap(map.get).toList
  }
  override def update(row: PgStatisticExtDataRow)(implicit c: Connection): Boolean = {
    map.get(row.stxoid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.stxoid, row)
        true
      case None => false
    }
  }
  override def update: UpdateBuilder[PgStatisticExtDataFields, PgStatisticExtDataRow] = {
    UpdateBuilderMock(UpdateParams.empty, PgStatisticExtDataFields, map)
  }
  override def upsert(unsaved: PgStatisticExtDataRow)(implicit c: Connection): PgStatisticExtDataRow = {
    map.put(unsaved.stxoid, unsaved)
    unsaved
  }
}
