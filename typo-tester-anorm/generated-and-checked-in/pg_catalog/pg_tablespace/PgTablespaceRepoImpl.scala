/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_tablespace

import anorm.SqlStringInterpolation
import java.sql.Connection

object PgTablespaceRepoImpl extends PgTablespaceRepo {
  override def delete(oid: PgTablespaceId)(implicit c: Connection): Boolean = {
    SQL"delete from pg_catalog.pg_tablespace where oid = $oid".executeUpdate() > 0
  }
  override def insert(unsaved: PgTablespaceRow)(implicit c: Connection): PgTablespaceRow = {
    SQL"""insert into pg_catalog.pg_tablespace(oid, spcname, spcowner, spcacl, spcoptions)
          values (${unsaved.oid}::oid, ${unsaved.spcname}::name, ${unsaved.spcowner}::oid, ${unsaved.spcacl}::_aclitem, ${unsaved.spcoptions}::_text)
          returning oid, spcname, spcowner, spcacl, spcoptions
       """
      .executeInsert(PgTablespaceRow.rowParser(1).single)
    
  }
  override def selectAll(implicit c: Connection): List[PgTablespaceRow] = {
    SQL"""select oid, spcname, spcowner, spcacl, spcoptions
          from pg_catalog.pg_tablespace
       """.as(PgTablespaceRow.rowParser(1).*)
  }
  override def selectById(oid: PgTablespaceId)(implicit c: Connection): Option[PgTablespaceRow] = {
    SQL"""select oid, spcname, spcowner, spcacl, spcoptions
          from pg_catalog.pg_tablespace
          where oid = $oid
       """.as(PgTablespaceRow.rowParser(1).singleOpt)
  }
  override def selectByIds(oids: Array[PgTablespaceId])(implicit c: Connection): List[PgTablespaceRow] = {
    SQL"""select oid, spcname, spcowner, spcacl, spcoptions
          from pg_catalog.pg_tablespace
          where oid = ANY($oids)
       """.as(PgTablespaceRow.rowParser(1).*)
    
  }
  override def update(row: PgTablespaceRow)(implicit c: Connection): Boolean = {
    val oid = row.oid
    SQL"""update pg_catalog.pg_tablespace
          set spcname = ${row.spcname}::name,
              spcowner = ${row.spcowner}::oid,
              spcacl = ${row.spcacl}::_aclitem,
              spcoptions = ${row.spcoptions}::_text
          where oid = $oid
       """.executeUpdate() > 0
  }
  override def upsert(unsaved: PgTablespaceRow)(implicit c: Connection): PgTablespaceRow = {
    SQL"""insert into pg_catalog.pg_tablespace(oid, spcname, spcowner, spcacl, spcoptions)
          values (
            ${unsaved.oid}::oid,
            ${unsaved.spcname}::name,
            ${unsaved.spcowner}::oid,
            ${unsaved.spcacl}::_aclitem,
            ${unsaved.spcoptions}::_text
          )
          on conflict (oid)
          do update set
            spcname = EXCLUDED.spcname,
            spcowner = EXCLUDED.spcowner,
            spcacl = EXCLUDED.spcacl,
            spcoptions = EXCLUDED.spcoptions
          returning oid, spcname, spcowner, spcacl, spcoptions
       """
      .executeInsert(PgTablespaceRow.rowParser(1).single)
    
  }
}
