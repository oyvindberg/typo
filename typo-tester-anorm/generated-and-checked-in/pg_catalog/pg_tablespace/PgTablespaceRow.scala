/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_tablespace

import adventureworks.TypoAclItem
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgTablespaceRow(
  oid: PgTablespaceId,
  spcname: String,
  spcowner: /* oid */ Long,
  spcacl: Option[Array[TypoAclItem]],
  spcoptions: Option[Array[String]]
)

object PgTablespaceRow {
  def rowParser(idx: Int): RowParser[PgTablespaceRow] =
    RowParser[PgTablespaceRow] { row =>
      Success(
        PgTablespaceRow(
          oid = row[PgTablespaceId](idx + 0),
          spcname = row[String](idx + 1),
          spcowner = row[/* oid */ Long](idx + 2),
          spcacl = row[Option[Array[TypoAclItem]]](idx + 3),
          spcoptions = row[Option[Array[String]]](idx + 4)
        )
      )
    }
  implicit val oFormat: OFormat[PgTablespaceRow] = new OFormat[PgTablespaceRow]{
    override def writes(o: PgTablespaceRow): JsObject =
      Json.obj(
        "oid" -> o.oid,
        "spcname" -> o.spcname,
        "spcowner" -> o.spcowner,
        "spcacl" -> o.spcacl,
        "spcoptions" -> o.spcoptions
      )
  
    override def reads(json: JsValue): JsResult[PgTablespaceRow] = {
      JsResult.fromTry(
        Try(
          PgTablespaceRow(
            oid = json.\("oid").as[PgTablespaceId],
            spcname = json.\("spcname").as[String],
            spcowner = json.\("spcowner").as[/* oid */ Long],
            spcacl = json.\("spcacl").toOption.map(_.as[Array[TypoAclItem]]),
            spcoptions = json.\("spcoptions").toOption.map(_.as[Array[String]])
          )
        )
      )
    }
  }
}
