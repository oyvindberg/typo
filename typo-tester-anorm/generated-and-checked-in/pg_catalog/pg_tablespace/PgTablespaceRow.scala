/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_tablespace

import adventureworks.TypoAclItem
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgTablespaceRow(
  oid: PgTablespaceId,
  spcname: String,
  spcowner: /* oid */ Long,
  spcacl: Option[Array[TypoAclItem]],
  spcoptions: Option[Array[String]]
)

object PgTablespaceRow {
  implicit val reads: Reads[PgTablespaceRow] = Reads[PgTablespaceRow](json => JsResult.fromTry(
      Try(
        PgTablespaceRow(
          oid = json.\("oid").as[PgTablespaceId],
          spcname = json.\("spcname").as[String],
          spcowner = json.\("spcowner").as[/* oid */ Long],
          spcacl = json.\("spcacl").toOption.map(_.as[Array[TypoAclItem]]),
          spcoptions = json.\("spcoptions").toOption.map(_.as[Array[String]])
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgTablespaceRow] = RowParser[PgTablespaceRow] { row =>
    Success(
      PgTablespaceRow(
        oid = row[PgTablespaceId](idx + 0),
        spcname = row[String](idx + 1),
        spcowner = row[/* oid */ Long](idx + 2),
        spcacl = row[Option[Array[TypoAclItem]]](idx + 3),
        spcoptions = row[Option[Array[String]]](idx + 4)
      )
    )
  }
  implicit val writes: OWrites[PgTablespaceRow] = OWrites[PgTablespaceRow](o =>
    new JsObject(ListMap[String, JsValue](
      "oid" -> Json.toJson(o.oid),
      "spcname" -> Json.toJson(o.spcname),
      "spcowner" -> Json.toJson(o.spcowner),
      "spcacl" -> Json.toJson(o.spcacl),
      "spcoptions" -> Json.toJson(o.spcoptions)
    ))
  )
}
