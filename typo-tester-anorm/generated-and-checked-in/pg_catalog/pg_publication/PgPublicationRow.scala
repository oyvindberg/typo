/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_publication

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgPublicationRow(
  oid: PgPublicationId,
  pubname: String,
  pubowner: /* oid */ Long,
  puballtables: Boolean,
  pubinsert: Boolean,
  pubupdate: Boolean,
  pubdelete: Boolean,
  pubtruncate: Boolean,
  pubviaroot: Boolean
)

object PgPublicationRow {
  def rowParser(idx: Int): RowParser[PgPublicationRow] =
    RowParser[PgPublicationRow] { row =>
      Success(
        PgPublicationRow(
          oid = row[PgPublicationId](idx + 0),
          pubname = row[String](idx + 1),
          pubowner = row[/* oid */ Long](idx + 2),
          puballtables = row[Boolean](idx + 3),
          pubinsert = row[Boolean](idx + 4),
          pubupdate = row[Boolean](idx + 5),
          pubdelete = row[Boolean](idx + 6),
          pubtruncate = row[Boolean](idx + 7),
          pubviaroot = row[Boolean](idx + 8)
        )
      )
    }
  implicit val oFormat: OFormat[PgPublicationRow] = new OFormat[PgPublicationRow]{
    override def writes(o: PgPublicationRow): JsObject =
      Json.obj(
        "oid" -> o.oid,
        "pubname" -> o.pubname,
        "pubowner" -> o.pubowner,
        "puballtables" -> o.puballtables,
        "pubinsert" -> o.pubinsert,
        "pubupdate" -> o.pubupdate,
        "pubdelete" -> o.pubdelete,
        "pubtruncate" -> o.pubtruncate,
        "pubviaroot" -> o.pubviaroot
      )
  
    override def reads(json: JsValue): JsResult[PgPublicationRow] = {
      JsResult.fromTry(
        Try(
          PgPublicationRow(
            oid = json.\("oid").as[PgPublicationId],
            pubname = json.\("pubname").as[String],
            pubowner = json.\("pubowner").as[/* oid */ Long],
            puballtables = json.\("puballtables").as[Boolean],
            pubinsert = json.\("pubinsert").as[Boolean],
            pubupdate = json.\("pubupdate").as[Boolean],
            pubdelete = json.\("pubdelete").as[Boolean],
            pubtruncate = json.\("pubtruncate").as[Boolean],
            pubviaroot = json.\("pubviaroot").as[Boolean]
          )
        )
      )
    }
  }
}
