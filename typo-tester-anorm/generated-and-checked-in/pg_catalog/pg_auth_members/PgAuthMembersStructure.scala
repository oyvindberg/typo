/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_auth_members

import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

class PgAuthMembersStructure[Row](val prefix: Option[String], val extract: Row => PgAuthMembersRow, val merge: (Row, PgAuthMembersRow) => Row)
  extends Relation[PgAuthMembersFields, PgAuthMembersRow, Row]
    with PgAuthMembersFields[Row] { outer =>

  override val roleid = new IdField[/* oid */ Long, Row](prefix, "roleid", None, Some("oid"))(x => extract(x).roleid, (row, value) => merge(row, extract(row).copy(roleid = value)))
  override val member = new IdField[/* oid */ Long, Row](prefix, "member", None, Some("oid"))(x => extract(x).member, (row, value) => merge(row, extract(row).copy(member = value)))
  override val grantor = new Field[/* oid */ Long, Row](prefix, "grantor", None, Some("oid"))(x => extract(x).grantor, (row, value) => merge(row, extract(row).copy(grantor = value)))
  override val adminOption = new Field[Boolean, Row](prefix, "admin_option", None, None)(x => extract(x).adminOption, (row, value) => merge(row, extract(row).copy(adminOption = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](roleid, member, grantor, adminOption)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgAuthMembersRow, merge: (NewRow, PgAuthMembersRow) => NewRow): PgAuthMembersStructure[NewRow] =
    new PgAuthMembersStructure(prefix, extract, merge)
}
