/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_subscription_rel

import anorm.SqlStringInterpolation
import java.sql.Connection

object PgSubscriptionRelRepoImpl extends PgSubscriptionRelRepo {
  override def delete(compositeId: PgSubscriptionRelId)(implicit c: Connection): Boolean = {
    SQL"delete from pg_catalog.pg_subscription_rel where srrelid = ${compositeId.srrelid} AND srsubid = ${compositeId.srsubid}".executeUpdate() > 0
  }
  override def insert(unsaved: PgSubscriptionRelRow)(implicit c: Connection): PgSubscriptionRelRow = {
    SQL"""insert into pg_catalog.pg_subscription_rel(srsubid, srrelid, srsubstate, srsublsn)
          values (${unsaved.srsubid}::oid, ${unsaved.srrelid}::oid, ${unsaved.srsubstate}::char, ${unsaved.srsublsn}::pg_lsn)
          returning srsubid, srrelid, srsubstate, srsublsn
       """
      .executeInsert(PgSubscriptionRelRow.rowParser(1).single)
  
  }
  override def selectAll(implicit c: Connection): List[PgSubscriptionRelRow] = {
    SQL"""select srsubid, srrelid, srsubstate, srsublsn
          from pg_catalog.pg_subscription_rel
       """.as(PgSubscriptionRelRow.rowParser(1).*)
  }
  override def selectById(compositeId: PgSubscriptionRelId)(implicit c: Connection): Option[PgSubscriptionRelRow] = {
    SQL"""select srsubid, srrelid, srsubstate, srsublsn
          from pg_catalog.pg_subscription_rel
          where srrelid = ${compositeId.srrelid} AND srsubid = ${compositeId.srsubid}
       """.as(PgSubscriptionRelRow.rowParser(1).singleOpt)
  }
  override def update(row: PgSubscriptionRelRow)(implicit c: Connection): Boolean = {
    val compositeId = row.compositeId
    SQL"""update pg_catalog.pg_subscription_rel
          set srsubstate = ${row.srsubstate}::char,
              srsublsn = ${row.srsublsn}::pg_lsn
          where srrelid = ${compositeId.srrelid} AND srsubid = ${compositeId.srsubid}
       """.executeUpdate() > 0
  }
  override def upsert(unsaved: PgSubscriptionRelRow)(implicit c: Connection): PgSubscriptionRelRow = {
    SQL"""insert into pg_catalog.pg_subscription_rel(srsubid, srrelid, srsubstate, srsublsn)
          values (
            ${unsaved.srsubid}::oid,
            ${unsaved.srrelid}::oid,
            ${unsaved.srsubstate}::char,
            ${unsaved.srsublsn}::pg_lsn
          )
          on conflict (srrelid, srsubid)
          do update set
            srsubstate = EXCLUDED.srsubstate,
            srsublsn = EXCLUDED.srsublsn
          returning srsubid, srrelid, srsubstate, srsublsn
       """
      .executeInsert(PgSubscriptionRelRow.rowParser(1).single)
  
  }
}
