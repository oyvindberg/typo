/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_backend_memory_contexts

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgBackendMemoryContextsViewRow(
  name: Option[String],
  ident: Option[String],
  parent: Option[String],
  level: Option[Int],
  totalBytes: Option[Long],
  totalNblocks: Option[Long],
  freeBytes: Option[Long],
  freeChunks: Option[Long],
  usedBytes: Option[Long]
)

object PgBackendMemoryContextsViewRow {
  def rowParser(idx: Int): RowParser[PgBackendMemoryContextsViewRow] =
    RowParser[PgBackendMemoryContextsViewRow] { row =>
      Success(
        PgBackendMemoryContextsViewRow(
          name = row[Option[String]](idx + 0),
          ident = row[Option[String]](idx + 1),
          parent = row[Option[String]](idx + 2),
          level = row[Option[Int]](idx + 3),
          totalBytes = row[Option[Long]](idx + 4),
          totalNblocks = row[Option[Long]](idx + 5),
          freeBytes = row[Option[Long]](idx + 6),
          freeChunks = row[Option[Long]](idx + 7),
          usedBytes = row[Option[Long]](idx + 8)
        )
      )
    }
  implicit val oFormat: OFormat[PgBackendMemoryContextsViewRow] = new OFormat[PgBackendMemoryContextsViewRow]{
    override def writes(o: PgBackendMemoryContextsViewRow): JsObject =
      Json.obj(
        "name" -> o.name,
        "ident" -> o.ident,
        "parent" -> o.parent,
        "level" -> o.level,
        "total_bytes" -> o.totalBytes,
        "total_nblocks" -> o.totalNblocks,
        "free_bytes" -> o.freeBytes,
        "free_chunks" -> o.freeChunks,
        "used_bytes" -> o.usedBytes
      )
  
    override def reads(json: JsValue): JsResult[PgBackendMemoryContextsViewRow] = {
      JsResult.fromTry(
        Try(
          PgBackendMemoryContextsViewRow(
            name = json.\("name").toOption.map(_.as[String]),
            ident = json.\("ident").toOption.map(_.as[String]),
            parent = json.\("parent").toOption.map(_.as[String]),
            level = json.\("level").toOption.map(_.as[Int]),
            totalBytes = json.\("total_bytes").toOption.map(_.as[Long]),
            totalNblocks = json.\("total_nblocks").toOption.map(_.as[Long]),
            freeBytes = json.\("free_bytes").toOption.map(_.as[Long]),
            freeChunks = json.\("free_chunks").toOption.map(_.as[Long]),
            usedBytes = json.\("used_bytes").toOption.map(_.as[Long])
          )
        )
      )
    }
  }
}
