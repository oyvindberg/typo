/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_extension

import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgExtensionStructure[Row](val prefix: Option[String], val extract: Row => PgExtensionRow, val merge: (Row, PgExtensionRow) => Row)
  extends Relation[PgExtensionFields, PgExtensionRow, Row]
    with PgExtensionFields[Row] { outer =>

  override val oid = new IdField[PgExtensionId, Row](prefix, "oid", None, Some("oid"))(x => extract(x).oid, (row, value) => merge(row, extract(row).copy(oid = value)))
  override val extname = new Field[String, Row](prefix, "extname", None, Some("name"))(x => extract(x).extname, (row, value) => merge(row, extract(row).copy(extname = value)))
  override val extowner = new Field[/* oid */ Long, Row](prefix, "extowner", None, Some("oid"))(x => extract(x).extowner, (row, value) => merge(row, extract(row).copy(extowner = value)))
  override val extnamespace = new Field[/* oid */ Long, Row](prefix, "extnamespace", None, Some("oid"))(x => extract(x).extnamespace, (row, value) => merge(row, extract(row).copy(extnamespace = value)))
  override val extrelocatable = new Field[Boolean, Row](prefix, "extrelocatable", None, None)(x => extract(x).extrelocatable, (row, value) => merge(row, extract(row).copy(extrelocatable = value)))
  override val extversion = new Field[String, Row](prefix, "extversion", None, None)(x => extract(x).extversion, (row, value) => merge(row, extract(row).copy(extversion = value)))
  override val extconfig = new OptField[Array[/* oid */ Long], Row](prefix, "extconfig", None, Some("_oid"))(x => extract(x).extconfig, (row, value) => merge(row, extract(row).copy(extconfig = value)))
  override val extcondition = new OptField[Array[String], Row](prefix, "extcondition", None, Some("_text"))(x => extract(x).extcondition, (row, value) => merge(row, extract(row).copy(extcondition = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](oid, extname, extowner, extnamespace, extrelocatable, extversion, extconfig, extcondition)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgExtensionRow, merge: (NewRow, PgExtensionRow) => NewRow): PgExtensionStructure[NewRow] =
    new PgExtensionStructure(prefix, extract, merge)
}
