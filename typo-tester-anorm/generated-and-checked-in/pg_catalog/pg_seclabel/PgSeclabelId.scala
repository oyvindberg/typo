/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_seclabel

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

/** Type for the composite primary key of table `pg_catalog.pg_seclabel` */
case class PgSeclabelId(objoid: /* oid */ Long, classoid: /* oid */ Long, objsubid: Int, provider: String)
object PgSeclabelId {
  implicit val ordering: Ordering[PgSeclabelId] = Ordering.by(x => (x.objoid, x.classoid, x.objsubid, x.provider))
  implicit val reads: Reads[PgSeclabelId] = Reads[PgSeclabelId](json => JsResult.fromTry(
      Try(
        PgSeclabelId(
          objoid = json.\("objoid").as[/* oid */ Long],
          classoid = json.\("classoid").as[/* oid */ Long],
          objsubid = json.\("objsubid").as[Int],
          provider = json.\("provider").as[String]
        )
      )
    ),
  )
  implicit val writes: OWrites[PgSeclabelId] = OWrites[PgSeclabelId](o =>
    new JsObject(ListMap[String, JsValue](
      "objoid" -> Json.toJson(o.objoid),
      "classoid" -> Json.toJson(o.classoid),
      "objsubid" -> Json.toJson(o.objsubid),
      "provider" -> Json.toJson(o.provider)
    ))
  )
}
