/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_index

import java.sql.Connection

class PgIndexRepoMock(map: scala.collection.mutable.Map[PgIndexId, PgIndexRow] = scala.collection.mutable.Map.empty) extends PgIndexRepo {
  override def delete(indexrelid: PgIndexId)(implicit c: Connection): Boolean = {
    map.remove(indexrelid).isDefined
  }
  override def insert(unsaved: PgIndexRow)(implicit c: Connection): PgIndexRow = {
    if (map.contains(unsaved.indexrelid))
      sys.error(s"id ${unsaved.indexrelid} already exists")
    else
      map.put(unsaved.indexrelid, unsaved)
    unsaved
  }
  override def selectAll(implicit c: Connection): List[PgIndexRow] = {
    map.values.toList
  }
  override def selectById(indexrelid: PgIndexId)(implicit c: Connection): Option[PgIndexRow] = {
    map.get(indexrelid)
  }
  override def selectByIds(indexrelids: Array[PgIndexId])(implicit c: Connection): List[PgIndexRow] = {
    indexrelids.flatMap(map.get).toList
  }
  override def update(row: PgIndexRow)(implicit c: Connection): Boolean = {
    map.get(row.indexrelid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.indexrelid, row)
        true
      case None => false
    }
  }
  override def upsert(unsaved: PgIndexRow)(implicit c: Connection): PgIndexRow = {
    map.put(unsaved.indexrelid, unsaved)
    unsaved
  }
}
