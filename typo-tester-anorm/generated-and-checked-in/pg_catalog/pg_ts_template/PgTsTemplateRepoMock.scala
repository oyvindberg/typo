/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_template

import java.sql.Connection

class PgTsTemplateRepoMock(map: scala.collection.mutable.Map[PgTsTemplateId, PgTsTemplateRow] = scala.collection.mutable.Map.empty) extends PgTsTemplateRepo {
  override def delete(oid: PgTsTemplateId)(implicit c: Connection): Boolean = {
    map.remove(oid).isDefined
  }
  override def insert(unsaved: PgTsTemplateRow)(implicit c: Connection): PgTsTemplateRow = {
    if (map.contains(unsaved.oid))
      sys.error(s"id ${unsaved.oid} already exists")
    else
      map.put(unsaved.oid, unsaved)
    unsaved
  }
  override def selectAll(implicit c: Connection): List[PgTsTemplateRow] = {
    map.values.toList
  }
  override def selectById(oid: PgTsTemplateId)(implicit c: Connection): Option[PgTsTemplateRow] = {
    map.get(oid)
  }
  override def selectByIds(oids: Array[PgTsTemplateId])(implicit c: Connection): List[PgTsTemplateRow] = {
    oids.flatMap(map.get).toList
  }
  override def update(row: PgTsTemplateRow)(implicit c: Connection): Boolean = {
    map.get(row.oid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.oid, row)
        true
      case None => false
    }
  }
  override def upsert(unsaved: PgTsTemplateRow)(implicit c: Connection): PgTsTemplateRow = {
    map.put(unsaved.oid, unsaved)
    unsaved
  }
}
