/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_template

import adventureworks.TypoRegproc
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgTsTemplateRow(
  oid: PgTsTemplateId,
  tmplname: String,
  tmplnamespace: /* oid */ Long,
  tmplinit: TypoRegproc,
  tmpllexize: TypoRegproc
)

object PgTsTemplateRow {
  implicit val reads: Reads[PgTsTemplateRow] = Reads[PgTsTemplateRow](json => JsResult.fromTry(
      Try(
        PgTsTemplateRow(
          oid = json.\("oid").as(PgTsTemplateId.reads),
          tmplname = json.\("tmplname").as(Reads.StringReads),
          tmplnamespace = json.\("tmplnamespace").as(Reads.LongReads),
          tmplinit = json.\("tmplinit").as(TypoRegproc.reads),
          tmpllexize = json.\("tmpllexize").as(TypoRegproc.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgTsTemplateRow] = RowParser[PgTsTemplateRow] { row =>
    Success(
      PgTsTemplateRow(
        oid = row(idx + 0)(PgTsTemplateId.column),
        tmplname = row(idx + 1)(Column.columnToString),
        tmplnamespace = row(idx + 2)(Column.columnToLong),
        tmplinit = row(idx + 3)(TypoRegproc.column),
        tmpllexize = row(idx + 4)(TypoRegproc.column)
      )
    )
  }
  implicit val writes: OWrites[PgTsTemplateRow] = OWrites[PgTsTemplateRow](o =>
    new JsObject(ListMap[String, JsValue](
      "oid" -> PgTsTemplateId.writes.writes(o.oid),
      "tmplname" -> Writes.StringWrites.writes(o.tmplname),
      "tmplnamespace" -> Writes.LongWrites.writes(o.tmplnamespace),
      "tmplinit" -> TypoRegproc.writes.writes(o.tmplinit),
      "tmpllexize" -> TypoRegproc.writes.writes(o.tmpllexize)
    ))
  )
}
