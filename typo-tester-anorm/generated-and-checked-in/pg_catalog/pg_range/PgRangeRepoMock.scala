/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_range

import java.sql.Connection

class PgRangeRepoMock(map: scala.collection.mutable.Map[PgRangeId, PgRangeRow] = scala.collection.mutable.Map.empty) extends PgRangeRepo {
  override def delete(rngtypid: PgRangeId)(implicit c: Connection): Boolean = {
    map.remove(rngtypid).isDefined
  }
  override def insert(unsaved: PgRangeRow)(implicit c: Connection): PgRangeRow = {
    if (map.contains(unsaved.rngtypid))
      sys.error(s"id ${unsaved.rngtypid} already exists")
    else
      map.put(unsaved.rngtypid, unsaved)
    unsaved
  }
  override def selectAll(implicit c: Connection): List[PgRangeRow] = {
    map.values.toList
  }
  override def selectById(rngtypid: PgRangeId)(implicit c: Connection): Option[PgRangeRow] = {
    map.get(rngtypid)
  }
  override def selectByIds(rngtypids: Array[PgRangeId])(implicit c: Connection): List[PgRangeRow] = {
    rngtypids.flatMap(map.get).toList
  }
  override def update(row: PgRangeRow)(implicit c: Connection): Boolean = {
    map.get(row.rngtypid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.rngtypid, row)
        true
      case None => false
    }
  }
  override def upsert(unsaved: PgRangeRow)(implicit c: Connection): PgRangeRow = {
    map.put(unsaved.rngtypid, unsaved)
    unsaved
  }
}
