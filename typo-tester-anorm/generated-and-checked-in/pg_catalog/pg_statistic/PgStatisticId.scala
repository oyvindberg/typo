/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statistic

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** Type for the composite primary key of table `pg_catalog.pg_statistic` */
case class PgStatisticId(starelid: /* oid */ Long, staattnum: Int, stainherit: Boolean)
object PgStatisticId {
  implicit val ordering: Ordering[PgStatisticId] = Ordering.by(x => (x.starelid, x.staattnum, x.stainherit))
  implicit val oFormat: OFormat[PgStatisticId] = new OFormat[PgStatisticId]{
    override def writes(o: PgStatisticId): JsObject =
      Json.obj(
        "starelid" -> o.starelid,
        "staattnum" -> o.staattnum,
        "stainherit" -> o.stainherit
      )
  
    override def reads(json: JsValue): JsResult[PgStatisticId] = {
      JsResult.fromTry(
        Try(
          PgStatisticId(
            starelid = json.\("starelid").as[/* oid */ Long],
            staattnum = json.\("staattnum").as[Int],
            stainherit = json.\("stainherit").as[Boolean]
          )
        )
      )
    }
  }
}
