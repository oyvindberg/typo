/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statistic

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

/** Type for the composite primary key of table `pg_catalog.pg_statistic` */
case class PgStatisticId(starelid: /* oid */ Long, staattnum: Int, stainherit: Boolean)
object PgStatisticId {
  implicit val ordering: Ordering[PgStatisticId] = Ordering.by(x => (x.starelid, x.staattnum, x.stainherit))
  implicit val reads: Reads[PgStatisticId] = Reads[PgStatisticId](json => JsResult.fromTry(
      Try(
        PgStatisticId(
          starelid = json.\("starelid").as[/* oid */ Long],
          staattnum = json.\("staattnum").as[Int],
          stainherit = json.\("stainherit").as[Boolean]
        )
      )
    ),
  )
  implicit val writes: OWrites[PgStatisticId] = OWrites[PgStatisticId](o =>
    new JsObject(ListMap[String, JsValue](
      "starelid" -> Json.toJson(o.starelid),
      "staattnum" -> Json.toJson(o.staattnum),
      "stainherit" -> Json.toJson(o.stainherit)
    ))
  )
}
