/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_init_privs

import adventureworks.TypoAclItem
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgInitPrivsRow(
  objoid: /* oid */ Long,
  classoid: /* oid */ Long,
  objsubid: Int,
  privtype: String,
  initprivs: Array[TypoAclItem]
){
   val compositeId: PgInitPrivsId = PgInitPrivsId(objoid, classoid, objsubid)
 }

object PgInitPrivsRow {
  implicit val reads: Reads[PgInitPrivsRow] = Reads[PgInitPrivsRow](json => JsResult.fromTry(
      Try(
        PgInitPrivsRow(
          objoid = json.\("objoid").as(Reads.LongReads),
          classoid = json.\("classoid").as(Reads.LongReads),
          objsubid = json.\("objsubid").as(Reads.IntReads),
          privtype = json.\("privtype").as(Reads.StringReads),
          initprivs = json.\("initprivs").as(Reads.ArrayReads[TypoAclItem](TypoAclItem.reads, implicitly))
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgInitPrivsRow] = RowParser[PgInitPrivsRow] { row =>
    Success(
      PgInitPrivsRow(
        objoid = row(idx + 0)(Column.columnToLong),
        classoid = row(idx + 1)(Column.columnToLong),
        objsubid = row(idx + 2)(Column.columnToInt),
        privtype = row(idx + 3)(Column.columnToString),
        initprivs = row(idx + 4)(TypoAclItem.arrayColumn)
      )
    )
  }
  implicit val writes: OWrites[PgInitPrivsRow] = OWrites[PgInitPrivsRow](o =>
    new JsObject(ListMap[String, JsValue](
      "objoid" -> Writes.LongWrites.writes(o.objoid),
      "classoid" -> Writes.LongWrites.writes(o.classoid),
      "objsubid" -> Writes.IntWrites.writes(o.objsubid),
      "privtype" -> Writes.StringWrites.writes(o.privtype),
      "initprivs" -> Writes.arrayWrites[TypoAclItem](implicitly, TypoAclItem.writes).writes(o.initprivs)
    ))
  )
}
