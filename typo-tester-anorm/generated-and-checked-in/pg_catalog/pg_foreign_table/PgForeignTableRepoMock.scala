/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_foreign_table

import java.sql.Connection

class PgForeignTableRepoMock(map: scala.collection.mutable.Map[PgForeignTableId, PgForeignTableRow] = scala.collection.mutable.Map.empty) extends PgForeignTableRepo {
  override def delete(ftrelid: PgForeignTableId)(implicit c: Connection): Boolean = {
    map.remove(ftrelid).isDefined
  }
  override def insert(unsaved: PgForeignTableRow)(implicit c: Connection): PgForeignTableRow = {
    if (map.contains(unsaved.ftrelid))
      sys.error(s"id ${unsaved.ftrelid} already exists")
    else
      map.put(unsaved.ftrelid, unsaved)
    unsaved
  }
  override def selectAll(implicit c: Connection): List[PgForeignTableRow] = {
    map.values.toList
  }
  override def selectById(ftrelid: PgForeignTableId)(implicit c: Connection): Option[PgForeignTableRow] = {
    map.get(ftrelid)
  }
  override def selectByIds(ftrelids: Array[PgForeignTableId])(implicit c: Connection): List[PgForeignTableRow] = {
    ftrelids.flatMap(map.get).toList
  }
  override def update(row: PgForeignTableRow)(implicit c: Connection): Boolean = {
    map.get(row.ftrelid) match {
      case Some(`row`) => false
      case Some(_) =>
        map.put(row.ftrelid, row)
        true
      case None => false
    }
  }
  override def upsert(unsaved: PgForeignTableRow)(implicit c: Connection): PgForeignTableRow = {
    map.put(unsaved.ftrelid, unsaved)
    unsaved
  }
}
