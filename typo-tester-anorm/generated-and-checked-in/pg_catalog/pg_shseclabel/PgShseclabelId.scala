/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_shseclabel

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** Type for the composite primary key of table `pg_catalog.pg_shseclabel` */
case class PgShseclabelId(objoid: /* oid */ Long, classoid: /* oid */ Long, provider: String)
object PgShseclabelId {
  implicit val ordering: Ordering[PgShseclabelId] = Ordering.by(x => (x.objoid, x.classoid, x.provider))
  implicit val oFormat: OFormat[PgShseclabelId] = new OFormat[PgShseclabelId]{
    override def writes(o: PgShseclabelId): JsObject =
      Json.obj(
        "objoid" -> o.objoid,
        "classoid" -> o.classoid,
        "provider" -> o.provider
      )
  
    override def reads(json: JsValue): JsResult[PgShseclabelId] = {
      JsResult.fromTry(
        Try(
          PgShseclabelId(
            objoid = json.\("objoid").as[/* oid */ Long],
            classoid = json.\("classoid").as[/* oid */ Long],
            provider = json.\("provider").as[String]
          )
        )
      )
    }
  }
}
