/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_subscription

import anorm.RowParser
import anorm.Success
import java.time.OffsetDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgStatSubscriptionViewRow(
  subid: Option[/* oid */ Long],
  subname: Option[String],
  pid: Option[Int],
  relid: Option[/* oid */ Long],
  receivedLsn: Option[/* pg_lsn */ Long],
  lastMsgSendTime: Option[OffsetDateTime],
  lastMsgReceiptTime: Option[OffsetDateTime],
  latestEndLsn: Option[/* pg_lsn */ Long],
  latestEndTime: Option[OffsetDateTime]
)

object PgStatSubscriptionViewRow {
  def rowParser(idx: Int): RowParser[PgStatSubscriptionViewRow] =
    RowParser[PgStatSubscriptionViewRow] { row =>
      Success(
        PgStatSubscriptionViewRow(
          subid = row[Option[/* oid */ Long]](idx + 0),
          subname = row[Option[String]](idx + 1),
          pid = row[Option[Int]](idx + 2),
          relid = row[Option[/* oid */ Long]](idx + 3),
          receivedLsn = row[Option[/* pg_lsn */ Long]](idx + 4),
          lastMsgSendTime = row[Option[OffsetDateTime]](idx + 5),
          lastMsgReceiptTime = row[Option[OffsetDateTime]](idx + 6),
          latestEndLsn = row[Option[/* pg_lsn */ Long]](idx + 7),
          latestEndTime = row[Option[OffsetDateTime]](idx + 8)
        )
      )
    }
  implicit val oFormat: OFormat[PgStatSubscriptionViewRow] = new OFormat[PgStatSubscriptionViewRow]{
    override def writes(o: PgStatSubscriptionViewRow): JsObject =
      Json.obj(
        "subid" -> o.subid,
        "subname" -> o.subname,
        "pid" -> o.pid,
        "relid" -> o.relid,
        "received_lsn" -> o.receivedLsn,
        "last_msg_send_time" -> o.lastMsgSendTime,
        "last_msg_receipt_time" -> o.lastMsgReceiptTime,
        "latest_end_lsn" -> o.latestEndLsn,
        "latest_end_time" -> o.latestEndTime
      )
  
    override def reads(json: JsValue): JsResult[PgStatSubscriptionViewRow] = {
      JsResult.fromTry(
        Try(
          PgStatSubscriptionViewRow(
            subid = json.\("subid").toOption.map(_.as[/* oid */ Long]),
            subname = json.\("subname").toOption.map(_.as[String]),
            pid = json.\("pid").toOption.map(_.as[Int]),
            relid = json.\("relid").toOption.map(_.as[/* oid */ Long]),
            receivedLsn = json.\("received_lsn").toOption.map(_.as[/* pg_lsn */ Long]),
            lastMsgSendTime = json.\("last_msg_send_time").toOption.map(_.as[OffsetDateTime]),
            lastMsgReceiptTime = json.\("last_msg_receipt_time").toOption.map(_.as[OffsetDateTime]),
            latestEndLsn = json.\("latest_end_lsn").toOption.map(_.as[/* pg_lsn */ Long]),
            latestEndTime = json.\("latest_end_time").toOption.map(_.as[OffsetDateTime])
          )
        )
      )
    }
  }
}
