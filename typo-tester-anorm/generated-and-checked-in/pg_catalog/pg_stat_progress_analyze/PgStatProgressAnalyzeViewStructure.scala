/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_progress_analyze

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgStatProgressAnalyzeViewStructure[Row](val prefix: Option[String], val extract: Row => PgStatProgressAnalyzeViewRow, val merge: (Row, PgStatProgressAnalyzeViewRow) => Row)
  extends Relation[PgStatProgressAnalyzeViewFields, PgStatProgressAnalyzeViewRow, Row]
    with PgStatProgressAnalyzeViewFields[Row] { outer =>

  override val pid = new OptField[Int, Row](prefix, "pid", None, Some("int4"))(x => extract(x).pid, (row, value) => merge(row, extract(row).copy(pid = value)))
  override val datid = new OptField[/* oid */ Long, Row](prefix, "datid", None, Some("oid"))(x => extract(x).datid, (row, value) => merge(row, extract(row).copy(datid = value)))
  override val datname = new OptField[String, Row](prefix, "datname", None, Some("name"))(x => extract(x).datname, (row, value) => merge(row, extract(row).copy(datname = value)))
  override val relid = new OptField[/* oid */ Long, Row](prefix, "relid", None, Some("oid"))(x => extract(x).relid, (row, value) => merge(row, extract(row).copy(relid = value)))
  override val phase = new OptField[String, Row](prefix, "phase", None, None)(x => extract(x).phase, (row, value) => merge(row, extract(row).copy(phase = value)))
  override val sampleBlksTotal = new OptField[Long, Row](prefix, "sample_blks_total", None, Some("int8"))(x => extract(x).sampleBlksTotal, (row, value) => merge(row, extract(row).copy(sampleBlksTotal = value)))
  override val sampleBlksScanned = new OptField[Long, Row](prefix, "sample_blks_scanned", None, Some("int8"))(x => extract(x).sampleBlksScanned, (row, value) => merge(row, extract(row).copy(sampleBlksScanned = value)))
  override val extStatsTotal = new OptField[Long, Row](prefix, "ext_stats_total", None, Some("int8"))(x => extract(x).extStatsTotal, (row, value) => merge(row, extract(row).copy(extStatsTotal = value)))
  override val extStatsComputed = new OptField[Long, Row](prefix, "ext_stats_computed", None, Some("int8"))(x => extract(x).extStatsComputed, (row, value) => merge(row, extract(row).copy(extStatsComputed = value)))
  override val childTablesTotal = new OptField[Long, Row](prefix, "child_tables_total", None, Some("int8"))(x => extract(x).childTablesTotal, (row, value) => merge(row, extract(row).copy(childTablesTotal = value)))
  override val childTablesDone = new OptField[Long, Row](prefix, "child_tables_done", None, Some("int8"))(x => extract(x).childTablesDone, (row, value) => merge(row, extract(row).copy(childTablesDone = value)))
  override val currentChildTableRelid = new OptField[/* oid */ Long, Row](prefix, "current_child_table_relid", None, Some("oid"))(x => extract(x).currentChildTableRelid, (row, value) => merge(row, extract(row).copy(currentChildTableRelid = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](pid, datid, datname, relid, phase, sampleBlksTotal, sampleBlksScanned, extStatsTotal, extStatsComputed, childTablesTotal, childTablesDone, currentChildTableRelid)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgStatProgressAnalyzeViewRow, merge: (NewRow, PgStatProgressAnalyzeViewRow) => NewRow): PgStatProgressAnalyzeViewStructure[NewRow] =
    new PgStatProgressAnalyzeViewStructure(prefix, extract, merge)
}
