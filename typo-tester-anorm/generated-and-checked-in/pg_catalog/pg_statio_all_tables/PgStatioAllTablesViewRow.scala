/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statio_all_tables

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgStatioAllTablesViewRow(
  relid: Option[/* oid */ Long],
  schemaname: Option[String],
  relname: Option[String],
  heapBlksRead: Option[Long],
  heapBlksHit: Option[Long],
  idxBlksRead: Option[Long],
  idxBlksHit: Option[Long],
  toastBlksRead: Option[Long],
  toastBlksHit: Option[Long],
  tidxBlksRead: Option[Long],
  tidxBlksHit: Option[Long]
)

object PgStatioAllTablesViewRow {
  def rowParser(idx: Int): RowParser[PgStatioAllTablesViewRow] =
    RowParser[PgStatioAllTablesViewRow] { row =>
      Success(
        PgStatioAllTablesViewRow(
          relid = row[Option[/* oid */ Long]](idx + 0),
          schemaname = row[Option[String]](idx + 1),
          relname = row[Option[String]](idx + 2),
          heapBlksRead = row[Option[Long]](idx + 3),
          heapBlksHit = row[Option[Long]](idx + 4),
          idxBlksRead = row[Option[Long]](idx + 5),
          idxBlksHit = row[Option[Long]](idx + 6),
          toastBlksRead = row[Option[Long]](idx + 7),
          toastBlksHit = row[Option[Long]](idx + 8),
          tidxBlksRead = row[Option[Long]](idx + 9),
          tidxBlksHit = row[Option[Long]](idx + 10)
        )
      )
    }
  implicit val oFormat: OFormat[PgStatioAllTablesViewRow] = new OFormat[PgStatioAllTablesViewRow]{
    override def writes(o: PgStatioAllTablesViewRow): JsObject =
      Json.obj(
        "relid" -> o.relid,
        "schemaname" -> o.schemaname,
        "relname" -> o.relname,
        "heap_blks_read" -> o.heapBlksRead,
        "heap_blks_hit" -> o.heapBlksHit,
        "idx_blks_read" -> o.idxBlksRead,
        "idx_blks_hit" -> o.idxBlksHit,
        "toast_blks_read" -> o.toastBlksRead,
        "toast_blks_hit" -> o.toastBlksHit,
        "tidx_blks_read" -> o.tidxBlksRead,
        "tidx_blks_hit" -> o.tidxBlksHit
      )
  
    override def reads(json: JsValue): JsResult[PgStatioAllTablesViewRow] = {
      JsResult.fromTry(
        Try(
          PgStatioAllTablesViewRow(
            relid = json.\("relid").toOption.map(_.as[/* oid */ Long]),
            schemaname = json.\("schemaname").toOption.map(_.as[String]),
            relname = json.\("relname").toOption.map(_.as[String]),
            heapBlksRead = json.\("heap_blks_read").toOption.map(_.as[Long]),
            heapBlksHit = json.\("heap_blks_hit").toOption.map(_.as[Long]),
            idxBlksRead = json.\("idx_blks_read").toOption.map(_.as[Long]),
            idxBlksHit = json.\("idx_blks_hit").toOption.map(_.as[Long]),
            toastBlksRead = json.\("toast_blks_read").toOption.map(_.as[Long]),
            toastBlksHit = json.\("toast_blks_hit").toOption.map(_.as[Long]),
            tidxBlksRead = json.\("tidx_blks_read").toOption.map(_.as[Long]),
            tidxBlksHit = json.\("tidx_blks_hit").toOption.map(_.as[Long])
          )
        )
      )
    }
  }
}
