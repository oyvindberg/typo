/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_db_role_setting

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** Type for the composite primary key of table `pg_catalog.pg_db_role_setting` */
case class PgDbRoleSettingId(setdatabase: /* oid */ Long, setrole: /* oid */ Long)
object PgDbRoleSettingId {
  implicit val ordering: Ordering[PgDbRoleSettingId] = Ordering.by(x => (x.setdatabase, x.setrole))
  implicit val reads: Reads[PgDbRoleSettingId] = Reads[PgDbRoleSettingId](json => JsResult.fromTry(
      Try(
        PgDbRoleSettingId(
          setdatabase = json.\("setdatabase").as(Reads.LongReads),
          setrole = json.\("setrole").as(Reads.LongReads)
        )
      )
    ),
  )
  implicit val writes: OWrites[PgDbRoleSettingId] = OWrites[PgDbRoleSettingId](o =>
    new JsObject(ListMap[String, JsValue](
      "setdatabase" -> Writes.LongWrites.writes(o.setdatabase),
      "setrole" -> Writes.LongWrites.writes(o.setrole)
    ))
  )
}
