/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_default_acl

import adventureworks.TypoAclItem
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgDefaultAclRow(
  oid: PgDefaultAclId,
  defaclrole: /* oid */ Long,
  defaclnamespace: /* oid */ Long,
  defaclobjtype: String,
  defaclacl: Array[TypoAclItem]
)

object PgDefaultAclRow {
  implicit val reads: Reads[PgDefaultAclRow] = Reads[PgDefaultAclRow](json => JsResult.fromTry(
      Try(
        PgDefaultAclRow(
          oid = json.\("oid").as[PgDefaultAclId],
          defaclrole = json.\("defaclrole").as[/* oid */ Long],
          defaclnamespace = json.\("defaclnamespace").as[/* oid */ Long],
          defaclobjtype = json.\("defaclobjtype").as[String],
          defaclacl = json.\("defaclacl").as[Array[TypoAclItem]]
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgDefaultAclRow] = RowParser[PgDefaultAclRow] { row =>
    Success(
      PgDefaultAclRow(
        oid = row[PgDefaultAclId](idx + 0),
        defaclrole = row[/* oid */ Long](idx + 1),
        defaclnamespace = row[/* oid */ Long](idx + 2),
        defaclobjtype = row[String](idx + 3),
        defaclacl = row[Array[TypoAclItem]](idx + 4)
      )
    )
  }
  implicit val writes: OWrites[PgDefaultAclRow] = OWrites[PgDefaultAclRow](o =>
    new JsObject(ListMap[String, JsValue](
      "oid" -> Json.toJson(o.oid),
      "defaclrole" -> Json.toJson(o.defaclrole),
      "defaclnamespace" -> Json.toJson(o.defaclnamespace),
      "defaclobjtype" -> Json.toJson(o.defaclobjtype),
      "defaclacl" -> Json.toJson(o.defaclacl)
    ))
  )
}
