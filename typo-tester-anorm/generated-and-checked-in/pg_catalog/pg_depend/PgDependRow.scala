/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_depend

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PgDependRow(
  classid: /* oid */ Long,
  objid: /* oid */ Long,
  objsubid: Int,
  refclassid: /* oid */ Long,
  refobjid: /* oid */ Long,
  refobjsubid: Int,
  deptype: String
)

object PgDependRow {
  def rowParser(idx: Int): RowParser[PgDependRow] =
    RowParser[PgDependRow] { row =>
      Success(
        PgDependRow(
          classid = row[/* oid */ Long](idx + 0),
          objid = row[/* oid */ Long](idx + 1),
          objsubid = row[Int](idx + 2),
          refclassid = row[/* oid */ Long](idx + 3),
          refobjid = row[/* oid */ Long](idx + 4),
          refobjsubid = row[Int](idx + 5),
          deptype = row[String](idx + 6)
        )
      )
    }
  implicit val oFormat: OFormat[PgDependRow] = new OFormat[PgDependRow]{
    override def writes(o: PgDependRow): JsObject =
      Json.obj(
        "classid" -> o.classid,
        "objid" -> o.objid,
        "objsubid" -> o.objsubid,
        "refclassid" -> o.refclassid,
        "refobjid" -> o.refobjid,
        "refobjsubid" -> o.refobjsubid,
        "deptype" -> o.deptype
      )
  
    override def reads(json: JsValue): JsResult[PgDependRow] = {
      JsResult.fromTry(
        Try(
          PgDependRow(
            classid = json.\("classid").as[/* oid */ Long],
            objid = json.\("objid").as[/* oid */ Long],
            objsubid = json.\("objsubid").as[Int],
            refclassid = json.\("refclassid").as[/* oid */ Long],
            refobjid = json.\("refobjid").as[/* oid */ Long],
            refobjsubid = json.\("refobjsubid").as[Int],
            deptype = json.\("deptype").as[String]
          )
        )
      )
    }
  }
}
