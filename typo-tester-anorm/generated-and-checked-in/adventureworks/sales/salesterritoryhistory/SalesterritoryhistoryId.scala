/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesterritoryhistory

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.salesterritory.SalesterritoryId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

/** Type for the composite primary key of table `sales.salesterritoryhistory` */
case class SalesterritoryhistoryId(
  businessentityid: BusinessentityId,
  startdate: TypoLocalDateTime,
  territoryid: SalesterritoryId
)
object SalesterritoryhistoryId {
  implicit def ordering(implicit O0: Ordering[TypoLocalDateTime]): Ordering[SalesterritoryhistoryId] = Ordering.by(x => (x.businessentityid, x.startdate, x.territoryid))
  implicit lazy val reads: Reads[SalesterritoryhistoryId] = Reads[SalesterritoryhistoryId](json => JsResult.fromTry(
      Try(
        SalesterritoryhistoryId(
          businessentityid = json.\("businessentityid").as(BusinessentityId.reads),
          startdate = json.\("startdate").as(TypoLocalDateTime.reads),
          territoryid = json.\("territoryid").as(SalesterritoryId.reads)
        )
      )
    ),
  )
  implicit lazy val writes: OWrites[SalesterritoryhistoryId] = OWrites[SalesterritoryhistoryId](o =>
    new JsObject(ListMap[String, JsValue](
      "businessentityid" -> BusinessentityId.writes.writes(o.businessentityid),
      "startdate" -> TypoLocalDateTime.writes.writes(o.startdate),
      "territoryid" -> SalesterritoryId.writes.writes(o.territoryid)
    ))
  )
}
