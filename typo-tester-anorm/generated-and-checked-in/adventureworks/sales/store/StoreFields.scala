/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package store

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.customtypes.TypoXml
import adventureworks.person.businessentity.BusinessentityFields
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.person.businessentity.BusinessentityRow
import adventureworks.public.Name
import adventureworks.sales.salesperson.SalespersonFields
import adventureworks.sales.salesperson.SalespersonRow
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait StoreFields {
  def businessentityid: IdField[BusinessentityId, StoreRow]
  def name: Field[Name, StoreRow]
  def salespersonid: OptField[BusinessentityId, StoreRow]
  def demographics: OptField[TypoXml, StoreRow]
  def rowguid: Field[TypoUUID, StoreRow]
  def modifieddate: Field[TypoLocalDateTime, StoreRow]
  def fkPersonBusinessentity: ForeignKey[BusinessentityFields, BusinessentityRow] =
    ForeignKey[BusinessentityFields, BusinessentityRow]("sales.FK_Store_BusinessEntity_BusinessEntityID", Nil)
      .withColumnPair(businessentityid, _.businessentityid)
  def fkSalesperson: ForeignKey[SalespersonFields, SalespersonRow] =
    ForeignKey[SalespersonFields, SalespersonRow]("sales.FK_Store_SalesPerson_SalesPersonID", Nil)
      .withColumnPair(salespersonid, _.businessentityid)
}

object StoreFields {
  lazy val structure: Relation[StoreFields, StoreRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[StoreFields, StoreRow] {
  
    override lazy val fields: StoreFields = new StoreFields {
      override def businessentityid = IdField[BusinessentityId, StoreRow](_path, "businessentityid", None, Some("int4"), x => x.businessentityid, (row, value) => row.copy(businessentityid = value))
      override def name = Field[Name, StoreRow](_path, "name", None, Some("varchar"), x => x.name, (row, value) => row.copy(name = value))
      override def salespersonid = OptField[BusinessentityId, StoreRow](_path, "salespersonid", None, Some("int4"), x => x.salespersonid, (row, value) => row.copy(salespersonid = value))
      override def demographics = OptField[TypoXml, StoreRow](_path, "demographics", None, Some("xml"), x => x.demographics, (row, value) => row.copy(demographics = value))
      override def rowguid = Field[TypoUUID, StoreRow](_path, "rowguid", None, Some("uuid"), x => x.rowguid, (row, value) => row.copy(rowguid = value))
      override def modifieddate = Field[TypoLocalDateTime, StoreRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, StoreRow]] =
      List[FieldLikeNoHkt[?, StoreRow]](fields.businessentityid, fields.name, fields.salespersonid, fields.demographics, fields.rowguid, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
