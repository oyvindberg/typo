/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package currencyrate

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.sales.currency.CurrencyFields
import adventureworks.sales.currency.CurrencyId
import adventureworks.sales.currency.CurrencyRow
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

trait CurrencyrateFields {
  def currencyrateid: IdField[CurrencyrateId, CurrencyrateRow]
  def currencyratedate: Field[TypoLocalDateTime, CurrencyrateRow]
  def fromcurrencycode: Field[CurrencyId, CurrencyrateRow]
  def tocurrencycode: Field[CurrencyId, CurrencyrateRow]
  def averagerate: Field[BigDecimal, CurrencyrateRow]
  def endofdayrate: Field[BigDecimal, CurrencyrateRow]
  def modifieddate: Field[TypoLocalDateTime, CurrencyrateRow]
  def fkCurrencyFromcurrencycode: ForeignKey[CurrencyFields, CurrencyRow] =
    ForeignKey[CurrencyFields, CurrencyRow]("sales.FK_CurrencyRate_Currency_FromCurrencyCode", Nil)
      .withColumnPair(fromcurrencycode, _.currencycode)
  def fkCurrencyTocurrencycode: ForeignKey[CurrencyFields, CurrencyRow] =
    ForeignKey[CurrencyFields, CurrencyRow]("sales.FK_CurrencyRate_Currency_ToCurrencyCode", Nil)
      .withColumnPair(tocurrencycode, _.currencycode)
}

object CurrencyrateFields {
  lazy val structure: Relation[CurrencyrateFields, CurrencyrateRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[CurrencyrateFields, CurrencyrateRow] {
  
    override lazy val fields: CurrencyrateFields = new CurrencyrateFields {
      override def currencyrateid = IdField[CurrencyrateId, CurrencyrateRow](_path, "currencyrateid", None, Some("int4"), x => x.currencyrateid, (row, value) => row.copy(currencyrateid = value))
      override def currencyratedate = Field[TypoLocalDateTime, CurrencyrateRow](_path, "currencyratedate", Some("text"), Some("timestamp"), x => x.currencyratedate, (row, value) => row.copy(currencyratedate = value))
      override def fromcurrencycode = Field[CurrencyId, CurrencyrateRow](_path, "fromcurrencycode", None, Some("bpchar"), x => x.fromcurrencycode, (row, value) => row.copy(fromcurrencycode = value))
      override def tocurrencycode = Field[CurrencyId, CurrencyrateRow](_path, "tocurrencycode", None, Some("bpchar"), x => x.tocurrencycode, (row, value) => row.copy(tocurrencycode = value))
      override def averagerate = Field[BigDecimal, CurrencyrateRow](_path, "averagerate", None, Some("numeric"), x => x.averagerate, (row, value) => row.copy(averagerate = value))
      override def endofdayrate = Field[BigDecimal, CurrencyrateRow](_path, "endofdayrate", None, Some("numeric"), x => x.endofdayrate, (row, value) => row.copy(endofdayrate = value))
      override def modifieddate = Field[TypoLocalDateTime, CurrencyrateRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, CurrencyrateRow]] =
      List[FieldLikeNoHkt[?, CurrencyrateRow]](fields.currencyrateid, fields.currencyratedate, fields.fromcurrencycode, fields.tocurrencycode, fields.averagerate, fields.endofdayrate, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
