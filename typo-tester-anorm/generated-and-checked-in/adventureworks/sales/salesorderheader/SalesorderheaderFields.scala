/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesorderheader

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.customtypes.TypoUUID
import adventureworks.person.address.AddressFields
import adventureworks.person.address.AddressId
import adventureworks.person.address.AddressRow
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.AccountNumber
import adventureworks.public.Flag
import adventureworks.public.OrderNumber
import adventureworks.purchasing.shipmethod.ShipmethodFields
import adventureworks.purchasing.shipmethod.ShipmethodId
import adventureworks.purchasing.shipmethod.ShipmethodRow
import adventureworks.sales.creditcard.CreditcardFields
import adventureworks.sales.creditcard.CreditcardRow
import adventureworks.sales.currencyrate.CurrencyrateFields
import adventureworks.sales.currencyrate.CurrencyrateId
import adventureworks.sales.currencyrate.CurrencyrateRow
import adventureworks.sales.customer.CustomerFields
import adventureworks.sales.customer.CustomerId
import adventureworks.sales.customer.CustomerRow
import adventureworks.sales.salesperson.SalespersonFields
import adventureworks.sales.salesperson.SalespersonRow
import adventureworks.sales.salesterritory.SalesterritoryFields
import adventureworks.sales.salesterritory.SalesterritoryId
import adventureworks.sales.salesterritory.SalesterritoryRow
import adventureworks.userdefined.CustomCreditcardId
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait SalesorderheaderFields {
  def salesorderid: IdField[SalesorderheaderId, SalesorderheaderRow]
  def revisionnumber: Field[TypoShort, SalesorderheaderRow]
  def orderdate: Field[TypoLocalDateTime, SalesorderheaderRow]
  def duedate: Field[TypoLocalDateTime, SalesorderheaderRow]
  def shipdate: OptField[TypoLocalDateTime, SalesorderheaderRow]
  def status: Field[TypoShort, SalesorderheaderRow]
  def onlineorderflag: Field[Flag, SalesorderheaderRow]
  def purchaseordernumber: OptField[OrderNumber, SalesorderheaderRow]
  def accountnumber: OptField[AccountNumber, SalesorderheaderRow]
  def customerid: Field[CustomerId, SalesorderheaderRow]
  def salespersonid: OptField[BusinessentityId, SalesorderheaderRow]
  def territoryid: OptField[SalesterritoryId, SalesorderheaderRow]
  def billtoaddressid: Field[AddressId, SalesorderheaderRow]
  def shiptoaddressid: Field[AddressId, SalesorderheaderRow]
  def shipmethodid: Field[ShipmethodId, SalesorderheaderRow]
  def creditcardid: OptField[/* user-picked */ CustomCreditcardId, SalesorderheaderRow]
  def creditcardapprovalcode: OptField[/* max 15 chars */ String, SalesorderheaderRow]
  def currencyrateid: OptField[CurrencyrateId, SalesorderheaderRow]
  def subtotal: Field[BigDecimal, SalesorderheaderRow]
  def taxamt: Field[BigDecimal, SalesorderheaderRow]
  def freight: Field[BigDecimal, SalesorderheaderRow]
  def totaldue: OptField[BigDecimal, SalesorderheaderRow]
  def comment: OptField[/* max 128 chars */ String, SalesorderheaderRow]
  def rowguid: Field[TypoUUID, SalesorderheaderRow]
  def modifieddate: Field[TypoLocalDateTime, SalesorderheaderRow]
  def fkPersonAddressBilltoaddressid: ForeignKey[AddressFields, AddressRow] =
    ForeignKey[AddressFields, AddressRow]("sales.FK_SalesOrderHeader_Address_BillToAddressID", Nil)
      .withColumnPair(billtoaddressid, _.addressid)
  def fkPersonAddressShiptoaddressid: ForeignKey[AddressFields, AddressRow] =
    ForeignKey[AddressFields, AddressRow]("sales.FK_SalesOrderHeader_Address_ShipToAddressID", Nil)
      .withColumnPair(shiptoaddressid, _.addressid)
  def fkCreditcard: ForeignKey[CreditcardFields, CreditcardRow] =
    ForeignKey[CreditcardFields, CreditcardRow]("sales.FK_SalesOrderHeader_CreditCard_CreditCardID", Nil)
      .withColumnPair(creditcardid, _.creditcardid)
  def fkCurrencyrate: ForeignKey[CurrencyrateFields, CurrencyrateRow] =
    ForeignKey[CurrencyrateFields, CurrencyrateRow]("sales.FK_SalesOrderHeader_CurrencyRate_CurrencyRateID", Nil)
      .withColumnPair(currencyrateid, _.currencyrateid)
  def fkCustomer: ForeignKey[CustomerFields, CustomerRow] =
    ForeignKey[CustomerFields, CustomerRow]("sales.FK_SalesOrderHeader_Customer_CustomerID", Nil)
      .withColumnPair(customerid, _.customerid)
  def fkSalesperson: ForeignKey[SalespersonFields, SalespersonRow] =
    ForeignKey[SalespersonFields, SalespersonRow]("sales.FK_SalesOrderHeader_SalesPerson_SalesPersonID", Nil)
      .withColumnPair(salespersonid, _.businessentityid)
  def fkPurchasingShipmethod: ForeignKey[ShipmethodFields, ShipmethodRow] =
    ForeignKey[ShipmethodFields, ShipmethodRow]("sales.FK_SalesOrderHeader_ShipMethod_ShipMethodID", Nil)
      .withColumnPair(shipmethodid, _.shipmethodid)
  def fkSalesterritory: ForeignKey[SalesterritoryFields, SalesterritoryRow] =
    ForeignKey[SalesterritoryFields, SalesterritoryRow]("sales.FK_SalesOrderHeader_SalesTerritory_TerritoryID", Nil)
      .withColumnPair(territoryid, _.territoryid)
}

object SalesorderheaderFields {
  lazy val structure: Relation[SalesorderheaderFields, SalesorderheaderRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[SalesorderheaderFields, SalesorderheaderRow] {
  
    override lazy val fields: SalesorderheaderFields = new SalesorderheaderFields {
      override def salesorderid = IdField[SalesorderheaderId, SalesorderheaderRow](_path, "salesorderid", None, Some("int4"), x => x.salesorderid, (row, value) => row.copy(salesorderid = value))
      override def revisionnumber = Field[TypoShort, SalesorderheaderRow](_path, "revisionnumber", None, Some("int2"), x => x.revisionnumber, (row, value) => row.copy(revisionnumber = value))
      override def orderdate = Field[TypoLocalDateTime, SalesorderheaderRow](_path, "orderdate", Some("text"), Some("timestamp"), x => x.orderdate, (row, value) => row.copy(orderdate = value))
      override def duedate = Field[TypoLocalDateTime, SalesorderheaderRow](_path, "duedate", Some("text"), Some("timestamp"), x => x.duedate, (row, value) => row.copy(duedate = value))
      override def shipdate = OptField[TypoLocalDateTime, SalesorderheaderRow](_path, "shipdate", Some("text"), Some("timestamp"), x => x.shipdate, (row, value) => row.copy(shipdate = value))
      override def status = Field[TypoShort, SalesorderheaderRow](_path, "status", None, Some("int2"), x => x.status, (row, value) => row.copy(status = value))
      override def onlineorderflag = Field[Flag, SalesorderheaderRow](_path, "onlineorderflag", None, Some("bool"), x => x.onlineorderflag, (row, value) => row.copy(onlineorderflag = value))
      override def purchaseordernumber = OptField[OrderNumber, SalesorderheaderRow](_path, "purchaseordernumber", None, Some("varchar"), x => x.purchaseordernumber, (row, value) => row.copy(purchaseordernumber = value))
      override def accountnumber = OptField[AccountNumber, SalesorderheaderRow](_path, "accountnumber", None, Some("varchar"), x => x.accountnumber, (row, value) => row.copy(accountnumber = value))
      override def customerid = Field[CustomerId, SalesorderheaderRow](_path, "customerid", None, Some("int4"), x => x.customerid, (row, value) => row.copy(customerid = value))
      override def salespersonid = OptField[BusinessentityId, SalesorderheaderRow](_path, "salespersonid", None, Some("int4"), x => x.salespersonid, (row, value) => row.copy(salespersonid = value))
      override def territoryid = OptField[SalesterritoryId, SalesorderheaderRow](_path, "territoryid", None, Some("int4"), x => x.territoryid, (row, value) => row.copy(territoryid = value))
      override def billtoaddressid = Field[AddressId, SalesorderheaderRow](_path, "billtoaddressid", None, Some("int4"), x => x.billtoaddressid, (row, value) => row.copy(billtoaddressid = value))
      override def shiptoaddressid = Field[AddressId, SalesorderheaderRow](_path, "shiptoaddressid", None, Some("int4"), x => x.shiptoaddressid, (row, value) => row.copy(shiptoaddressid = value))
      override def shipmethodid = Field[ShipmethodId, SalesorderheaderRow](_path, "shipmethodid", None, Some("int4"), x => x.shipmethodid, (row, value) => row.copy(shipmethodid = value))
      override def creditcardid = OptField[/* user-picked */ CustomCreditcardId, SalesorderheaderRow](_path, "creditcardid", None, Some("int4"), x => x.creditcardid, (row, value) => row.copy(creditcardid = value))
      override def creditcardapprovalcode = OptField[/* max 15 chars */ String, SalesorderheaderRow](_path, "creditcardapprovalcode", None, None, x => x.creditcardapprovalcode, (row, value) => row.copy(creditcardapprovalcode = value))
      override def currencyrateid = OptField[CurrencyrateId, SalesorderheaderRow](_path, "currencyrateid", None, Some("int4"), x => x.currencyrateid, (row, value) => row.copy(currencyrateid = value))
      override def subtotal = Field[BigDecimal, SalesorderheaderRow](_path, "subtotal", None, Some("numeric"), x => x.subtotal, (row, value) => row.copy(subtotal = value))
      override def taxamt = Field[BigDecimal, SalesorderheaderRow](_path, "taxamt", None, Some("numeric"), x => x.taxamt, (row, value) => row.copy(taxamt = value))
      override def freight = Field[BigDecimal, SalesorderheaderRow](_path, "freight", None, Some("numeric"), x => x.freight, (row, value) => row.copy(freight = value))
      override def totaldue = OptField[BigDecimal, SalesorderheaderRow](_path, "totaldue", None, Some("numeric"), x => x.totaldue, (row, value) => row.copy(totaldue = value))
      override def comment = OptField[/* max 128 chars */ String, SalesorderheaderRow](_path, "comment", None, None, x => x.comment, (row, value) => row.copy(comment = value))
      override def rowguid = Field[TypoUUID, SalesorderheaderRow](_path, "rowguid", None, Some("uuid"), x => x.rowguid, (row, value) => row.copy(rowguid = value))
      override def modifieddate = Field[TypoLocalDateTime, SalesorderheaderRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, SalesorderheaderRow]] =
      List[FieldLikeNoHkt[?, SalesorderheaderRow]](fields.salesorderid, fields.revisionnumber, fields.orderdate, fields.duedate, fields.shipdate, fields.status, fields.onlineorderflag, fields.purchaseordernumber, fields.accountnumber, fields.customerid, fields.salespersonid, fields.territoryid, fields.billtoaddressid, fields.shiptoaddressid, fields.shipmethodid, fields.creditcardid, fields.creditcardapprovalcode, fields.currencyrateid, fields.subtotal, fields.taxamt, fields.freight, fields.totaldue, fields.comment, fields.rowguid, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
