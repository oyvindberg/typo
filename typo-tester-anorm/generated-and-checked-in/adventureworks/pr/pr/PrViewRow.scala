/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pr

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.production.productreview.ProductreviewId
import adventureworks.public.Name
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** View: pr.pr */
case class PrViewRow(
  /** Points to [[production.productreview.ProductreviewRow.productreviewid]] */
  id: ProductreviewId,
  /** Points to [[production.productreview.ProductreviewRow.productreviewid]] */
  productreviewid: ProductreviewId,
  /** Points to [[production.productreview.ProductreviewRow.productid]] */
  productid: ProductId,
  /** Points to [[production.productreview.ProductreviewRow.reviewername]] */
  reviewername: Name,
  /** Points to [[production.productreview.ProductreviewRow.reviewdate]] */
  reviewdate: TypoLocalDateTime,
  /** Points to [[production.productreview.ProductreviewRow.emailaddress]] */
  emailaddress: /* max 50 chars */ String,
  /** Points to [[production.productreview.ProductreviewRow.rating]] */
  rating: Int,
  /** Points to [[production.productreview.ProductreviewRow.comments]] */
  comments: Option[/* max 3850 chars */ String],
  /** Points to [[production.productreview.ProductreviewRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object PrViewRow {
  implicit lazy val reads: Reads[PrViewRow] = Reads[PrViewRow](json => JsResult.fromTry(
      Try(
        PrViewRow(
          id = json.\("id").as(ProductreviewId.reads),
          productreviewid = json.\("productreviewid").as(ProductreviewId.reads),
          productid = json.\("productid").as(ProductId.reads),
          reviewername = json.\("reviewername").as(Name.reads),
          reviewdate = json.\("reviewdate").as(TypoLocalDateTime.reads),
          emailaddress = json.\("emailaddress").as(Reads.StringReads),
          rating = json.\("rating").as(Reads.IntReads),
          comments = json.\("comments").toOption.map(_.as(Reads.StringReads)),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PrViewRow] = RowParser[PrViewRow] { row =>
    Success(
      PrViewRow(
        id = row(idx + 0)(ProductreviewId.column),
        productreviewid = row(idx + 1)(ProductreviewId.column),
        productid = row(idx + 2)(ProductId.column),
        reviewername = row(idx + 3)(Name.column),
        reviewdate = row(idx + 4)(TypoLocalDateTime.column),
        emailaddress = row(idx + 5)(Column.columnToString),
        rating = row(idx + 6)(Column.columnToInt),
        comments = row(idx + 7)(Column.columnToOption(Column.columnToString)),
        modifieddate = row(idx + 8)(TypoLocalDateTime.column)
      )
    )
  }
  implicit lazy val writes: OWrites[PrViewRow] = OWrites[PrViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> ProductreviewId.writes.writes(o.id),
      "productreviewid" -> ProductreviewId.writes.writes(o.productreviewid),
      "productid" -> ProductId.writes.writes(o.productid),
      "reviewername" -> Name.writes.writes(o.reviewername),
      "reviewdate" -> TypoLocalDateTime.writes.writes(o.reviewdate),
      "emailaddress" -> Writes.StringWrites.writes(o.emailaddress),
      "rating" -> Writes.IntWrites.writes(o.rating),
      "comments" -> Writes.OptionWrites(Writes.StringWrites).writes(o.comments),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
