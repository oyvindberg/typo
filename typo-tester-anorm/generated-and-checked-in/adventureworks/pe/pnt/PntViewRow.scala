/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package pnt

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.person.phonenumbertype.PhonenumbertypeId
import adventureworks.public.Name
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

/** View: pe.pnt */
case class PntViewRow(
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.phonenumbertypeid]] */
  id: PhonenumbertypeId,
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.phonenumbertypeid]] */
  phonenumbertypeid: PhonenumbertypeId,
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.name]] */
  name: Name,
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object PntViewRow {
  implicit lazy val reads: Reads[PntViewRow] = Reads[PntViewRow](json => JsResult.fromTry(
      Try(
        PntViewRow(
          id = json.\("id").as(PhonenumbertypeId.reads),
          phonenumbertypeid = json.\("phonenumbertypeid").as(PhonenumbertypeId.reads),
          name = json.\("name").as(Name.reads),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PntViewRow] = RowParser[PntViewRow] { row =>
    Success(
      PntViewRow(
        id = row(idx + 0)(PhonenumbertypeId.column),
        phonenumbertypeid = row(idx + 1)(PhonenumbertypeId.column),
        name = row(idx + 2)(Name.column),
        modifieddate = row(idx + 3)(TypoLocalDateTime.column)
      )
    )
  }
  implicit lazy val writes: OWrites[PntViewRow] = OWrites[PntViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> PhonenumbertypeId.writes.writes(o.id),
      "phonenumbertypeid" -> PhonenumbertypeId.writes.writes(o.phonenumbertypeid),
      "name" -> Name.writes.writes(o.name),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
