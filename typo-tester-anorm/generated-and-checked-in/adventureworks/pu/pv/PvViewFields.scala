/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package pv

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.production.product.ProductId
import adventureworks.production.unitmeasure.UnitmeasureId
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait PvViewFields {
  def id: Field[ProductId, PvViewRow]
  def productid: Field[ProductId, PvViewRow]
  def businessentityid: Field[BusinessentityId, PvViewRow]
  def averageleadtime: Field[Int, PvViewRow]
  def standardprice: Field[BigDecimal, PvViewRow]
  def lastreceiptcost: OptField[BigDecimal, PvViewRow]
  def lastreceiptdate: OptField[TypoLocalDateTime, PvViewRow]
  def minorderqty: Field[Int, PvViewRow]
  def maxorderqty: Field[Int, PvViewRow]
  def onorderqty: OptField[Int, PvViewRow]
  def unitmeasurecode: Field[UnitmeasureId, PvViewRow]
  def modifieddate: Field[TypoLocalDateTime, PvViewRow]
}

object PvViewFields {
  lazy val structure: Relation[PvViewFields, PvViewRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[PvViewFields, PvViewRow] {
  
    override lazy val fields: PvViewFields = new PvViewFields {
      override def id = Field[ProductId, PvViewRow](_path, "id", None, None, x => x.id, (row, value) => row.copy(id = value))
      override def productid = Field[ProductId, PvViewRow](_path, "productid", None, None, x => x.productid, (row, value) => row.copy(productid = value))
      override def businessentityid = Field[BusinessentityId, PvViewRow](_path, "businessentityid", None, None, x => x.businessentityid, (row, value) => row.copy(businessentityid = value))
      override def averageleadtime = Field[Int, PvViewRow](_path, "averageleadtime", None, None, x => x.averageleadtime, (row, value) => row.copy(averageleadtime = value))
      override def standardprice = Field[BigDecimal, PvViewRow](_path, "standardprice", None, None, x => x.standardprice, (row, value) => row.copy(standardprice = value))
      override def lastreceiptcost = OptField[BigDecimal, PvViewRow](_path, "lastreceiptcost", None, None, x => x.lastreceiptcost, (row, value) => row.copy(lastreceiptcost = value))
      override def lastreceiptdate = OptField[TypoLocalDateTime, PvViewRow](_path, "lastreceiptdate", Some("text"), None, x => x.lastreceiptdate, (row, value) => row.copy(lastreceiptdate = value))
      override def minorderqty = Field[Int, PvViewRow](_path, "minorderqty", None, None, x => x.minorderqty, (row, value) => row.copy(minorderqty = value))
      override def maxorderqty = Field[Int, PvViewRow](_path, "maxorderqty", None, None, x => x.maxorderqty, (row, value) => row.copy(maxorderqty = value))
      override def onorderqty = OptField[Int, PvViewRow](_path, "onorderqty", None, None, x => x.onorderqty, (row, value) => row.copy(onorderqty = value))
      override def unitmeasurecode = Field[UnitmeasureId, PvViewRow](_path, "unitmeasurecode", None, None, x => x.unitmeasurecode, (row, value) => row.copy(unitmeasurecode = value))
      override def modifieddate = Field[TypoLocalDateTime, PvViewRow](_path, "modifieddate", Some("text"), None, x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, PvViewRow]] =
      List[FieldLikeNoHkt[?, PvViewRow]](fields.id, fields.productid, fields.businessentityid, fields.averageleadtime, fields.standardprice, fields.lastreceiptcost, fields.lastreceiptdate, fields.minorderqty, fields.maxorderqty, fields.onorderqty, fields.unitmeasurecode, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
