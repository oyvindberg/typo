/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package poh

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId
import adventureworks.purchasing.shipmethod.ShipmethodId
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait PohViewFields {
  def id: Field[PurchaseorderheaderId, PohViewRow]
  def purchaseorderid: Field[PurchaseorderheaderId, PohViewRow]
  def revisionnumber: Field[TypoShort, PohViewRow]
  def status: Field[TypoShort, PohViewRow]
  def employeeid: Field[BusinessentityId, PohViewRow]
  def vendorid: Field[BusinessentityId, PohViewRow]
  def shipmethodid: Field[ShipmethodId, PohViewRow]
  def orderdate: Field[TypoLocalDateTime, PohViewRow]
  def shipdate: OptField[TypoLocalDateTime, PohViewRow]
  def subtotal: Field[BigDecimal, PohViewRow]
  def taxamt: Field[BigDecimal, PohViewRow]
  def freight: Field[BigDecimal, PohViewRow]
  def modifieddate: Field[TypoLocalDateTime, PohViewRow]
}

object PohViewFields {
  lazy val structure: Relation[PohViewFields, PohViewRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[PohViewFields, PohViewRow] {
  
    override lazy val fields: PohViewFields = new PohViewFields {
      override def id = Field[PurchaseorderheaderId, PohViewRow](_path, "id", None, None, x => x.id, (row, value) => row.copy(id = value))
      override def purchaseorderid = Field[PurchaseorderheaderId, PohViewRow](_path, "purchaseorderid", None, None, x => x.purchaseorderid, (row, value) => row.copy(purchaseorderid = value))
      override def revisionnumber = Field[TypoShort, PohViewRow](_path, "revisionnumber", None, None, x => x.revisionnumber, (row, value) => row.copy(revisionnumber = value))
      override def status = Field[TypoShort, PohViewRow](_path, "status", None, None, x => x.status, (row, value) => row.copy(status = value))
      override def employeeid = Field[BusinessentityId, PohViewRow](_path, "employeeid", None, None, x => x.employeeid, (row, value) => row.copy(employeeid = value))
      override def vendorid = Field[BusinessentityId, PohViewRow](_path, "vendorid", None, None, x => x.vendorid, (row, value) => row.copy(vendorid = value))
      override def shipmethodid = Field[ShipmethodId, PohViewRow](_path, "shipmethodid", None, None, x => x.shipmethodid, (row, value) => row.copy(shipmethodid = value))
      override def orderdate = Field[TypoLocalDateTime, PohViewRow](_path, "orderdate", Some("text"), None, x => x.orderdate, (row, value) => row.copy(orderdate = value))
      override def shipdate = OptField[TypoLocalDateTime, PohViewRow](_path, "shipdate", Some("text"), None, x => x.shipdate, (row, value) => row.copy(shipdate = value))
      override def subtotal = Field[BigDecimal, PohViewRow](_path, "subtotal", None, None, x => x.subtotal, (row, value) => row.copy(subtotal = value))
      override def taxamt = Field[BigDecimal, PohViewRow](_path, "taxamt", None, None, x => x.taxamt, (row, value) => row.copy(taxamt = value))
      override def freight = Field[BigDecimal, PohViewRow](_path, "freight", None, None, x => x.freight, (row, value) => row.copy(freight = value))
      override def modifieddate = Field[TypoLocalDateTime, PohViewRow](_path, "modifieddate", Some("text"), None, x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, PohViewRow]] =
      List[FieldLikeNoHkt[?, PohViewRow]](fields.id, fields.purchaseorderid, fields.revisionnumber, fields.status, fields.employeeid, fields.vendorid, fields.shipmethodid, fields.orderdate, fields.shipdate, fields.subtotal, fields.taxamt, fields.freight, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
