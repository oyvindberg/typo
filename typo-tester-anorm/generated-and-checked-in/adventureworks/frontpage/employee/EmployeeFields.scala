/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package employee

import adventureworks.frontpage.person.PersonFields
import adventureworks.frontpage.person.PersonId
import adventureworks.frontpage.person.PersonRow
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait EmployeeFields {
  def id: IdField[EmployeeId, EmployeeRow]
  def personId: Field[PersonId, EmployeeRow]
  def salary: OptField[BigDecimal, EmployeeRow]
  def fkPerson: ForeignKey[PersonFields, PersonRow] =
    ForeignKey[PersonFields, PersonRow]("frontpage.fk_person", Nil)
      .withColumnPair(personId, _.id)
}

object EmployeeFields {
  lazy val structure: Relation[EmployeeFields, EmployeeRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[EmployeeFields, EmployeeRow] {
  
    override lazy val fields: EmployeeFields = new EmployeeFields {
      override def id = IdField[EmployeeId, EmployeeRow](_path, "id", None, Some("uuid"), x => x.id, (row, value) => row.copy(id = value))
      override def personId = Field[PersonId, EmployeeRow](_path, "person_id", None, Some("uuid"), x => x.personId, (row, value) => row.copy(personId = value))
      override def salary = OptField[BigDecimal, EmployeeRow](_path, "salary", None, Some("numeric"), x => x.salary, (row, value) => row.copy(salary = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, EmployeeRow]] =
      List[FieldLikeNoHkt[?, EmployeeRow]](fields.id, fields.personId, fields.salary)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
