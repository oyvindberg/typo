/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package employee

import adventureworks.customtypes.Defaulted
import adventureworks.frontpage.person.PersonId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `frontpage.employee` which has not been persisted yet */
case class EmployeeRowUnsaved(
  /** Points to [[person.PersonRow.id]] */
  personId: PersonId,
  salary: Option[BigDecimal],
  /** Default: gen_random_uuid() */
  id: Defaulted[EmployeeId] = Defaulted.UseDefault
) {
  def toRow(idDefault: => EmployeeId): EmployeeRow =
    EmployeeRow(
      personId = personId,
      salary = salary,
      id = id match {
             case Defaulted.UseDefault => idDefault
             case Defaulted.Provided(value) => value
           }
    )
}
object EmployeeRowUnsaved {
  implicit lazy val reads: Reads[EmployeeRowUnsaved] = Reads[EmployeeRowUnsaved](json => JsResult.fromTry(
      Try(
        EmployeeRowUnsaved(
          personId = json.\("person_id").as(PersonId.reads),
          salary = json.\("salary").toOption.map(_.as(Reads.bigDecReads)),
          id = json.\("id").as(Defaulted.reads(EmployeeId.reads))
        )
      )
    ),
  )
  implicit lazy val text: Text[EmployeeRowUnsaved] = Text.instance[EmployeeRowUnsaved]{ (row, sb) =>
    PersonId.text.unsafeEncode(row.personId, sb)
    sb.append(Text.DELIMETER)
    Text.option(Text.bigDecimalInstance).unsafeEncode(row.salary, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(EmployeeId.text).unsafeEncode(row.id, sb)
  }
  implicit lazy val writes: OWrites[EmployeeRowUnsaved] = OWrites[EmployeeRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "person_id" -> PersonId.writes.writes(o.personId),
      "salary" -> Writes.OptionWrites(Writes.BigDecimalWrites).writes(o.salary),
      "id" -> Defaulted.writes(EmployeeId.writes).writes(o.id)
    ))
  )
}
