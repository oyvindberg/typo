/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package role

import adventureworks.customtypes.Defaulted
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `frontpage.role` which has not been persisted yet */
case class RoleRowUnsaved(
  name: String,
  /** Default: gen_random_uuid() */
  id: Defaulted[RoleId] = Defaulted.UseDefault
) {
  def toRow(idDefault: => RoleId): RoleRow =
    RoleRow(
      name = name,
      id = id match {
             case Defaulted.UseDefault => idDefault
             case Defaulted.Provided(value) => value
           }
    )
}
object RoleRowUnsaved {
  implicit lazy val reads: Reads[RoleRowUnsaved] = Reads[RoleRowUnsaved](json => JsResult.fromTry(
      Try(
        RoleRowUnsaved(
          name = json.\("name").as(Reads.StringReads),
          id = json.\("id").as(Defaulted.reads(RoleId.reads))
        )
      )
    ),
  )
  implicit lazy val text: Text[RoleRowUnsaved] = Text.instance[RoleRowUnsaved]{ (row, sb) =>
    Text.stringInstance.unsafeEncode(row.name, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(RoleId.text).unsafeEncode(row.id, sb)
  }
  implicit lazy val writes: OWrites[RoleRowUnsaved] = OWrites[RoleRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "name" -> Writes.StringWrites.writes(o.name),
      "id" -> Defaulted.writes(RoleId.writes).writes(o.id)
    ))
  )
}
