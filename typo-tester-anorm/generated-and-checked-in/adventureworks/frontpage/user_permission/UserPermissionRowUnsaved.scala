/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package user_permission

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.frontpage.permission.PermissionId
import adventureworks.frontpage.user.UserId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `frontpage.user_permission` which has not been persisted yet */
case class UserPermissionRowUnsaved(
  /** Points to [[user.UserRow.id]] */
  userId: UserId,
  /** Points to [[permission.PermissionRow.id]] */
  permissionId: PermissionId,
  /** Default: now() */
  grantedAt: Defaulted[Option[TypoLocalDateTime]] = Defaulted.UseDefault
) {
  def toRow(grantedAtDefault: => Option[TypoLocalDateTime]): UserPermissionRow =
    UserPermissionRow(
      userId = userId,
      permissionId = permissionId,
      grantedAt = grantedAt match {
                    case Defaulted.UseDefault => grantedAtDefault
                    case Defaulted.Provided(value) => value
                  }
    )
}
object UserPermissionRowUnsaved {
  implicit lazy val reads: Reads[UserPermissionRowUnsaved] = Reads[UserPermissionRowUnsaved](json => JsResult.fromTry(
      Try(
        UserPermissionRowUnsaved(
          userId = json.\("user_id").as(UserId.reads),
          permissionId = json.\("permission_id").as(PermissionId.reads),
          grantedAt = json.\("granted_at").as(Defaulted.readsOpt(TypoLocalDateTime.reads))
        )
      )
    ),
  )
  implicit lazy val text: Text[UserPermissionRowUnsaved] = Text.instance[UserPermissionRowUnsaved]{ (row, sb) =>
    UserId.text.unsafeEncode(row.userId, sb)
    sb.append(Text.DELIMETER)
    PermissionId.text.unsafeEncode(row.permissionId, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(Text.option(TypoLocalDateTime.text)).unsafeEncode(row.grantedAt, sb)
  }
  implicit lazy val writes: OWrites[UserPermissionRowUnsaved] = OWrites[UserPermissionRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "user_id" -> UserId.writes.writes(o.userId),
      "permission_id" -> PermissionId.writes.writes(o.permissionId),
      "granted_at" -> Defaulted.writes(Writes.OptionWrites(TypoLocalDateTime.writes)).writes(o.grantedAt)
    ))
  )
}
