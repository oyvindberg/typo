/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package department

import adventureworks.customtypes.Defaulted
import adventureworks.frontpage.company.CompanyId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `frontpage.department` which has not been persisted yet */
case class DepartmentRowUnsaved(
  name: String,
  budget: Option[BigDecimal],
  /** Points to [[company.CompanyRow.id]] */
  companyId: Option[CompanyId],
  /** Default: gen_random_uuid() */
  id: Defaulted[DepartmentId] = Defaulted.UseDefault
) {
  def toRow(idDefault: => DepartmentId): DepartmentRow =
    DepartmentRow(
      name = name,
      budget = budget,
      companyId = companyId,
      id = id match {
             case Defaulted.UseDefault => idDefault
             case Defaulted.Provided(value) => value
           }
    )
}
object DepartmentRowUnsaved {
  implicit lazy val reads: Reads[DepartmentRowUnsaved] = Reads[DepartmentRowUnsaved](json => JsResult.fromTry(
      Try(
        DepartmentRowUnsaved(
          name = json.\("name").as(Reads.StringReads),
          budget = json.\("budget").toOption.map(_.as(Reads.bigDecReads)),
          companyId = json.\("company_id").toOption.map(_.as(CompanyId.reads)),
          id = json.\("id").as(Defaulted.reads(DepartmentId.reads))
        )
      )
    ),
  )
  implicit lazy val text: Text[DepartmentRowUnsaved] = Text.instance[DepartmentRowUnsaved]{ (row, sb) =>
    Text.stringInstance.unsafeEncode(row.name, sb)
    sb.append(Text.DELIMETER)
    Text.option(Text.bigDecimalInstance).unsafeEncode(row.budget, sb)
    sb.append(Text.DELIMETER)
    Text.option(CompanyId.text).unsafeEncode(row.companyId, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(DepartmentId.text).unsafeEncode(row.id, sb)
  }
  implicit lazy val writes: OWrites[DepartmentRowUnsaved] = OWrites[DepartmentRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "name" -> Writes.StringWrites.writes(o.name),
      "budget" -> Writes.OptionWrites(Writes.BigDecimalWrites).writes(o.budget),
      "company_id" -> Writes.OptionWrites(CompanyId.writes).writes(o.companyId),
      "id" -> Defaulted.writes(DepartmentId.writes).writes(o.id)
    ))
  )
}
