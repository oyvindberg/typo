/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package location

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoInet
import adventureworks.customtypes.TypoJsonb
import adventureworks.customtypes.TypoPoint
import adventureworks.customtypes.TypoPolygon
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** This class corresponds to a row in table `frontpage.location` which has not been persisted yet */
case class LocationRowUnsaved(
  name: String,
  position: Option[TypoPoint],
  area: Option[TypoPolygon],
  ipRange: Option[TypoInet],
  /** Default: gen_random_uuid() */
  id: Defaulted[LocationId] = Defaulted.UseDefault,
  /** Default: '{}'::jsonb */
  metadata: Defaulted[Option[TypoJsonb]] = Defaulted.UseDefault
) {
  def toRow(idDefault: => LocationId, metadataDefault: => Option[TypoJsonb]): LocationRow =
    LocationRow(
      name = name,
      position = position,
      area = area,
      ipRange = ipRange,
      id = id match {
             case Defaulted.UseDefault => idDefault
             case Defaulted.Provided(value) => value
           },
      metadata = metadata match {
                   case Defaulted.UseDefault => metadataDefault
                   case Defaulted.Provided(value) => value
                 }
    )
}
object LocationRowUnsaved {
  implicit lazy val reads: Reads[LocationRowUnsaved] = Reads[LocationRowUnsaved](json => JsResult.fromTry(
      Try(
        LocationRowUnsaved(
          name = json.\("name").as(Reads.StringReads),
          position = json.\("position").toOption.map(_.as(TypoPoint.reads)),
          area = json.\("area").toOption.map(_.as(TypoPolygon.reads)),
          ipRange = json.\("ip_range").toOption.map(_.as(TypoInet.reads)),
          id = json.\("id").as(Defaulted.reads(LocationId.reads)),
          metadata = json.\("metadata").as(Defaulted.readsOpt(TypoJsonb.reads))
        )
      )
    ),
  )
  implicit lazy val text: Text[LocationRowUnsaved] = Text.instance[LocationRowUnsaved]{ (row, sb) =>
    Text.stringInstance.unsafeEncode(row.name, sb)
    sb.append(Text.DELIMETER)
    Text.option(TypoPoint.text).unsafeEncode(row.position, sb)
    sb.append(Text.DELIMETER)
    Text.option(TypoPolygon.text).unsafeEncode(row.area, sb)
    sb.append(Text.DELIMETER)
    Text.option(TypoInet.text).unsafeEncode(row.ipRange, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(LocationId.text).unsafeEncode(row.id, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(Text.option(TypoJsonb.text)).unsafeEncode(row.metadata, sb)
  }
  implicit lazy val writes: OWrites[LocationRowUnsaved] = OWrites[LocationRowUnsaved](o =>
    new JsObject(ListMap[String, JsValue](
      "name" -> Writes.StringWrites.writes(o.name),
      "position" -> Writes.OptionWrites(TypoPoint.writes).writes(o.position),
      "area" -> Writes.OptionWrites(TypoPolygon.writes).writes(o.area),
      "ip_range" -> Writes.OptionWrites(TypoInet.writes).writes(o.ipRange),
      "id" -> Defaulted.writes(LocationId.writes).writes(o.id),
      "metadata" -> Defaulted.writes(Writes.OptionWrites(TypoJsonb.writes)).writes(o.metadata)
    ))
  )
}
