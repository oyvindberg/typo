/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package product

import adventureworks.customtypes.TypoJsonb
import adventureworks.customtypes.TypoLocalDateTime
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait ProductFields {
  def id: IdField[ProductId, ProductRow]
  def name: Field[String, ProductRow]
  def price: Field[BigDecimal, ProductRow]
  def inStock: OptField[Boolean, ProductRow]
  def quantity: OptField[Int, ProductRow]
  def lastRestocked: OptField[TypoLocalDateTime, ProductRow]
  def lastModified: OptField[TypoLocalDateTime, ProductRow]
  def tags: OptField[Array[String], ProductRow]
  def categories: OptField[Array[Int], ProductRow]
  def prices: OptField[Array[BigDecimal], ProductRow]
  def attributes: OptField[Array[TypoJsonb], ProductRow]
}

object ProductFields {
  lazy val structure: Relation[ProductFields, ProductRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[ProductFields, ProductRow] {
  
    override lazy val fields: ProductFields = new ProductFields {
      override def id = IdField[ProductId, ProductRow](_path, "id", None, Some("uuid"), x => x.id, (row, value) => row.copy(id = value))
      override def name = Field[String, ProductRow](_path, "name", None, None, x => x.name, (row, value) => row.copy(name = value))
      override def price = Field[BigDecimal, ProductRow](_path, "price", None, Some("numeric"), x => x.price, (row, value) => row.copy(price = value))
      override def inStock = OptField[Boolean, ProductRow](_path, "in_stock", None, None, x => x.inStock, (row, value) => row.copy(inStock = value))
      override def quantity = OptField[Int, ProductRow](_path, "quantity", None, Some("int4"), x => x.quantity, (row, value) => row.copy(quantity = value))
      override def lastRestocked = OptField[TypoLocalDateTime, ProductRow](_path, "last_restocked", Some("text"), Some("timestamp"), x => x.lastRestocked, (row, value) => row.copy(lastRestocked = value))
      override def lastModified = OptField[TypoLocalDateTime, ProductRow](_path, "last_modified", Some("text"), Some("timestamp"), x => x.lastModified, (row, value) => row.copy(lastModified = value))
      override def tags = OptField[Array[String], ProductRow](_path, "tags", None, Some("text[]"), x => x.tags, (row, value) => row.copy(tags = value))
      override def categories = OptField[Array[Int], ProductRow](_path, "categories", None, Some("int4[]"), x => x.categories, (row, value) => row.copy(categories = value))
      override def prices = OptField[Array[BigDecimal], ProductRow](_path, "prices", None, Some("numeric[]"), x => x.prices, (row, value) => row.copy(prices = value))
      override def attributes = OptField[Array[TypoJsonb], ProductRow](_path, "attributes", None, Some("jsonb[]"), x => x.attributes, (row, value) => row.copy(attributes = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, ProductRow]] =
      List[FieldLikeNoHkt[?, ProductRow]](fields.id, fields.name, fields.price, fields.inStock, fields.quantity, fields.lastRestocked, fields.lastModified, fields.tags, fields.categories, fields.prices, fields.attributes)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
