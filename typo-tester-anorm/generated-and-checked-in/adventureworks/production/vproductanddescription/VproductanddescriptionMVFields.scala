/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductanddescription

import adventureworks.production.culture.CultureId
import adventureworks.production.product.ProductId
import adventureworks.public.Name
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.Structure.Relation

trait VproductanddescriptionMVFields[Row] {
  val productid: Field[ProductId, Row]
  val name: Field[Name, Row]
  val productmodel: Field[Name, Row]
  val cultureid: Field[CultureId, Row]
  val description: Field[/* max 400 chars */ String, Row]
}

object VproductanddescriptionMVFields {
  val structure: Relation[VproductanddescriptionMVFields, VproductanddescriptionMVRow, VproductanddescriptionMVRow] = 
    new Impl(None, identity, (_, x) => x)
    
  private final class Impl[Row](val prefix: Option[String], val extract: Row => VproductanddescriptionMVRow, val merge: (Row, VproductanddescriptionMVRow) => Row)
    extends Relation[VproductanddescriptionMVFields, VproductanddescriptionMVRow, Row] { 
  
    override val fields: VproductanddescriptionMVFields[Row] = new VproductanddescriptionMVFields[Row] {
      override val productid = new Field[ProductId, Row](prefix, "productid", None, None)(x => extract(x).productid, (row, value) => merge(row, extract(row).copy(productid = value)))
      override val name = new Field[Name, Row](prefix, "name", None, None)(x => extract(x).name, (row, value) => merge(row, extract(row).copy(name = value)))
      override val productmodel = new Field[Name, Row](prefix, "productmodel", None, None)(x => extract(x).productmodel, (row, value) => merge(row, extract(row).copy(productmodel = value)))
      override val cultureid = new Field[CultureId, Row](prefix, "cultureid", None, None)(x => extract(x).cultureid, (row, value) => merge(row, extract(row).copy(cultureid = value)))
      override val description = new Field[/* max 400 chars */ String, Row](prefix, "description", None, None)(x => extract(x).description, (row, value) => merge(row, extract(row).copy(description = value)))
    }
  
    override val columns: List[FieldLikeNoHkt[?, Row]] =
      List[FieldLikeNoHkt[?, Row]](fields.productid, fields.name, fields.productmodel, fields.cultureid, fields.description)
  
    override def copy[NewRow](prefix: Option[String], extract: NewRow => VproductanddescriptionMVRow, merge: (NewRow, VproductanddescriptionMVRow) => NewRow): Impl[NewRow] =
      new Impl(prefix, extract, merge)
  }
  
}
