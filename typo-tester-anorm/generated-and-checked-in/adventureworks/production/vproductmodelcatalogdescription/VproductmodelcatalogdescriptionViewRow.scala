/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductmodelcatalogdescription

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.production.productmodel.ProductmodelId
import adventureworks.public.Name
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** View: production.vproductmodelcatalogdescription */
case class VproductmodelcatalogdescriptionViewRow(
  /** Points to [[productmodel.ProductmodelRow.productmodelid]] */
  productmodelid: ProductmodelId,
  /** Points to [[productmodel.ProductmodelRow.name]] */
  name: Name,
  Summary: /* nullability unknown */ Option[String],
  manufacturer: /* nullability unknown */ Option[String],
  copyright: /* nullability unknown */ Option[/* max 30 chars */ String],
  producturl: /* nullability unknown */ Option[/* max 256 chars */ String],
  warrantyperiod: /* nullability unknown */ Option[/* max 256 chars */ String],
  warrantydescription: /* nullability unknown */ Option[/* max 256 chars */ String],
  noofyears: /* nullability unknown */ Option[/* max 256 chars */ String],
  maintenancedescription: /* nullability unknown */ Option[/* max 256 chars */ String],
  wheel: /* nullability unknown */ Option[/* max 256 chars */ String],
  saddle: /* nullability unknown */ Option[/* max 256 chars */ String],
  pedal: /* nullability unknown */ Option[/* max 256 chars */ String],
  bikeframe: /* nullability unknown */ Option[String],
  crankset: /* nullability unknown */ Option[/* max 256 chars */ String],
  pictureangle: /* nullability unknown */ Option[/* max 256 chars */ String],
  picturesize: /* nullability unknown */ Option[/* max 256 chars */ String],
  productphotoid: /* nullability unknown */ Option[/* max 256 chars */ String],
  material: /* nullability unknown */ Option[/* max 256 chars */ String],
  color: /* nullability unknown */ Option[/* max 256 chars */ String],
  productline: /* nullability unknown */ Option[/* max 256 chars */ String],
  style: /* nullability unknown */ Option[/* max 256 chars */ String],
  riderexperience: /* nullability unknown */ Option[/* max 1024 chars */ String],
  /** Points to [[productmodel.ProductmodelRow.rowguid]] */
  rowguid: TypoUUID,
  /** Points to [[productmodel.ProductmodelRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object VproductmodelcatalogdescriptionViewRow {
  implicit lazy val reads: Reads[VproductmodelcatalogdescriptionViewRow] = Reads[VproductmodelcatalogdescriptionViewRow](json => JsResult.fromTry(
      Try(
        VproductmodelcatalogdescriptionViewRow(
          productmodelid = json.\("productmodelid").as(ProductmodelId.reads),
          name = json.\("name").as(Name.reads),
          Summary = json.\("Summary").toOption.map(_.as(Reads.StringReads)),
          manufacturer = json.\("manufacturer").toOption.map(_.as(Reads.StringReads)),
          copyright = json.\("copyright").toOption.map(_.as(Reads.StringReads)),
          producturl = json.\("producturl").toOption.map(_.as(Reads.StringReads)),
          warrantyperiod = json.\("warrantyperiod").toOption.map(_.as(Reads.StringReads)),
          warrantydescription = json.\("warrantydescription").toOption.map(_.as(Reads.StringReads)),
          noofyears = json.\("noofyears").toOption.map(_.as(Reads.StringReads)),
          maintenancedescription = json.\("maintenancedescription").toOption.map(_.as(Reads.StringReads)),
          wheel = json.\("wheel").toOption.map(_.as(Reads.StringReads)),
          saddle = json.\("saddle").toOption.map(_.as(Reads.StringReads)),
          pedal = json.\("pedal").toOption.map(_.as(Reads.StringReads)),
          bikeframe = json.\("bikeframe").toOption.map(_.as(Reads.StringReads)),
          crankset = json.\("crankset").toOption.map(_.as(Reads.StringReads)),
          pictureangle = json.\("pictureangle").toOption.map(_.as(Reads.StringReads)),
          picturesize = json.\("picturesize").toOption.map(_.as(Reads.StringReads)),
          productphotoid = json.\("productphotoid").toOption.map(_.as(Reads.StringReads)),
          material = json.\("material").toOption.map(_.as(Reads.StringReads)),
          color = json.\("color").toOption.map(_.as(Reads.StringReads)),
          productline = json.\("productline").toOption.map(_.as(Reads.StringReads)),
          style = json.\("style").toOption.map(_.as(Reads.StringReads)),
          riderexperience = json.\("riderexperience").toOption.map(_.as(Reads.StringReads)),
          rowguid = json.\("rowguid").as(TypoUUID.reads),
          modifieddate = json.\("modifieddate").as(TypoLocalDateTime.reads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[VproductmodelcatalogdescriptionViewRow] = RowParser[VproductmodelcatalogdescriptionViewRow] { row =>
    Success(
      VproductmodelcatalogdescriptionViewRow(
        productmodelid = row(idx + 0)(ProductmodelId.column),
        name = row(idx + 1)(Name.column),
        Summary = row(idx + 2)(Column.columnToOption(Column.columnToString)),
        manufacturer = row(idx + 3)(Column.columnToOption(Column.columnToString)),
        copyright = row(idx + 4)(Column.columnToOption(Column.columnToString)),
        producturl = row(idx + 5)(Column.columnToOption(Column.columnToString)),
        warrantyperiod = row(idx + 6)(Column.columnToOption(Column.columnToString)),
        warrantydescription = row(idx + 7)(Column.columnToOption(Column.columnToString)),
        noofyears = row(idx + 8)(Column.columnToOption(Column.columnToString)),
        maintenancedescription = row(idx + 9)(Column.columnToOption(Column.columnToString)),
        wheel = row(idx + 10)(Column.columnToOption(Column.columnToString)),
        saddle = row(idx + 11)(Column.columnToOption(Column.columnToString)),
        pedal = row(idx + 12)(Column.columnToOption(Column.columnToString)),
        bikeframe = row(idx + 13)(Column.columnToOption(Column.columnToString)),
        crankset = row(idx + 14)(Column.columnToOption(Column.columnToString)),
        pictureangle = row(idx + 15)(Column.columnToOption(Column.columnToString)),
        picturesize = row(idx + 16)(Column.columnToOption(Column.columnToString)),
        productphotoid = row(idx + 17)(Column.columnToOption(Column.columnToString)),
        material = row(idx + 18)(Column.columnToOption(Column.columnToString)),
        color = row(idx + 19)(Column.columnToOption(Column.columnToString)),
        productline = row(idx + 20)(Column.columnToOption(Column.columnToString)),
        style = row(idx + 21)(Column.columnToOption(Column.columnToString)),
        riderexperience = row(idx + 22)(Column.columnToOption(Column.columnToString)),
        rowguid = row(idx + 23)(TypoUUID.column),
        modifieddate = row(idx + 24)(TypoLocalDateTime.column)
      )
    )
  }
  implicit lazy val writes: OWrites[VproductmodelcatalogdescriptionViewRow] = OWrites[VproductmodelcatalogdescriptionViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "productmodelid" -> ProductmodelId.writes.writes(o.productmodelid),
      "name" -> Name.writes.writes(o.name),
      "Summary" -> Writes.OptionWrites(Writes.StringWrites).writes(o.Summary),
      "manufacturer" -> Writes.OptionWrites(Writes.StringWrites).writes(o.manufacturer),
      "copyright" -> Writes.OptionWrites(Writes.StringWrites).writes(o.copyright),
      "producturl" -> Writes.OptionWrites(Writes.StringWrites).writes(o.producturl),
      "warrantyperiod" -> Writes.OptionWrites(Writes.StringWrites).writes(o.warrantyperiod),
      "warrantydescription" -> Writes.OptionWrites(Writes.StringWrites).writes(o.warrantydescription),
      "noofyears" -> Writes.OptionWrites(Writes.StringWrites).writes(o.noofyears),
      "maintenancedescription" -> Writes.OptionWrites(Writes.StringWrites).writes(o.maintenancedescription),
      "wheel" -> Writes.OptionWrites(Writes.StringWrites).writes(o.wheel),
      "saddle" -> Writes.OptionWrites(Writes.StringWrites).writes(o.saddle),
      "pedal" -> Writes.OptionWrites(Writes.StringWrites).writes(o.pedal),
      "bikeframe" -> Writes.OptionWrites(Writes.StringWrites).writes(o.bikeframe),
      "crankset" -> Writes.OptionWrites(Writes.StringWrites).writes(o.crankset),
      "pictureangle" -> Writes.OptionWrites(Writes.StringWrites).writes(o.pictureangle),
      "picturesize" -> Writes.OptionWrites(Writes.StringWrites).writes(o.picturesize),
      "productphotoid" -> Writes.OptionWrites(Writes.StringWrites).writes(o.productphotoid),
      "material" -> Writes.OptionWrites(Writes.StringWrites).writes(o.material),
      "color" -> Writes.OptionWrites(Writes.StringWrites).writes(o.color),
      "productline" -> Writes.OptionWrites(Writes.StringWrites).writes(o.productline),
      "style" -> Writes.OptionWrites(Writes.StringWrites).writes(o.style),
      "riderexperience" -> Writes.OptionWrites(Writes.StringWrites).writes(o.riderexperience),
      "rowguid" -> TypoUUID.writes.writes(o.rowguid),
      "modifieddate" -> TypoLocalDateTime.writes.writes(o.modifieddate)
    ))
  )
}
