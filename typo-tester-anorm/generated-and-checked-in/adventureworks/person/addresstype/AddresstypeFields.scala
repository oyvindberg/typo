/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package addresstype

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.public.Name
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

trait AddresstypeFields {
  def addresstypeid: IdField[AddresstypeId, AddresstypeRow]
  def name: Field[Name, AddresstypeRow]
  def rowguid: Field[TypoUUID, AddresstypeRow]
  def modifieddate: Field[TypoLocalDateTime, AddresstypeRow]
}

object AddresstypeFields {
  lazy val structure: Relation[AddresstypeFields, AddresstypeRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[AddresstypeFields, AddresstypeRow] {
  
    override lazy val fields: AddresstypeFields = new AddresstypeFields {
      override def addresstypeid = IdField[AddresstypeId, AddresstypeRow](_path, "addresstypeid", None, Some("int4"), x => x.addresstypeid, (row, value) => row.copy(addresstypeid = value))
      override def name = Field[Name, AddresstypeRow](_path, "name", None, Some("varchar"), x => x.name, (row, value) => row.copy(name = value))
      override def rowguid = Field[TypoUUID, AddresstypeRow](_path, "rowguid", None, Some("uuid"), x => x.rowguid, (row, value) => row.copy(rowguid = value))
      override def modifieddate = Field[TypoLocalDateTime, AddresstypeRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, AddresstypeRow]] =
      List[FieldLikeNoHkt[?, AddresstypeRow]](fields.addresstypeid, fields.name, fields.rowguid, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
