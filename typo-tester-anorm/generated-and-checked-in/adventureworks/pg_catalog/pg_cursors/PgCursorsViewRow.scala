/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_cursors

import adventureworks.customtypes.TypoInstant
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

case class PgCursorsViewRow(
  name: /* nullability unknown */ Option[String],
  statement: /* nullability unknown */ Option[String],
  isHoldable: /* nullability unknown */ Option[Boolean],
  isBinary: /* nullability unknown */ Option[Boolean],
  isScrollable: /* nullability unknown */ Option[Boolean],
  creationTime: /* nullability unknown */ Option[TypoInstant]
)

object PgCursorsViewRow {
  implicit lazy val reads: Reads[PgCursorsViewRow] = Reads[PgCursorsViewRow](json => JsResult.fromTry(
      Try(
        PgCursorsViewRow(
          name = json.\("name").toOption.map(_.as(Reads.StringReads)),
          statement = json.\("statement").toOption.map(_.as(Reads.StringReads)),
          isHoldable = json.\("is_holdable").toOption.map(_.as(Reads.BooleanReads)),
          isBinary = json.\("is_binary").toOption.map(_.as(Reads.BooleanReads)),
          isScrollable = json.\("is_scrollable").toOption.map(_.as(Reads.BooleanReads)),
          creationTime = json.\("creation_time").toOption.map(_.as(TypoInstant.reads))
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[PgCursorsViewRow] = RowParser[PgCursorsViewRow] { row =>
    Success(
      PgCursorsViewRow(
        name = row(idx + 0)(Column.columnToOption(Column.columnToString)),
        statement = row(idx + 1)(Column.columnToOption(Column.columnToString)),
        isHoldable = row(idx + 2)(Column.columnToOption(Column.columnToBoolean)),
        isBinary = row(idx + 3)(Column.columnToOption(Column.columnToBoolean)),
        isScrollable = row(idx + 4)(Column.columnToOption(Column.columnToBoolean)),
        creationTime = row(idx + 5)(Column.columnToOption(TypoInstant.column))
      )
    )
  }
  implicit lazy val writes: OWrites[PgCursorsViewRow] = OWrites[PgCursorsViewRow](o =>
    new JsObject(ListMap[String, JsValue](
      "name" -> Writes.OptionWrites(Writes.StringWrites).writes(o.name),
      "statement" -> Writes.OptionWrites(Writes.StringWrites).writes(o.statement),
      "is_holdable" -> Writes.OptionWrites(Writes.BooleanWrites).writes(o.isHoldable),
      "is_binary" -> Writes.OptionWrites(Writes.BooleanWrites).writes(o.isBinary),
      "is_scrollable" -> Writes.OptionWrites(Writes.BooleanWrites).writes(o.isScrollable),
      "creation_time" -> Writes.OptionWrites(TypoInstant.writes).writes(o.creationTime)
    ))
  )
}
