/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package test_utdanningstilbud

import adventureworks.public.test_organisasjon.TestOrganisasjonId
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** Type for the composite primary key of table `public.test_utdanningstilbud` */
case class TestUtdanningstilbudId(
  organisasjonskode: TestOrganisasjonId,
  utdanningsmulighetKode: String
)
object TestUtdanningstilbudId {
  implicit lazy val ordering: Ordering[TestUtdanningstilbudId] = Ordering.by(x => (x.organisasjonskode, x.utdanningsmulighetKode))
  implicit lazy val reads: Reads[TestUtdanningstilbudId] = Reads[TestUtdanningstilbudId](json => JsResult.fromTry(
      Try(
        TestUtdanningstilbudId(
          organisasjonskode = json.\("organisasjonskode").as(TestOrganisasjonId.reads),
          utdanningsmulighetKode = json.\("utdanningsmulighet_kode").as(Reads.StringReads)
        )
      )
    ),
  )
  implicit lazy val writes: OWrites[TestUtdanningstilbudId] = OWrites[TestUtdanningstilbudId](o =>
    new JsObject(ListMap[String, JsValue](
      "organisasjonskode" -> TestOrganisasjonId.writes.writes(o.organisasjonskode),
      "utdanningsmulighet_kode" -> Writes.StringWrites.writes(o.utdanningsmulighetKode)
    ))
  )
}
