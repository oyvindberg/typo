/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package test_utdanningstilbud

import adventureworks.public.test_organisasjon.TestOrganisasjonId
import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** Table: public.test_utdanningstilbud
    Composite primary key: organisasjonskode, utdanningsmulighet_kode */
case class TestUtdanningstilbudRow(
  /** Points to [[test_organisasjon.TestOrganisasjonRow.organisasjonskode]] */
  organisasjonskode: TestOrganisasjonId,
  utdanningsmulighetKode: String
){
   val compositeId: TestUtdanningstilbudId = TestUtdanningstilbudId(organisasjonskode, utdanningsmulighetKode)
   val id = compositeId
 }

object TestUtdanningstilbudRow {
  def apply(compositeId: TestUtdanningstilbudId) =
    new TestUtdanningstilbudRow(compositeId.organisasjonskode, compositeId.utdanningsmulighetKode)
  implicit lazy val reads: Reads[TestUtdanningstilbudRow] = Reads[TestUtdanningstilbudRow](json => JsResult.fromTry(
      Try(
        TestUtdanningstilbudRow(
          organisasjonskode = json.\("organisasjonskode").as(TestOrganisasjonId.reads),
          utdanningsmulighetKode = json.\("utdanningsmulighet_kode").as(Reads.StringReads)
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[TestUtdanningstilbudRow] = RowParser[TestUtdanningstilbudRow] { row =>
    Success(
      TestUtdanningstilbudRow(
        organisasjonskode = row(idx + 0)(TestOrganisasjonId.column),
        utdanningsmulighetKode = row(idx + 1)(Column.columnToString)
      )
    )
  }
  implicit lazy val text: Text[TestUtdanningstilbudRow] = Text.instance[TestUtdanningstilbudRow]{ (row, sb) =>
    TestOrganisasjonId.text.unsafeEncode(row.organisasjonskode, sb)
    sb.append(Text.DELIMETER)
    Text.stringInstance.unsafeEncode(row.utdanningsmulighetKode, sb)
  }
  implicit lazy val writes: OWrites[TestUtdanningstilbudRow] = OWrites[TestUtdanningstilbudRow](o =>
    new JsObject(ListMap[String, JsValue](
      "organisasjonskode" -> TestOrganisasjonId.writes.writes(o.organisasjonskode),
      "utdanningsmulighet_kode" -> Writes.StringWrites.writes(o.utdanningsmulighetKode)
    ))
  )
}
