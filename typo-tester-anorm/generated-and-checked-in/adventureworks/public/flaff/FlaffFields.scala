/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package flaff

import adventureworks.public.ShortText
import typo.dsl.Path
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait FlaffFields {
  def code: IdField[ShortText, FlaffRow]
  def anotherCode: IdField[/* max 20 chars */ String, FlaffRow]
  def someNumber: IdField[Int, FlaffRow]
  def specifier: IdField[ShortText, FlaffRow]
  def parentspecifier: OptField[ShortText, FlaffRow]
}

object FlaffFields {
  lazy val structure: Relation[FlaffFields, FlaffRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[FlaffFields, FlaffRow] {
  
    override lazy val fields: FlaffFields = new FlaffFields {
      override def code = IdField[ShortText, FlaffRow](_path, "code", None, Some("text"), x => x.code, (row, value) => row.copy(code = value))
      override def anotherCode = IdField[/* max 20 chars */ String, FlaffRow](_path, "another_code", None, None, x => x.anotherCode, (row, value) => row.copy(anotherCode = value))
      override def someNumber = IdField[Int, FlaffRow](_path, "some_number", None, Some("int4"), x => x.someNumber, (row, value) => row.copy(someNumber = value))
      override def specifier = IdField[ShortText, FlaffRow](_path, "specifier", None, Some("text"), x => x.specifier, (row, value) => row.copy(specifier = value))
      override def parentspecifier = OptField[ShortText, FlaffRow](_path, "parentspecifier", None, Some("text"), x => x.parentspecifier, (row, value) => row.copy(parentspecifier = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, FlaffRow]] =
      List[FieldLikeNoHkt[?, FlaffRow]](fields.code, fields.anotherCode, fields.someNumber, fields.specifier, fields.parentspecifier)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
