/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package titledperson

import adventureworks.public.title.TitleId
import adventureworks.public.title_domain.TitleDomainId
import anorm.ParameterValue
import anorm.SqlStringInterpolation
import anorm.ToStatement
import java.sql.Connection
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder

class TitledpersonRepoImpl extends TitledpersonRepo {
  override def delete: DeleteBuilder[TitledpersonFields, TitledpersonRow] = {
    DeleteBuilder(""""public"."titledperson"""", TitledpersonFields.structure)
  }
  override def insert(unsaved: TitledpersonRow)(implicit c: Connection): TitledpersonRow = {
    SQL"""insert into "public"."titledperson"("title_short", "title", "name")
          values (${ParameterValue(unsaved.titleShort, null, TitleDomainId.toStatement)}::text, ${ParameterValue(unsaved.title, null, TitleId.toStatement)}, ${ParameterValue(unsaved.name, null, ToStatement.stringToStatement)})
          returning "title_short", "title", "name"
       """
      .executeInsert(TitledpersonRow.rowParser(1).single)
    
  }
  override def insertStreaming(unsaved: Iterator[TitledpersonRow], batchSize: Int = 10000)(implicit c: Connection): Long = {
    streamingInsert(s"""COPY "public"."titledperson"("title_short", "title", "name") FROM STDIN""", batchSize, unsaved)(TitledpersonRow.text, c)
  }
  override def select: SelectBuilder[TitledpersonFields, TitledpersonRow] = {
    SelectBuilderSql(""""public"."titledperson"""", TitledpersonFields.structure, TitledpersonRow.rowParser)
  }
  override def selectAll(implicit c: Connection): List[TitledpersonRow] = {
    SQL"""select "title_short", "title", "name"
          from "public"."titledperson"
       """.as(TitledpersonRow.rowParser(1).*)
  }
  override def update: UpdateBuilder[TitledpersonFields, TitledpersonRow] = {
    UpdateBuilder(""""public"."titledperson"""", TitledpersonFields.structure, TitledpersonRow.rowParser)
  }
}
