/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package employee

import adventureworks.customtypes.TypoLocalDate
import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.customtypes.TypoUUID
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Flag
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait EmployeeFields {
  def businessentityid: IdField[BusinessentityId, EmployeeRow]
  def nationalidnumber: Field[/* max 15 chars */ String, EmployeeRow]
  def loginid: Field[/* max 256 chars */ String, EmployeeRow]
  def jobtitle: Field[/* max 50 chars */ String, EmployeeRow]
  def birthdate: Field[TypoLocalDate, EmployeeRow]
  def maritalstatus: Field[/* bpchar, max 1 chars */ String, EmployeeRow]
  def gender: Field[/* bpchar, max 1 chars */ String, EmployeeRow]
  def hiredate: Field[TypoLocalDate, EmployeeRow]
  def salariedflag: Field[Flag, EmployeeRow]
  def vacationhours: Field[TypoShort, EmployeeRow]
  def sickleavehours: Field[TypoShort, EmployeeRow]
  def currentflag: Field[Flag, EmployeeRow]
  def rowguid: Field[TypoUUID, EmployeeRow]
  def modifieddate: Field[TypoLocalDateTime, EmployeeRow]
  def organizationnode: OptField[String, EmployeeRow]
}

object EmployeeFields {
  lazy val structure: Relation[EmployeeFields, EmployeeRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[EmployeeFields, EmployeeRow] {
  
    override lazy val fields: EmployeeFields = new EmployeeFields {
      override def businessentityid = IdField[BusinessentityId, EmployeeRow](_path, "businessentityid", None, Some("int4"), x => x.businessentityid, (row, value) => row.copy(businessentityid = value))
      override def nationalidnumber = Field[/* max 15 chars */ String, EmployeeRow](_path, "nationalidnumber", None, None, x => x.nationalidnumber, (row, value) => row.copy(nationalidnumber = value))
      override def loginid = Field[/* max 256 chars */ String, EmployeeRow](_path, "loginid", None, None, x => x.loginid, (row, value) => row.copy(loginid = value))
      override def jobtitle = Field[/* max 50 chars */ String, EmployeeRow](_path, "jobtitle", None, None, x => x.jobtitle, (row, value) => row.copy(jobtitle = value))
      override def birthdate = Field[TypoLocalDate, EmployeeRow](_path, "birthdate", Some("text"), Some("date"), x => x.birthdate, (row, value) => row.copy(birthdate = value))
      override def maritalstatus = Field[/* bpchar, max 1 chars */ String, EmployeeRow](_path, "maritalstatus", None, Some("bpchar"), x => x.maritalstatus, (row, value) => row.copy(maritalstatus = value))
      override def gender = Field[/* bpchar, max 1 chars */ String, EmployeeRow](_path, "gender", None, Some("bpchar"), x => x.gender, (row, value) => row.copy(gender = value))
      override def hiredate = Field[TypoLocalDate, EmployeeRow](_path, "hiredate", Some("text"), Some("date"), x => x.hiredate, (row, value) => row.copy(hiredate = value))
      override def salariedflag = Field[Flag, EmployeeRow](_path, "salariedflag", None, Some("bool"), x => x.salariedflag, (row, value) => row.copy(salariedflag = value))
      override def vacationhours = Field[TypoShort, EmployeeRow](_path, "vacationhours", None, Some("int2"), x => x.vacationhours, (row, value) => row.copy(vacationhours = value))
      override def sickleavehours = Field[TypoShort, EmployeeRow](_path, "sickleavehours", None, Some("int2"), x => x.sickleavehours, (row, value) => row.copy(sickleavehours = value))
      override def currentflag = Field[Flag, EmployeeRow](_path, "currentflag", None, Some("bool"), x => x.currentflag, (row, value) => row.copy(currentflag = value))
      override def rowguid = Field[TypoUUID, EmployeeRow](_path, "rowguid", None, Some("uuid"), x => x.rowguid, (row, value) => row.copy(rowguid = value))
      override def modifieddate = Field[TypoLocalDateTime, EmployeeRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
      override def organizationnode = OptField[String, EmployeeRow](_path, "organizationnode", None, None, x => x.organizationnode, (row, value) => row.copy(organizationnode = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, EmployeeRow]] =
      List[FieldLikeNoHkt[?, EmployeeRow]](fields.businessentityid, fields.nationalidnumber, fields.loginid, fields.jobtitle, fields.birthdate, fields.maritalstatus, fields.gender, fields.hiredate, fields.salariedflag, fields.vacationhours, fields.sickleavehours, fields.currentflag, fields.rowguid, fields.modifieddate, fields.organizationnode)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
