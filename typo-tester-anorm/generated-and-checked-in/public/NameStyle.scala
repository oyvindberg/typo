/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import anorm.Column
import anorm.ParameterMetaData
import anorm.ToStatement
import play.api.libs.json.Format

/** Domain `public.NameStyle`
  * No constraint
  */
case class NameStyle(value: Boolean) extends AnyVal
object NameStyle {
  implicit def ordering(implicit ev: Ordering[Boolean]): Ordering[NameStyle] = Ordering.by(_.value)
  implicit val format: Format[NameStyle] = implicitly[Format[Boolean]].bimap(NameStyle.apply, _.value)
  implicit val toStatement: ToStatement[NameStyle] = implicitly[ToStatement[Boolean]].contramap(_.value)
  implicit val toStatementArray: ToStatement[Array[NameStyle]] = implicitly[ToStatement[Array[Boolean]]].contramap(_.map(_.value))
  implicit val column: Column[NameStyle] = implicitly[Column[Boolean]].map(NameStyle.apply)
  implicit val parameterMetadata: ParameterMetaData[NameStyle] = new ParameterMetaData[NameStyle] {
    override def sqlType: String = implicitly[ParameterMetaData[Boolean]].sqlType
    override def jdbcType: Int = implicitly[ParameterMetaData[Boolean]].jdbcType
  }

}
