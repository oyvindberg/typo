/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routines

import adventureworks.information_schema.CardinalNumber
import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.TimeStamp
import adventureworks.information_schema.YesOrNo
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class RoutinesViewRow(
  specificCatalog: Option[SqlIdentifier],
  specificSchema: Option[SqlIdentifier],
  specificName: Option[SqlIdentifier],
  routineCatalog: Option[SqlIdentifier],
  routineSchema: Option[SqlIdentifier],
  routineName: Option[SqlIdentifier],
  routineType: Option[CharacterData],
  moduleCatalog: Option[SqlIdentifier],
  moduleSchema: Option[SqlIdentifier],
  moduleName: Option[SqlIdentifier],
  udtCatalog: Option[SqlIdentifier],
  udtSchema: Option[SqlIdentifier],
  udtName: Option[SqlIdentifier],
  dataType: Option[CharacterData],
  characterMaximumLength: Option[CardinalNumber],
  characterOctetLength: Option[CardinalNumber],
  characterSetCatalog: Option[SqlIdentifier],
  characterSetSchema: Option[SqlIdentifier],
  characterSetName: Option[SqlIdentifier],
  collationCatalog: Option[SqlIdentifier],
  collationSchema: Option[SqlIdentifier],
  collationName: Option[SqlIdentifier],
  numericPrecision: Option[CardinalNumber],
  numericPrecisionRadix: Option[CardinalNumber],
  numericScale: Option[CardinalNumber],
  datetimePrecision: Option[CardinalNumber],
  intervalType: Option[CharacterData],
  intervalPrecision: Option[CardinalNumber],
  typeUdtCatalog: Option[SqlIdentifier],
  typeUdtSchema: Option[SqlIdentifier],
  typeUdtName: Option[SqlIdentifier],
  scopeCatalog: Option[SqlIdentifier],
  scopeSchema: Option[SqlIdentifier],
  scopeName: Option[SqlIdentifier],
  maximumCardinality: Option[CardinalNumber],
  dtdIdentifier: Option[SqlIdentifier],
  routineBody: Option[CharacterData],
  routineDefinition: Option[CharacterData],
  externalName: Option[CharacterData],
  externalLanguage: Option[CharacterData],
  parameterStyle: Option[CharacterData],
  isDeterministic: Option[YesOrNo],
  sqlDataAccess: Option[CharacterData],
  isNullCall: Option[YesOrNo],
  sqlPath: Option[CharacterData],
  schemaLevelRoutine: Option[YesOrNo],
  maxDynamicResultSets: Option[CardinalNumber],
  isUserDefinedCast: Option[YesOrNo],
  isImplicitlyInvocable: Option[YesOrNo],
  securityType: Option[CharacterData],
  toSqlSpecificCatalog: Option[SqlIdentifier],
  toSqlSpecificSchema: Option[SqlIdentifier],
  toSqlSpecificName: Option[SqlIdentifier],
  asLocator: Option[YesOrNo],
  created: Option[TimeStamp],
  lastAltered: Option[TimeStamp],
  newSavepointLevel: Option[YesOrNo],
  isUdtDependent: Option[YesOrNo],
  resultCastFromDataType: Option[CharacterData],
  resultCastAsLocator: Option[YesOrNo],
  resultCastCharMaxLength: Option[CardinalNumber],
  resultCastCharOctetLength: Option[CardinalNumber],
  resultCastCharSetCatalog: Option[SqlIdentifier],
  resultCastCharSetSchema: Option[SqlIdentifier],
  resultCastCharSetName: Option[SqlIdentifier],
  resultCastCollationCatalog: Option[SqlIdentifier],
  resultCastCollationSchema: Option[SqlIdentifier],
  resultCastCollationName: Option[SqlIdentifier],
  resultCastNumericPrecision: Option[CardinalNumber],
  resultCastNumericPrecisionRadix: Option[CardinalNumber],
  resultCastNumericScale: Option[CardinalNumber],
  resultCastDatetimePrecision: Option[CardinalNumber],
  resultCastIntervalType: Option[CharacterData],
  resultCastIntervalPrecision: Option[CardinalNumber],
  resultCastTypeUdtCatalog: Option[SqlIdentifier],
  resultCastTypeUdtSchema: Option[SqlIdentifier],
  resultCastTypeUdtName: Option[SqlIdentifier],
  resultCastScopeCatalog: Option[SqlIdentifier],
  resultCastScopeSchema: Option[SqlIdentifier],
  resultCastScopeName: Option[SqlIdentifier],
  resultCastMaximumCardinality: Option[CardinalNumber],
  resultCastDtdIdentifier: Option[SqlIdentifier]
)

object RoutinesViewRow {
  def rowParser(idx: Int): RowParser[RoutinesViewRow] =
    RowParser[RoutinesViewRow] { row =>
      Success(
        RoutinesViewRow(
          specificCatalog = row[Option[SqlIdentifier]](idx + 0),
          specificSchema = row[Option[SqlIdentifier]](idx + 1),
          specificName = row[Option[SqlIdentifier]](idx + 2),
          routineCatalog = row[Option[SqlIdentifier]](idx + 3),
          routineSchema = row[Option[SqlIdentifier]](idx + 4),
          routineName = row[Option[SqlIdentifier]](idx + 5),
          routineType = row[Option[CharacterData]](idx + 6),
          moduleCatalog = row[Option[SqlIdentifier]](idx + 7),
          moduleSchema = row[Option[SqlIdentifier]](idx + 8),
          moduleName = row[Option[SqlIdentifier]](idx + 9),
          udtCatalog = row[Option[SqlIdentifier]](idx + 10),
          udtSchema = row[Option[SqlIdentifier]](idx + 11),
          udtName = row[Option[SqlIdentifier]](idx + 12),
          dataType = row[Option[CharacterData]](idx + 13),
          characterMaximumLength = row[Option[CardinalNumber]](idx + 14),
          characterOctetLength = row[Option[CardinalNumber]](idx + 15),
          characterSetCatalog = row[Option[SqlIdentifier]](idx + 16),
          characterSetSchema = row[Option[SqlIdentifier]](idx + 17),
          characterSetName = row[Option[SqlIdentifier]](idx + 18),
          collationCatalog = row[Option[SqlIdentifier]](idx + 19),
          collationSchema = row[Option[SqlIdentifier]](idx + 20),
          collationName = row[Option[SqlIdentifier]](idx + 21),
          numericPrecision = row[Option[CardinalNumber]](idx + 22),
          numericPrecisionRadix = row[Option[CardinalNumber]](idx + 23),
          numericScale = row[Option[CardinalNumber]](idx + 24),
          datetimePrecision = row[Option[CardinalNumber]](idx + 25),
          intervalType = row[Option[CharacterData]](idx + 26),
          intervalPrecision = row[Option[CardinalNumber]](idx + 27),
          typeUdtCatalog = row[Option[SqlIdentifier]](idx + 28),
          typeUdtSchema = row[Option[SqlIdentifier]](idx + 29),
          typeUdtName = row[Option[SqlIdentifier]](idx + 30),
          scopeCatalog = row[Option[SqlIdentifier]](idx + 31),
          scopeSchema = row[Option[SqlIdentifier]](idx + 32),
          scopeName = row[Option[SqlIdentifier]](idx + 33),
          maximumCardinality = row[Option[CardinalNumber]](idx + 34),
          dtdIdentifier = row[Option[SqlIdentifier]](idx + 35),
          routineBody = row[Option[CharacterData]](idx + 36),
          routineDefinition = row[Option[CharacterData]](idx + 37),
          externalName = row[Option[CharacterData]](idx + 38),
          externalLanguage = row[Option[CharacterData]](idx + 39),
          parameterStyle = row[Option[CharacterData]](idx + 40),
          isDeterministic = row[Option[YesOrNo]](idx + 41),
          sqlDataAccess = row[Option[CharacterData]](idx + 42),
          isNullCall = row[Option[YesOrNo]](idx + 43),
          sqlPath = row[Option[CharacterData]](idx + 44),
          schemaLevelRoutine = row[Option[YesOrNo]](idx + 45),
          maxDynamicResultSets = row[Option[CardinalNumber]](idx + 46),
          isUserDefinedCast = row[Option[YesOrNo]](idx + 47),
          isImplicitlyInvocable = row[Option[YesOrNo]](idx + 48),
          securityType = row[Option[CharacterData]](idx + 49),
          toSqlSpecificCatalog = row[Option[SqlIdentifier]](idx + 50),
          toSqlSpecificSchema = row[Option[SqlIdentifier]](idx + 51),
          toSqlSpecificName = row[Option[SqlIdentifier]](idx + 52),
          asLocator = row[Option[YesOrNo]](idx + 53),
          created = row[Option[TimeStamp]](idx + 54),
          lastAltered = row[Option[TimeStamp]](idx + 55),
          newSavepointLevel = row[Option[YesOrNo]](idx + 56),
          isUdtDependent = row[Option[YesOrNo]](idx + 57),
          resultCastFromDataType = row[Option[CharacterData]](idx + 58),
          resultCastAsLocator = row[Option[YesOrNo]](idx + 59),
          resultCastCharMaxLength = row[Option[CardinalNumber]](idx + 60),
          resultCastCharOctetLength = row[Option[CardinalNumber]](idx + 61),
          resultCastCharSetCatalog = row[Option[SqlIdentifier]](idx + 62),
          resultCastCharSetSchema = row[Option[SqlIdentifier]](idx + 63),
          resultCastCharSetName = row[Option[SqlIdentifier]](idx + 64),
          resultCastCollationCatalog = row[Option[SqlIdentifier]](idx + 65),
          resultCastCollationSchema = row[Option[SqlIdentifier]](idx + 66),
          resultCastCollationName = row[Option[SqlIdentifier]](idx + 67),
          resultCastNumericPrecision = row[Option[CardinalNumber]](idx + 68),
          resultCastNumericPrecisionRadix = row[Option[CardinalNumber]](idx + 69),
          resultCastNumericScale = row[Option[CardinalNumber]](idx + 70),
          resultCastDatetimePrecision = row[Option[CardinalNumber]](idx + 71),
          resultCastIntervalType = row[Option[CharacterData]](idx + 72),
          resultCastIntervalPrecision = row[Option[CardinalNumber]](idx + 73),
          resultCastTypeUdtCatalog = row[Option[SqlIdentifier]](idx + 74),
          resultCastTypeUdtSchema = row[Option[SqlIdentifier]](idx + 75),
          resultCastTypeUdtName = row[Option[SqlIdentifier]](idx + 76),
          resultCastScopeCatalog = row[Option[SqlIdentifier]](idx + 77),
          resultCastScopeSchema = row[Option[SqlIdentifier]](idx + 78),
          resultCastScopeName = row[Option[SqlIdentifier]](idx + 79),
          resultCastMaximumCardinality = row[Option[CardinalNumber]](idx + 80),
          resultCastDtdIdentifier = row[Option[SqlIdentifier]](idx + 81)
        )
      )
    }
  implicit val oFormat: OFormat[RoutinesViewRow] = new OFormat[RoutinesViewRow]{
    override def writes(o: RoutinesViewRow): JsObject =
      Json.obj(
        "specific_catalog" -> o.specificCatalog,
        "specific_schema" -> o.specificSchema,
        "specific_name" -> o.specificName,
        "routine_catalog" -> o.routineCatalog,
        "routine_schema" -> o.routineSchema,
        "routine_name" -> o.routineName,
        "routine_type" -> o.routineType,
        "module_catalog" -> o.moduleCatalog,
        "module_schema" -> o.moduleSchema,
        "module_name" -> o.moduleName,
        "udt_catalog" -> o.udtCatalog,
        "udt_schema" -> o.udtSchema,
        "udt_name" -> o.udtName,
        "data_type" -> o.dataType,
        "character_maximum_length" -> o.characterMaximumLength,
        "character_octet_length" -> o.characterOctetLength,
        "character_set_catalog" -> o.characterSetCatalog,
        "character_set_schema" -> o.characterSetSchema,
        "character_set_name" -> o.characterSetName,
        "collation_catalog" -> o.collationCatalog,
        "collation_schema" -> o.collationSchema,
        "collation_name" -> o.collationName,
        "numeric_precision" -> o.numericPrecision,
        "numeric_precision_radix" -> o.numericPrecisionRadix,
        "numeric_scale" -> o.numericScale,
        "datetime_precision" -> o.datetimePrecision,
        "interval_type" -> o.intervalType,
        "interval_precision" -> o.intervalPrecision,
        "type_udt_catalog" -> o.typeUdtCatalog,
        "type_udt_schema" -> o.typeUdtSchema,
        "type_udt_name" -> o.typeUdtName,
        "scope_catalog" -> o.scopeCatalog,
        "scope_schema" -> o.scopeSchema,
        "scope_name" -> o.scopeName,
        "maximum_cardinality" -> o.maximumCardinality,
        "dtd_identifier" -> o.dtdIdentifier,
        "routine_body" -> o.routineBody,
        "routine_definition" -> o.routineDefinition,
        "external_name" -> o.externalName,
        "external_language" -> o.externalLanguage,
        "parameter_style" -> o.parameterStyle,
        "is_deterministic" -> o.isDeterministic,
        "sql_data_access" -> o.sqlDataAccess,
        "is_null_call" -> o.isNullCall,
        "sql_path" -> o.sqlPath,
        "schema_level_routine" -> o.schemaLevelRoutine,
        "max_dynamic_result_sets" -> o.maxDynamicResultSets,
        "is_user_defined_cast" -> o.isUserDefinedCast,
        "is_implicitly_invocable" -> o.isImplicitlyInvocable,
        "security_type" -> o.securityType,
        "to_sql_specific_catalog" -> o.toSqlSpecificCatalog,
        "to_sql_specific_schema" -> o.toSqlSpecificSchema,
        "to_sql_specific_name" -> o.toSqlSpecificName,
        "as_locator" -> o.asLocator,
        "created" -> o.created,
        "last_altered" -> o.lastAltered,
        "new_savepoint_level" -> o.newSavepointLevel,
        "is_udt_dependent" -> o.isUdtDependent,
        "result_cast_from_data_type" -> o.resultCastFromDataType,
        "result_cast_as_locator" -> o.resultCastAsLocator,
        "result_cast_char_max_length" -> o.resultCastCharMaxLength,
        "result_cast_char_octet_length" -> o.resultCastCharOctetLength,
        "result_cast_char_set_catalog" -> o.resultCastCharSetCatalog,
        "result_cast_char_set_schema" -> o.resultCastCharSetSchema,
        "result_cast_char_set_name" -> o.resultCastCharSetName,
        "result_cast_collation_catalog" -> o.resultCastCollationCatalog,
        "result_cast_collation_schema" -> o.resultCastCollationSchema,
        "result_cast_collation_name" -> o.resultCastCollationName,
        "result_cast_numeric_precision" -> o.resultCastNumericPrecision,
        "result_cast_numeric_precision_radix" -> o.resultCastNumericPrecisionRadix,
        "result_cast_numeric_scale" -> o.resultCastNumericScale,
        "result_cast_datetime_precision" -> o.resultCastDatetimePrecision,
        "result_cast_interval_type" -> o.resultCastIntervalType,
        "result_cast_interval_precision" -> o.resultCastIntervalPrecision,
        "result_cast_type_udt_catalog" -> o.resultCastTypeUdtCatalog,
        "result_cast_type_udt_schema" -> o.resultCastTypeUdtSchema,
        "result_cast_type_udt_name" -> o.resultCastTypeUdtName,
        "result_cast_scope_catalog" -> o.resultCastScopeCatalog,
        "result_cast_scope_schema" -> o.resultCastScopeSchema,
        "result_cast_scope_name" -> o.resultCastScopeName,
        "result_cast_maximum_cardinality" -> o.resultCastMaximumCardinality,
        "result_cast_dtd_identifier" -> o.resultCastDtdIdentifier
      )
  
    override def reads(json: JsValue): JsResult[RoutinesViewRow] = {
      JsResult.fromTry(
        Try(
          RoutinesViewRow(
            specificCatalog = json.\("specific_catalog").toOption.map(_.as[SqlIdentifier]),
            specificSchema = json.\("specific_schema").toOption.map(_.as[SqlIdentifier]),
            specificName = json.\("specific_name").toOption.map(_.as[SqlIdentifier]),
            routineCatalog = json.\("routine_catalog").toOption.map(_.as[SqlIdentifier]),
            routineSchema = json.\("routine_schema").toOption.map(_.as[SqlIdentifier]),
            routineName = json.\("routine_name").toOption.map(_.as[SqlIdentifier]),
            routineType = json.\("routine_type").toOption.map(_.as[CharacterData]),
            moduleCatalog = json.\("module_catalog").toOption.map(_.as[SqlIdentifier]),
            moduleSchema = json.\("module_schema").toOption.map(_.as[SqlIdentifier]),
            moduleName = json.\("module_name").toOption.map(_.as[SqlIdentifier]),
            udtCatalog = json.\("udt_catalog").toOption.map(_.as[SqlIdentifier]),
            udtSchema = json.\("udt_schema").toOption.map(_.as[SqlIdentifier]),
            udtName = json.\("udt_name").toOption.map(_.as[SqlIdentifier]),
            dataType = json.\("data_type").toOption.map(_.as[CharacterData]),
            characterMaximumLength = json.\("character_maximum_length").toOption.map(_.as[CardinalNumber]),
            characterOctetLength = json.\("character_octet_length").toOption.map(_.as[CardinalNumber]),
            characterSetCatalog = json.\("character_set_catalog").toOption.map(_.as[SqlIdentifier]),
            characterSetSchema = json.\("character_set_schema").toOption.map(_.as[SqlIdentifier]),
            characterSetName = json.\("character_set_name").toOption.map(_.as[SqlIdentifier]),
            collationCatalog = json.\("collation_catalog").toOption.map(_.as[SqlIdentifier]),
            collationSchema = json.\("collation_schema").toOption.map(_.as[SqlIdentifier]),
            collationName = json.\("collation_name").toOption.map(_.as[SqlIdentifier]),
            numericPrecision = json.\("numeric_precision").toOption.map(_.as[CardinalNumber]),
            numericPrecisionRadix = json.\("numeric_precision_radix").toOption.map(_.as[CardinalNumber]),
            numericScale = json.\("numeric_scale").toOption.map(_.as[CardinalNumber]),
            datetimePrecision = json.\("datetime_precision").toOption.map(_.as[CardinalNumber]),
            intervalType = json.\("interval_type").toOption.map(_.as[CharacterData]),
            intervalPrecision = json.\("interval_precision").toOption.map(_.as[CardinalNumber]),
            typeUdtCatalog = json.\("type_udt_catalog").toOption.map(_.as[SqlIdentifier]),
            typeUdtSchema = json.\("type_udt_schema").toOption.map(_.as[SqlIdentifier]),
            typeUdtName = json.\("type_udt_name").toOption.map(_.as[SqlIdentifier]),
            scopeCatalog = json.\("scope_catalog").toOption.map(_.as[SqlIdentifier]),
            scopeSchema = json.\("scope_schema").toOption.map(_.as[SqlIdentifier]),
            scopeName = json.\("scope_name").toOption.map(_.as[SqlIdentifier]),
            maximumCardinality = json.\("maximum_cardinality").toOption.map(_.as[CardinalNumber]),
            dtdIdentifier = json.\("dtd_identifier").toOption.map(_.as[SqlIdentifier]),
            routineBody = json.\("routine_body").toOption.map(_.as[CharacterData]),
            routineDefinition = json.\("routine_definition").toOption.map(_.as[CharacterData]),
            externalName = json.\("external_name").toOption.map(_.as[CharacterData]),
            externalLanguage = json.\("external_language").toOption.map(_.as[CharacterData]),
            parameterStyle = json.\("parameter_style").toOption.map(_.as[CharacterData]),
            isDeterministic = json.\("is_deterministic").toOption.map(_.as[YesOrNo]),
            sqlDataAccess = json.\("sql_data_access").toOption.map(_.as[CharacterData]),
            isNullCall = json.\("is_null_call").toOption.map(_.as[YesOrNo]),
            sqlPath = json.\("sql_path").toOption.map(_.as[CharacterData]),
            schemaLevelRoutine = json.\("schema_level_routine").toOption.map(_.as[YesOrNo]),
            maxDynamicResultSets = json.\("max_dynamic_result_sets").toOption.map(_.as[CardinalNumber]),
            isUserDefinedCast = json.\("is_user_defined_cast").toOption.map(_.as[YesOrNo]),
            isImplicitlyInvocable = json.\("is_implicitly_invocable").toOption.map(_.as[YesOrNo]),
            securityType = json.\("security_type").toOption.map(_.as[CharacterData]),
            toSqlSpecificCatalog = json.\("to_sql_specific_catalog").toOption.map(_.as[SqlIdentifier]),
            toSqlSpecificSchema = json.\("to_sql_specific_schema").toOption.map(_.as[SqlIdentifier]),
            toSqlSpecificName = json.\("to_sql_specific_name").toOption.map(_.as[SqlIdentifier]),
            asLocator = json.\("as_locator").toOption.map(_.as[YesOrNo]),
            created = json.\("created").toOption.map(_.as[TimeStamp]),
            lastAltered = json.\("last_altered").toOption.map(_.as[TimeStamp]),
            newSavepointLevel = json.\("new_savepoint_level").toOption.map(_.as[YesOrNo]),
            isUdtDependent = json.\("is_udt_dependent").toOption.map(_.as[YesOrNo]),
            resultCastFromDataType = json.\("result_cast_from_data_type").toOption.map(_.as[CharacterData]),
            resultCastAsLocator = json.\("result_cast_as_locator").toOption.map(_.as[YesOrNo]),
            resultCastCharMaxLength = json.\("result_cast_char_max_length").toOption.map(_.as[CardinalNumber]),
            resultCastCharOctetLength = json.\("result_cast_char_octet_length").toOption.map(_.as[CardinalNumber]),
            resultCastCharSetCatalog = json.\("result_cast_char_set_catalog").toOption.map(_.as[SqlIdentifier]),
            resultCastCharSetSchema = json.\("result_cast_char_set_schema").toOption.map(_.as[SqlIdentifier]),
            resultCastCharSetName = json.\("result_cast_char_set_name").toOption.map(_.as[SqlIdentifier]),
            resultCastCollationCatalog = json.\("result_cast_collation_catalog").toOption.map(_.as[SqlIdentifier]),
            resultCastCollationSchema = json.\("result_cast_collation_schema").toOption.map(_.as[SqlIdentifier]),
            resultCastCollationName = json.\("result_cast_collation_name").toOption.map(_.as[SqlIdentifier]),
            resultCastNumericPrecision = json.\("result_cast_numeric_precision").toOption.map(_.as[CardinalNumber]),
            resultCastNumericPrecisionRadix = json.\("result_cast_numeric_precision_radix").toOption.map(_.as[CardinalNumber]),
            resultCastNumericScale = json.\("result_cast_numeric_scale").toOption.map(_.as[CardinalNumber]),
            resultCastDatetimePrecision = json.\("result_cast_datetime_precision").toOption.map(_.as[CardinalNumber]),
            resultCastIntervalType = json.\("result_cast_interval_type").toOption.map(_.as[CharacterData]),
            resultCastIntervalPrecision = json.\("result_cast_interval_precision").toOption.map(_.as[CardinalNumber]),
            resultCastTypeUdtCatalog = json.\("result_cast_type_udt_catalog").toOption.map(_.as[SqlIdentifier]),
            resultCastTypeUdtSchema = json.\("result_cast_type_udt_schema").toOption.map(_.as[SqlIdentifier]),
            resultCastTypeUdtName = json.\("result_cast_type_udt_name").toOption.map(_.as[SqlIdentifier]),
            resultCastScopeCatalog = json.\("result_cast_scope_catalog").toOption.map(_.as[SqlIdentifier]),
            resultCastScopeSchema = json.\("result_cast_scope_schema").toOption.map(_.as[SqlIdentifier]),
            resultCastScopeName = json.\("result_cast_scope_name").toOption.map(_.as[SqlIdentifier]),
            resultCastMaximumCardinality = json.\("result_cast_maximum_cardinality").toOption.map(_.as[CardinalNumber]),
            resultCastDtdIdentifier = json.\("result_cast_dtd_identifier").toOption.map(_.as[SqlIdentifier])
          )
        )
      )
    }
  }
}
