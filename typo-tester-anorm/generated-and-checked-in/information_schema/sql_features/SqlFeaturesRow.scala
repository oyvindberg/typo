/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package sql_features

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.YesOrNo
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class SqlFeaturesRow(
  featureId: Option[CharacterData],
  featureName: Option[CharacterData],
  subFeatureId: Option[CharacterData],
  subFeatureName: Option[CharacterData],
  isSupported: Option[YesOrNo],
  isVerifiedBy: Option[CharacterData],
  comments: Option[CharacterData]
)

object SqlFeaturesRow {
  def rowParser(idx: Int): RowParser[SqlFeaturesRow] =
    RowParser[SqlFeaturesRow] { row =>
      Success(
        SqlFeaturesRow(
          featureId = row[Option[CharacterData]](idx + 0),
          featureName = row[Option[CharacterData]](idx + 1),
          subFeatureId = row[Option[CharacterData]](idx + 2),
          subFeatureName = row[Option[CharacterData]](idx + 3),
          isSupported = row[Option[YesOrNo]](idx + 4),
          isVerifiedBy = row[Option[CharacterData]](idx + 5),
          comments = row[Option[CharacterData]](idx + 6)
        )
      )
    }
  implicit val oFormat: OFormat[SqlFeaturesRow] = new OFormat[SqlFeaturesRow]{
    override def writes(o: SqlFeaturesRow): JsObject =
      Json.obj(
        "feature_id" -> o.featureId,
        "feature_name" -> o.featureName,
        "sub_feature_id" -> o.subFeatureId,
        "sub_feature_name" -> o.subFeatureName,
        "is_supported" -> o.isSupported,
        "is_verified_by" -> o.isVerifiedBy,
        "comments" -> o.comments
      )
  
    override def reads(json: JsValue): JsResult[SqlFeaturesRow] = {
      JsResult.fromTry(
        Try(
          SqlFeaturesRow(
            featureId = json.\("feature_id").toOption.map(_.as[CharacterData]),
            featureName = json.\("feature_name").toOption.map(_.as[CharacterData]),
            subFeatureId = json.\("sub_feature_id").toOption.map(_.as[CharacterData]),
            subFeatureName = json.\("sub_feature_name").toOption.map(_.as[CharacterData]),
            isSupported = json.\("is_supported").toOption.map(_.as[YesOrNo]),
            isVerifiedBy = json.\("is_verified_by").toOption.map(_.as[CharacterData]),
            comments = json.\("comments").toOption.map(_.as[CharacterData])
          )
        )
      )
    }
  }
}
