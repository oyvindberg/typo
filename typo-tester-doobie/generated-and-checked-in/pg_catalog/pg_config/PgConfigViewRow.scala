/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_config

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgConfigViewRow(
  name: Option[String],
  setting: Option[String]
)

object PgConfigViewRow {
  implicit val decoder: Decoder[PgConfigViewRow] = Decoder.forProduct2[PgConfigViewRow, Option[String], Option[String]]("name", "setting")(PgConfigViewRow.apply)
  implicit val encoder: Encoder[PgConfigViewRow] = Encoder.forProduct2[PgConfigViewRow, Option[String], Option[String]]("name", "setting")(x => (x.name, x.setting))
  implicit val read: Read[PgConfigViewRow] = new Read[PgConfigViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgConfigViewRow(
      name = Get[String].unsafeGetNullable(rs, i + 0),
      setting = Get[String].unsafeGetNullable(rs, i + 1)
    )
  )
}
