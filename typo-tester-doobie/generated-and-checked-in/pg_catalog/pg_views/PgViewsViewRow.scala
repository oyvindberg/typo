/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_views

import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgViewsViewRow(
  schemaname: Option[String],
  viewname: Option[String],
  viewowner: Option[String],
  definition: Option[String]
)

object PgViewsViewRow {
  implicit val decoder: Decoder[PgViewsViewRow] = Decoder.forProduct4[PgViewsViewRow, Option[String], Option[String], Option[String], Option[String]]("schemaname", "viewname", "viewowner", "definition")(PgViewsViewRow.apply)(Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString))
  implicit val encoder: Encoder[PgViewsViewRow] = Encoder.forProduct4[PgViewsViewRow, Option[String], Option[String], Option[String], Option[String]]("schemaname", "viewname", "viewowner", "definition")(x => (x.schemaname, x.viewname, x.viewowner, x.definition))(Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString))
  implicit val read: Read[PgViewsViewRow] = new Read[PgViewsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgViewsViewRow(
      schemaname = Meta.StringMeta.get.unsafeGetNullable(rs, i + 0),
      viewname = Meta.StringMeta.get.unsafeGetNullable(rs, i + 1),
      viewowner = Meta.StringMeta.get.unsafeGetNullable(rs, i + 2),
      definition = Meta.StringMeta.get.unsafeGetNullable(rs, i + 3)
    )
  )
}
