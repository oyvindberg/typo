/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_init_privs

import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import fs2.Stream

object PgInitPrivsRepoImpl extends PgInitPrivsRepo {
  override def delete(compositeId: PgInitPrivsId): ConnectionIO[Boolean] = {
    sql"delete from pg_catalog.pg_init_privs where objoid = ${compositeId.objoid} AND classoid = ${compositeId.classoid} AND objsubid = ${compositeId.objsubid}".update.run.map(_ > 0)
  }
  override def insert(unsaved: PgInitPrivsRow): ConnectionIO[PgInitPrivsRow] = {
    sql"""insert into pg_catalog.pg_init_privs(objoid, classoid, objsubid, privtype, initprivs)
          values (${unsaved.objoid}::oid, ${unsaved.classoid}::oid, ${unsaved.objsubid}::int4, ${unsaved.privtype}::char, ${unsaved.initprivs}::_aclitem)
          returning objoid, classoid, objsubid, privtype, initprivs
       """.query[PgInitPrivsRow].unique
  }
  override def selectAll: Stream[ConnectionIO, PgInitPrivsRow] = {
    sql"select objoid, classoid, objsubid, privtype, initprivs from pg_catalog.pg_init_privs".query[PgInitPrivsRow].stream
  }
  override def selectById(compositeId: PgInitPrivsId): ConnectionIO[Option[PgInitPrivsRow]] = {
    sql"select objoid, classoid, objsubid, privtype, initprivs from pg_catalog.pg_init_privs where objoid = ${compositeId.objoid} AND classoid = ${compositeId.classoid} AND objsubid = ${compositeId.objsubid}".query[PgInitPrivsRow].option
  }
  override def update(row: PgInitPrivsRow): ConnectionIO[Boolean] = {
    val compositeId = row.compositeId
    sql"""update pg_catalog.pg_init_privs
          set privtype = ${row.privtype}::char,
              initprivs = ${row.initprivs}::_aclitem
          where objoid = ${compositeId.objoid} AND classoid = ${compositeId.classoid} AND objsubid = ${compositeId.objsubid}
       """
      .update
      .run
      .map(_ > 0)
  }
  override def upsert(unsaved: PgInitPrivsRow): ConnectionIO[PgInitPrivsRow] = {
    sql"""insert into pg_catalog.pg_init_privs(objoid, classoid, objsubid, privtype, initprivs)
          values (
            ${unsaved.objoid}::oid,
            ${unsaved.classoid}::oid,
            ${unsaved.objsubid}::int4,
            ${unsaved.privtype}::char,
            ${unsaved.initprivs}::_aclitem
          )
          on conflict (objoid, classoid, objsubid)
          do update set
            privtype = EXCLUDED.privtype,
            initprivs = EXCLUDED.initprivs
          returning objoid, classoid, objsubid, privtype, initprivs
       """.query[PgInitPrivsRow].unique
  }
}
