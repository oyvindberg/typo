/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_partitioned_table

import adventureworks.TypoInt2Vector
import adventureworks.TypoOidVector
import adventureworks.TypoPgNodeTree
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgPartitionedTableRow(
  partrelid: PgPartitionedTableId,
  partstrat: String,
  partnatts: Int,
  partdefid: /* oid */ Long,
  partattrs: TypoInt2Vector,
  partclass: TypoOidVector,
  partcollation: TypoOidVector,
  partexprs: Option[TypoPgNodeTree]
)

object PgPartitionedTableRow {
  implicit val decoder: Decoder[PgPartitionedTableRow] =
    (c: HCursor) =>
      for {
        partrelid <- c.downField("partrelid").as[PgPartitionedTableId]
        partstrat <- c.downField("partstrat").as[String]
        partnatts <- c.downField("partnatts").as[Int]
        partdefid <- c.downField("partdefid").as[/* oid */ Long]
        partattrs <- c.downField("partattrs").as[TypoInt2Vector]
        partclass <- c.downField("partclass").as[TypoOidVector]
        partcollation <- c.downField("partcollation").as[TypoOidVector]
        partexprs <- c.downField("partexprs").as[Option[TypoPgNodeTree]]
      } yield PgPartitionedTableRow(partrelid, partstrat, partnatts, partdefid, partattrs, partclass, partcollation, partexprs)
  implicit val encoder: Encoder[PgPartitionedTableRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "partrelid" := row.partrelid,
        "partstrat" := row.partstrat,
        "partnatts" := row.partnatts,
        "partdefid" := row.partdefid,
        "partattrs" := row.partattrs,
        "partclass" := row.partclass,
        "partcollation" := row.partcollation,
        "partexprs" := row.partexprs
      )}
  implicit val read: Read[PgPartitionedTableRow] =
    new Read[PgPartitionedTableRow](
      gets = List(
        (Get[PgPartitionedTableId], Nullability.NoNulls),
        (Get[String], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[TypoInt2Vector], Nullability.NoNulls),
        (Get[TypoOidVector], Nullability.NoNulls),
        (Get[TypoOidVector], Nullability.NoNulls),
        (Get[TypoPgNodeTree], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgPartitionedTableRow(
        partrelid = Get[PgPartitionedTableId].unsafeGetNonNullable(rs, i + 0),
        partstrat = Get[String].unsafeGetNonNullable(rs, i + 1),
        partnatts = Get[Int].unsafeGetNonNullable(rs, i + 2),
        partdefid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 3),
        partattrs = Get[TypoInt2Vector].unsafeGetNonNullable(rs, i + 4),
        partclass = Get[TypoOidVector].unsafeGetNonNullable(rs, i + 5),
        partcollation = Get[TypoOidVector].unsafeGetNonNullable(rs, i + 6),
        partexprs = Get[TypoPgNodeTree].unsafeGetNullable(rs, i + 7)
      )
    )
  

}
