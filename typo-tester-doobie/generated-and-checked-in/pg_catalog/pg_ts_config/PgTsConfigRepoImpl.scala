/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_ts_config

import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import fs2.Stream

object PgTsConfigRepoImpl extends PgTsConfigRepo {
  override def delete(oid: PgTsConfigId): ConnectionIO[Boolean] = {
    sql"delete from pg_catalog.pg_ts_config where oid = ${oid}".update.run.map(_ > 0)
  }
  override def insert(unsaved: PgTsConfigRow): ConnectionIO[PgTsConfigRow] = {
    sql"""insert into pg_catalog.pg_ts_config(oid, cfgname, cfgnamespace, cfgowner, cfgparser)
          values (${unsaved.oid}::oid, ${unsaved.cfgname}::name, ${unsaved.cfgnamespace}::oid, ${unsaved.cfgowner}::oid, ${unsaved.cfgparser}::oid)
          returning oid, cfgname, cfgnamespace, cfgowner, cfgparser
       """.query[PgTsConfigRow].unique
  }
  override def selectAll: Stream[ConnectionIO, PgTsConfigRow] = {
    sql"select oid, cfgname, cfgnamespace, cfgowner, cfgparser from pg_catalog.pg_ts_config".query[PgTsConfigRow].stream
  }
  override def selectById(oid: PgTsConfigId): ConnectionIO[Option[PgTsConfigRow]] = {
    sql"select oid, cfgname, cfgnamespace, cfgowner, cfgparser from pg_catalog.pg_ts_config where oid = ${oid}".query[PgTsConfigRow].option
  }
  override def selectByIds(oids: Array[PgTsConfigId]): Stream[ConnectionIO, PgTsConfigRow] = {
    sql"select oid, cfgname, cfgnamespace, cfgowner, cfgparser from pg_catalog.pg_ts_config where oid = ANY(${oids})".query[PgTsConfigRow].stream
  }
  override def update(row: PgTsConfigRow): ConnectionIO[Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_ts_config
          set cfgname = ${row.cfgname}::name,
              cfgnamespace = ${row.cfgnamespace}::oid,
              cfgowner = ${row.cfgowner}::oid,
              cfgparser = ${row.cfgparser}::oid
          where oid = ${oid}
       """
      .update
      .run
      .map(_ > 0)
  }
  override def upsert(unsaved: PgTsConfigRow): ConnectionIO[PgTsConfigRow] = {
    sql"""insert into pg_catalog.pg_ts_config(oid, cfgname, cfgnamespace, cfgowner, cfgparser)
          values (
            ${unsaved.oid}::oid,
            ${unsaved.cfgname}::name,
            ${unsaved.cfgnamespace}::oid,
            ${unsaved.cfgowner}::oid,
            ${unsaved.cfgparser}::oid
          )
          on conflict (oid)
          do update set
            cfgname = EXCLUDED.cfgname,
            cfgnamespace = EXCLUDED.cfgnamespace,
            cfgowner = EXCLUDED.cfgowner,
            cfgparser = EXCLUDED.cfgparser
          returning oid, cfgname, cfgnamespace, cfgowner, cfgparser
       """.query[PgTsConfigRow].unique
  }
}
