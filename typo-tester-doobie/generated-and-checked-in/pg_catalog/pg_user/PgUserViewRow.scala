/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_user

import adventureworks.TypoOffsetDateTime
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgUserViewRow(
  /** Points to [[pg_shadow.PgShadowViewRow.usename]] */
  usename: Option[String],
  /** Points to [[pg_shadow.PgShadowViewRow.usesysid]] */
  usesysid: Option[/* oid */ Long],
  /** Points to [[pg_shadow.PgShadowViewRow.usecreatedb]] */
  usecreatedb: Option[Boolean],
  /** Points to [[pg_shadow.PgShadowViewRow.usesuper]] */
  usesuper: Option[Boolean],
  /** Points to [[pg_shadow.PgShadowViewRow.userepl]] */
  userepl: Option[Boolean],
  /** Points to [[pg_shadow.PgShadowViewRow.usebypassrls]] */
  usebypassrls: Option[Boolean],
  passwd: Option[String],
  /** Points to [[pg_shadow.PgShadowViewRow.valuntil]] */
  valuntil: Option[TypoOffsetDateTime],
  /** Points to [[pg_shadow.PgShadowViewRow.useconfig]] */
  useconfig: Option[Array[String]]
)

object PgUserViewRow {
  implicit val decoder: Decoder[PgUserViewRow] = Decoder.forProduct9[PgUserViewRow, Option[String], Option[/* oid */ Long], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[String], Option[TypoOffsetDateTime], Option[Array[String]]]("usename", "usesysid", "usecreatedb", "usesuper", "userepl", "usebypassrls", "passwd", "valuntil", "useconfig")(PgUserViewRow.apply)
  implicit val encoder: Encoder[PgUserViewRow] = Encoder.forProduct9[PgUserViewRow, Option[String], Option[/* oid */ Long], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[String], Option[TypoOffsetDateTime], Option[Array[String]]]("usename", "usesysid", "usecreatedb", "usesuper", "userepl", "usebypassrls", "passwd", "valuntil", "useconfig")(x => (x.usename, x.usesysid, x.usecreatedb, x.usesuper, x.userepl, x.usebypassrls, x.passwd, x.valuntil, x.useconfig))
  implicit val read: Read[PgUserViewRow] = new Read[PgUserViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[/* oid */ Long], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[TypoOffsetDateTime], Nullability.Nullable),
      (Get[Array[String]], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgUserViewRow(
      usename = Get[String].unsafeGetNullable(rs, i + 0),
      usesysid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 1),
      usecreatedb = Get[Boolean].unsafeGetNullable(rs, i + 2),
      usesuper = Get[Boolean].unsafeGetNullable(rs, i + 3),
      userepl = Get[Boolean].unsafeGetNullable(rs, i + 4),
      usebypassrls = Get[Boolean].unsafeGetNullable(rs, i + 5),
      passwd = Get[String].unsafeGetNullable(rs, i + 6),
      valuntil = Get[TypoOffsetDateTime].unsafeGetNullable(rs, i + 7),
      useconfig = Get[Array[String]].unsafeGetNullable(rs, i + 8)
    )
  )
}
