/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_operator

import adventureworks.TypoRegproc
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgOperatorRow(
  oid: PgOperatorId,
  oprname: String,
  oprnamespace: /* oid */ Long,
  oprowner: /* oid */ Long,
  oprkind: String,
  oprcanmerge: Boolean,
  oprcanhash: Boolean,
  oprleft: /* oid */ Long,
  oprright: /* oid */ Long,
  oprresult: /* oid */ Long,
  oprcom: /* oid */ Long,
  oprnegate: /* oid */ Long,
  oprcode: TypoRegproc,
  oprrest: TypoRegproc,
  oprjoin: TypoRegproc
)

object PgOperatorRow {
  implicit val decoder: Decoder[PgOperatorRow] = Decoder.forProduct15[PgOperatorRow, PgOperatorId, String, /* oid */ Long, /* oid */ Long, String, Boolean, Boolean, /* oid */ Long, /* oid */ Long, /* oid */ Long, /* oid */ Long, /* oid */ Long, TypoRegproc, TypoRegproc, TypoRegproc]("oid", "oprname", "oprnamespace", "oprowner", "oprkind", "oprcanmerge", "oprcanhash", "oprleft", "oprright", "oprresult", "oprcom", "oprnegate", "oprcode", "oprrest", "oprjoin")(PgOperatorRow.apply)
  implicit val encoder: Encoder[PgOperatorRow] = Encoder.forProduct15[PgOperatorRow, PgOperatorId, String, /* oid */ Long, /* oid */ Long, String, Boolean, Boolean, /* oid */ Long, /* oid */ Long, /* oid */ Long, /* oid */ Long, /* oid */ Long, TypoRegproc, TypoRegproc, TypoRegproc]("oid", "oprname", "oprnamespace", "oprowner", "oprkind", "oprcanmerge", "oprcanhash", "oprleft", "oprright", "oprresult", "oprcom", "oprnegate", "oprcode", "oprrest", "oprjoin")(x => (x.oid, x.oprname, x.oprnamespace, x.oprowner, x.oprkind, x.oprcanmerge, x.oprcanhash, x.oprleft, x.oprright, x.oprresult, x.oprcom, x.oprnegate, x.oprcode, x.oprrest, x.oprjoin))
  implicit val read: Read[PgOperatorRow] = new Read[PgOperatorRow](
    gets = List(
      (Get[PgOperatorId], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[Boolean], Nullability.NoNulls),
      (Get[Boolean], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[TypoRegproc], Nullability.NoNulls),
      (Get[TypoRegproc], Nullability.NoNulls),
      (Get[TypoRegproc], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgOperatorRow(
      oid = Get[PgOperatorId].unsafeGetNonNullable(rs, i + 0),
      oprname = Get[String].unsafeGetNonNullable(rs, i + 1),
      oprnamespace = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2),
      oprowner = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 3),
      oprkind = Get[String].unsafeGetNonNullable(rs, i + 4),
      oprcanmerge = Get[Boolean].unsafeGetNonNullable(rs, i + 5),
      oprcanhash = Get[Boolean].unsafeGetNonNullable(rs, i + 6),
      oprleft = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 7),
      oprright = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 8),
      oprresult = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 9),
      oprcom = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 10),
      oprnegate = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 11),
      oprcode = Get[TypoRegproc].unsafeGetNonNullable(rs, i + 12),
      oprrest = Get[TypoRegproc].unsafeGetNonNullable(rs, i + 13),
      oprjoin = Get[TypoRegproc].unsafeGetNonNullable(rs, i + 14)
    )
  )
}
