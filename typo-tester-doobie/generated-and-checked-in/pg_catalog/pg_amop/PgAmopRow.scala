/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_amop

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgAmopRow(
  oid: PgAmopId,
  amopfamily: /* oid */ Long,
  amoplefttype: /* oid */ Long,
  amoprighttype: /* oid */ Long,
  amopstrategy: Int,
  amoppurpose: String,
  amopopr: /* oid */ Long,
  amopmethod: /* oid */ Long,
  amopsortfamily: /* oid */ Long
)

object PgAmopRow {
  implicit val decoder: Decoder[PgAmopRow] = Decoder.forProduct9[PgAmopRow, PgAmopId, /* oid */ Long, /* oid */ Long, /* oid */ Long, Int, String, /* oid */ Long, /* oid */ Long, /* oid */ Long]("oid", "amopfamily", "amoplefttype", "amoprighttype", "amopstrategy", "amoppurpose", "amopopr", "amopmethod", "amopsortfamily")(PgAmopRow.apply)
  implicit val encoder: Encoder[PgAmopRow] = Encoder.forProduct9[PgAmopRow, PgAmopId, /* oid */ Long, /* oid */ Long, /* oid */ Long, Int, String, /* oid */ Long, /* oid */ Long, /* oid */ Long]("oid", "amopfamily", "amoplefttype", "amoprighttype", "amopstrategy", "amoppurpose", "amopopr", "amopmethod", "amopsortfamily")(x => (x.oid, x.amopfamily, x.amoplefttype, x.amoprighttype, x.amopstrategy, x.amoppurpose, x.amopopr, x.amopmethod, x.amopsortfamily))
  implicit val read: Read[PgAmopRow] = new Read[PgAmopRow](
    gets = List(
      (Get[PgAmopId], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Int], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgAmopRow(
      oid = Get[PgAmopId].unsafeGetNonNullable(rs, i + 0),
      amopfamily = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      amoplefttype = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2),
      amoprighttype = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 3),
      amopstrategy = Get[Int].unsafeGetNonNullable(rs, i + 4),
      amoppurpose = Get[String].unsafeGetNonNullable(rs, i + 5),
      amopopr = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 6),
      amopmethod = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 7),
      amopsortfamily = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 8)
    )
  )
}
