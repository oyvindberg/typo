/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_timezone_names

import adventureworks.TypoInterval
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgTimezoneNamesViewRow(
  name: Option[String],
  abbrev: Option[String],
  utcOffset: Option[TypoInterval],
  isDst: Option[Boolean]
)

object PgTimezoneNamesViewRow {
  implicit val decoder: Decoder[PgTimezoneNamesViewRow] = Decoder.forProduct4[PgTimezoneNamesViewRow, Option[String], Option[String], Option[TypoInterval], Option[Boolean]]("name", "abbrev", "utc_offset", "is_dst")(PgTimezoneNamesViewRow.apply)
  implicit val encoder: Encoder[PgTimezoneNamesViewRow] = Encoder.forProduct4[PgTimezoneNamesViewRow, Option[String], Option[String], Option[TypoInterval], Option[Boolean]]("name", "abbrev", "utc_offset", "is_dst")(x => (x.name, x.abbrev, x.utcOffset, x.isDst))
  implicit val read: Read[PgTimezoneNamesViewRow] = new Read[PgTimezoneNamesViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[TypoInterval], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgTimezoneNamesViewRow(
      name = Get[String].unsafeGetNullable(rs, i + 0),
      abbrev = Get[String].unsafeGetNullable(rs, i + 1),
      utcOffset = Get[TypoInterval].unsafeGetNullable(rs, i + 2),
      isDst = Get[Boolean].unsafeGetNullable(rs, i + 3)
    )
  )
}
