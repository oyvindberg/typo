/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_attribute

import adventureworks.TypoAclItem
import adventureworks.TypoAnyArray
import doobie.free.connection.ConnectionIO
import doobie.syntax.SqlInterpolator.SingleFragment.fromWrite
import doobie.syntax.string.toSqlInterpolator
import doobie.util.Write
import doobie.util.meta.Meta
import fs2.Stream
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.SelectBuilderSql
import typo.dsl.UpdateBuilder

object PgAttributeRepoImpl extends PgAttributeRepo {
  override def delete(compositeId: PgAttributeId): ConnectionIO[Boolean] = {
    sql"delete from pg_catalog.pg_attribute where attrelid = ${fromWrite(compositeId.attrelid)(Write.fromPut(Meta.LongMeta.put))} AND attnum = ${fromWrite(compositeId.attnum)(Write.fromPut(Meta.IntMeta.put))}".update.run.map(_ > 0)
  }
  override def delete: DeleteBuilder[PgAttributeFields, PgAttributeRow] = {
    DeleteBuilder("pg_catalog.pg_attribute", PgAttributeFields)
  }
  override def insert(unsaved: PgAttributeRow): ConnectionIO[PgAttributeRow] = {
    sql"""insert into pg_catalog.pg_attribute(attrelid, attname, atttypid, attstattarget, attlen, attnum, attndims, attcacheoff, atttypmod, attbyval, attalign, attstorage, attcompression, attnotnull, atthasdef, atthasmissing, attidentity, attgenerated, attisdropped, attislocal, attinhcount, attcollation, attacl, attoptions, attfdwoptions, attmissingval)
          values (${fromWrite(unsaved.attrelid)(Write.fromPut(Meta.LongMeta.put))}::oid, ${fromWrite(unsaved.attname)(Write.fromPut(Meta.StringMeta.put))}::name, ${fromWrite(unsaved.atttypid)(Write.fromPut(Meta.LongMeta.put))}::oid, ${fromWrite(unsaved.attstattarget)(Write.fromPut(Meta.IntMeta.put))}::int4, ${fromWrite(unsaved.attlen)(Write.fromPut(Meta.IntMeta.put))}::int2, ${fromWrite(unsaved.attnum)(Write.fromPut(Meta.IntMeta.put))}::int2, ${fromWrite(unsaved.attndims)(Write.fromPut(Meta.IntMeta.put))}::int4, ${fromWrite(unsaved.attcacheoff)(Write.fromPut(Meta.IntMeta.put))}::int4, ${fromWrite(unsaved.atttypmod)(Write.fromPut(Meta.IntMeta.put))}::int4, ${fromWrite(unsaved.attbyval)(Write.fromPut(Meta.BooleanMeta.put))}, ${fromWrite(unsaved.attalign)(Write.fromPut(Meta.StringMeta.put))}::char, ${fromWrite(unsaved.attstorage)(Write.fromPut(Meta.StringMeta.put))}::char, ${fromWrite(unsaved.attcompression)(Write.fromPut(Meta.StringMeta.put))}::char, ${fromWrite(unsaved.attnotnull)(Write.fromPut(Meta.BooleanMeta.put))}, ${fromWrite(unsaved.atthasdef)(Write.fromPut(Meta.BooleanMeta.put))}, ${fromWrite(unsaved.atthasmissing)(Write.fromPut(Meta.BooleanMeta.put))}, ${fromWrite(unsaved.attidentity)(Write.fromPut(Meta.StringMeta.put))}::char, ${fromWrite(unsaved.attgenerated)(Write.fromPut(Meta.StringMeta.put))}::char, ${fromWrite(unsaved.attisdropped)(Write.fromPut(Meta.BooleanMeta.put))}, ${fromWrite(unsaved.attislocal)(Write.fromPut(Meta.BooleanMeta.put))}, ${fromWrite(unsaved.attinhcount)(Write.fromPut(Meta.IntMeta.put))}::int4, ${fromWrite(unsaved.attcollation)(Write.fromPut(Meta.LongMeta.put))}::oid, ${fromWrite(unsaved.attacl)(Write.fromPutOption(TypoAclItem.arrayPut))}::_aclitem, ${fromWrite(unsaved.attoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text, ${fromWrite(unsaved.attfdwoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text, ${fromWrite(unsaved.attmissingval)(Write.fromPutOption(TypoAnyArray.put))}::anyarray)
          returning attrelid, attname, atttypid, attstattarget, attlen, attnum, attndims, attcacheoff, atttypmod, attbyval, attalign, attstorage, attcompression, attnotnull, atthasdef, atthasmissing, attidentity, attgenerated, attisdropped, attislocal, attinhcount, attcollation, attacl, attoptions, attfdwoptions, attmissingval
       """.query(PgAttributeRow.read).unique
  }
  override def select: SelectBuilder[PgAttributeFields, PgAttributeRow] = {
    SelectBuilderSql("pg_catalog.pg_attribute", PgAttributeFields, PgAttributeRow.read)
  }
  override def selectAll: Stream[ConnectionIO, PgAttributeRow] = {
    sql"select attrelid, attname, atttypid, attstattarget, attlen, attnum, attndims, attcacheoff, atttypmod, attbyval, attalign, attstorage, attcompression, attnotnull, atthasdef, atthasmissing, attidentity, attgenerated, attisdropped, attislocal, attinhcount, attcollation, attacl, attoptions, attfdwoptions, attmissingval from pg_catalog.pg_attribute".query(PgAttributeRow.read).stream
  }
  override def selectById(compositeId: PgAttributeId): ConnectionIO[Option[PgAttributeRow]] = {
    sql"select attrelid, attname, atttypid, attstattarget, attlen, attnum, attndims, attcacheoff, atttypmod, attbyval, attalign, attstorage, attcompression, attnotnull, atthasdef, atthasmissing, attidentity, attgenerated, attisdropped, attislocal, attinhcount, attcollation, attacl, attoptions, attfdwoptions, attmissingval from pg_catalog.pg_attribute where attrelid = ${fromWrite(compositeId.attrelid)(Write.fromPut(Meta.LongMeta.put))} AND attnum = ${fromWrite(compositeId.attnum)(Write.fromPut(Meta.IntMeta.put))}".query(PgAttributeRow.read).option
  }
  override def update(row: PgAttributeRow): ConnectionIO[Boolean] = {
    val compositeId = row.compositeId
    sql"""update pg_catalog.pg_attribute
          set attname = ${fromWrite(row.attname)(Write.fromPut(Meta.StringMeta.put))}::name,
              atttypid = ${fromWrite(row.atttypid)(Write.fromPut(Meta.LongMeta.put))}::oid,
              attstattarget = ${fromWrite(row.attstattarget)(Write.fromPut(Meta.IntMeta.put))}::int4,
              attlen = ${fromWrite(row.attlen)(Write.fromPut(Meta.IntMeta.put))}::int2,
              attndims = ${fromWrite(row.attndims)(Write.fromPut(Meta.IntMeta.put))}::int4,
              attcacheoff = ${fromWrite(row.attcacheoff)(Write.fromPut(Meta.IntMeta.put))}::int4,
              atttypmod = ${fromWrite(row.atttypmod)(Write.fromPut(Meta.IntMeta.put))}::int4,
              attbyval = ${fromWrite(row.attbyval)(Write.fromPut(Meta.BooleanMeta.put))},
              attalign = ${fromWrite(row.attalign)(Write.fromPut(Meta.StringMeta.put))}::char,
              attstorage = ${fromWrite(row.attstorage)(Write.fromPut(Meta.StringMeta.put))}::char,
              attcompression = ${fromWrite(row.attcompression)(Write.fromPut(Meta.StringMeta.put))}::char,
              attnotnull = ${fromWrite(row.attnotnull)(Write.fromPut(Meta.BooleanMeta.put))},
              atthasdef = ${fromWrite(row.atthasdef)(Write.fromPut(Meta.BooleanMeta.put))},
              atthasmissing = ${fromWrite(row.atthasmissing)(Write.fromPut(Meta.BooleanMeta.put))},
              attidentity = ${fromWrite(row.attidentity)(Write.fromPut(Meta.StringMeta.put))}::char,
              attgenerated = ${fromWrite(row.attgenerated)(Write.fromPut(Meta.StringMeta.put))}::char,
              attisdropped = ${fromWrite(row.attisdropped)(Write.fromPut(Meta.BooleanMeta.put))},
              attislocal = ${fromWrite(row.attislocal)(Write.fromPut(Meta.BooleanMeta.put))},
              attinhcount = ${fromWrite(row.attinhcount)(Write.fromPut(Meta.IntMeta.put))}::int4,
              attcollation = ${fromWrite(row.attcollation)(Write.fromPut(Meta.LongMeta.put))}::oid,
              attacl = ${fromWrite(row.attacl)(Write.fromPutOption(TypoAclItem.arrayPut))}::_aclitem,
              attoptions = ${fromWrite(row.attoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text,
              attfdwoptions = ${fromWrite(row.attfdwoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text,
              attmissingval = ${fromWrite(row.attmissingval)(Write.fromPutOption(TypoAnyArray.put))}::anyarray
          where attrelid = ${fromWrite(compositeId.attrelid)(Write.fromPut(Meta.LongMeta.put))} AND attnum = ${fromWrite(compositeId.attnum)(Write.fromPut(Meta.IntMeta.put))}"""
      .update
      .run
      .map(_ > 0)
  }
  override def update: UpdateBuilder[PgAttributeFields, PgAttributeRow] = {
    UpdateBuilder("pg_catalog.pg_attribute", PgAttributeFields, PgAttributeRow.read)
  }
  override def upsert(unsaved: PgAttributeRow): ConnectionIO[PgAttributeRow] = {
    sql"""insert into pg_catalog.pg_attribute(attrelid, attname, atttypid, attstattarget, attlen, attnum, attndims, attcacheoff, atttypmod, attbyval, attalign, attstorage, attcompression, attnotnull, atthasdef, atthasmissing, attidentity, attgenerated, attisdropped, attislocal, attinhcount, attcollation, attacl, attoptions, attfdwoptions, attmissingval)
          values (
            ${fromWrite(unsaved.attrelid)(Write.fromPut(Meta.LongMeta.put))}::oid,
            ${fromWrite(unsaved.attname)(Write.fromPut(Meta.StringMeta.put))}::name,
            ${fromWrite(unsaved.atttypid)(Write.fromPut(Meta.LongMeta.put))}::oid,
            ${fromWrite(unsaved.attstattarget)(Write.fromPut(Meta.IntMeta.put))}::int4,
            ${fromWrite(unsaved.attlen)(Write.fromPut(Meta.IntMeta.put))}::int2,
            ${fromWrite(unsaved.attnum)(Write.fromPut(Meta.IntMeta.put))}::int2,
            ${fromWrite(unsaved.attndims)(Write.fromPut(Meta.IntMeta.put))}::int4,
            ${fromWrite(unsaved.attcacheoff)(Write.fromPut(Meta.IntMeta.put))}::int4,
            ${fromWrite(unsaved.atttypmod)(Write.fromPut(Meta.IntMeta.put))}::int4,
            ${fromWrite(unsaved.attbyval)(Write.fromPut(Meta.BooleanMeta.put))},
            ${fromWrite(unsaved.attalign)(Write.fromPut(Meta.StringMeta.put))}::char,
            ${fromWrite(unsaved.attstorage)(Write.fromPut(Meta.StringMeta.put))}::char,
            ${fromWrite(unsaved.attcompression)(Write.fromPut(Meta.StringMeta.put))}::char,
            ${fromWrite(unsaved.attnotnull)(Write.fromPut(Meta.BooleanMeta.put))},
            ${fromWrite(unsaved.atthasdef)(Write.fromPut(Meta.BooleanMeta.put))},
            ${fromWrite(unsaved.atthasmissing)(Write.fromPut(Meta.BooleanMeta.put))},
            ${fromWrite(unsaved.attidentity)(Write.fromPut(Meta.StringMeta.put))}::char,
            ${fromWrite(unsaved.attgenerated)(Write.fromPut(Meta.StringMeta.put))}::char,
            ${fromWrite(unsaved.attisdropped)(Write.fromPut(Meta.BooleanMeta.put))},
            ${fromWrite(unsaved.attislocal)(Write.fromPut(Meta.BooleanMeta.put))},
            ${fromWrite(unsaved.attinhcount)(Write.fromPut(Meta.IntMeta.put))}::int4,
            ${fromWrite(unsaved.attcollation)(Write.fromPut(Meta.LongMeta.put))}::oid,
            ${fromWrite(unsaved.attacl)(Write.fromPutOption(TypoAclItem.arrayPut))}::_aclitem,
            ${fromWrite(unsaved.attoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text,
            ${fromWrite(unsaved.attfdwoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text,
            ${fromWrite(unsaved.attmissingval)(Write.fromPutOption(TypoAnyArray.put))}::anyarray
          )
          on conflict (attrelid, attnum)
          do update set
            attname = EXCLUDED.attname,
            atttypid = EXCLUDED.atttypid,
            attstattarget = EXCLUDED.attstattarget,
            attlen = EXCLUDED.attlen,
            attndims = EXCLUDED.attndims,
            attcacheoff = EXCLUDED.attcacheoff,
            atttypmod = EXCLUDED.atttypmod,
            attbyval = EXCLUDED.attbyval,
            attalign = EXCLUDED.attalign,
            attstorage = EXCLUDED.attstorage,
            attcompression = EXCLUDED.attcompression,
            attnotnull = EXCLUDED.attnotnull,
            atthasdef = EXCLUDED.atthasdef,
            atthasmissing = EXCLUDED.atthasmissing,
            attidentity = EXCLUDED.attidentity,
            attgenerated = EXCLUDED.attgenerated,
            attisdropped = EXCLUDED.attisdropped,
            attislocal = EXCLUDED.attislocal,
            attinhcount = EXCLUDED.attinhcount,
            attcollation = EXCLUDED.attcollation,
            attacl = EXCLUDED.attacl,
            attoptions = EXCLUDED.attoptions,
            attfdwoptions = EXCLUDED.attfdwoptions,
            attmissingval = EXCLUDED.attmissingval
          returning attrelid, attname, atttypid, attstattarget, attlen, attnum, attndims, attcacheoff, atttypmod, attbyval, attalign, attstorage, attcompression, attnotnull, atthasdef, atthasmissing, attidentity, attgenerated, attisdropped, attislocal, attinhcount, attcollation, attacl, attoptions, attfdwoptions, attmissingval
       """.query(PgAttributeRow.read).unique
  }
}
