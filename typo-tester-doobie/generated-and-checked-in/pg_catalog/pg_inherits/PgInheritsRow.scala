/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_inherits

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgInheritsRow(
  inhrelid: /* oid */ Long,
  inhparent: /* oid */ Long,
  inhseqno: Int,
  inhdetachpending: Boolean
){
   val compositeId: PgInheritsId = PgInheritsId(inhrelid, inhseqno)
 }

object PgInheritsRow {
  implicit val decoder: Decoder[PgInheritsRow] = Decoder.forProduct4[PgInheritsRow, /* oid */ Long, /* oid */ Long, Int, Boolean]("inhrelid", "inhparent", "inhseqno", "inhdetachpending")(PgInheritsRow.apply)
  implicit val encoder: Encoder[PgInheritsRow] = Encoder.forProduct4[PgInheritsRow, /* oid */ Long, /* oid */ Long, Int, Boolean]("inhrelid", "inhparent", "inhseqno", "inhdetachpending")(x => (x.inhrelid, x.inhparent, x.inhseqno, x.inhdetachpending))
  implicit val read: Read[PgInheritsRow] = new Read[PgInheritsRow](
    gets = List(
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Int], Nullability.NoNulls),
      (Get[Boolean], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgInheritsRow(
      inhrelid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 0),
      inhparent = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      inhseqno = Get[Int].unsafeGetNonNullable(rs, i + 2),
      inhdetachpending = Get[Boolean].unsafeGetNonNullable(rs, i + 3)
    )
  )
}
