/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_xact_sys_tables

import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class PgStatXactSysTablesViewStructure[Row](val prefix: Option[String], val extract: Row => PgStatXactSysTablesViewRow, val merge: (Row, PgStatXactSysTablesViewRow) => Row)
  extends Relation[PgStatXactSysTablesViewFields, PgStatXactSysTablesViewRow, Row]
    with PgStatXactSysTablesViewFields[Row] { outer =>

  override val relid = new OptField[/* oid */ Long, Row](prefix, "relid", None, Some("oid"))(x => extract(x).relid, (row, value) => merge(row, extract(row).copy(relid = value)))
  override val schemaname = new OptField[String, Row](prefix, "schemaname", None, Some("name"))(x => extract(x).schemaname, (row, value) => merge(row, extract(row).copy(schemaname = value)))
  override val relname = new OptField[String, Row](prefix, "relname", None, Some("name"))(x => extract(x).relname, (row, value) => merge(row, extract(row).copy(relname = value)))
  override val seqScan = new OptField[Long, Row](prefix, "seq_scan", None, Some("int8"))(x => extract(x).seqScan, (row, value) => merge(row, extract(row).copy(seqScan = value)))
  override val seqTupRead = new OptField[Long, Row](prefix, "seq_tup_read", None, Some("int8"))(x => extract(x).seqTupRead, (row, value) => merge(row, extract(row).copy(seqTupRead = value)))
  override val idxScan = new OptField[Long, Row](prefix, "idx_scan", None, Some("int8"))(x => extract(x).idxScan, (row, value) => merge(row, extract(row).copy(idxScan = value)))
  override val idxTupFetch = new OptField[Long, Row](prefix, "idx_tup_fetch", None, Some("int8"))(x => extract(x).idxTupFetch, (row, value) => merge(row, extract(row).copy(idxTupFetch = value)))
  override val nTupIns = new OptField[Long, Row](prefix, "n_tup_ins", None, Some("int8"))(x => extract(x).nTupIns, (row, value) => merge(row, extract(row).copy(nTupIns = value)))
  override val nTupUpd = new OptField[Long, Row](prefix, "n_tup_upd", None, Some("int8"))(x => extract(x).nTupUpd, (row, value) => merge(row, extract(row).copy(nTupUpd = value)))
  override val nTupDel = new OptField[Long, Row](prefix, "n_tup_del", None, Some("int8"))(x => extract(x).nTupDel, (row, value) => merge(row, extract(row).copy(nTupDel = value)))
  override val nTupHotUpd = new OptField[Long, Row](prefix, "n_tup_hot_upd", None, Some("int8"))(x => extract(x).nTupHotUpd, (row, value) => merge(row, extract(row).copy(nTupHotUpd = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](relid, schemaname, relname, seqScan, seqTupRead, idxScan, idxTupFetch, nTupIns, nTupUpd, nTupDel, nTupHotUpd)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => PgStatXactSysTablesViewRow, merge: (NewRow, PgStatXactSysTablesViewRow) => NewRow): PgStatXactSysTablesViewStructure[NewRow] =
    new PgStatXactSysTablesViewStructure(prefix, extract, merge)
}
