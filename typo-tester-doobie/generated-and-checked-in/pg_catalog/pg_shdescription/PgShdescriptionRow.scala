/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_shdescription

import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgShdescriptionRow(
  objoid: /* oid */ Long,
  classoid: /* oid */ Long,
  description: String
){
   val compositeId: PgShdescriptionId = PgShdescriptionId(objoid, classoid)
 }

object PgShdescriptionRow {
  implicit val decoder: Decoder[PgShdescriptionRow] =
    (c: HCursor) =>
      for {
        objoid <- c.downField("objoid").as[/* oid */ Long]
        classoid <- c.downField("classoid").as[/* oid */ Long]
        description <- c.downField("description").as[String]
      } yield PgShdescriptionRow(objoid, classoid, description)
  implicit val encoder: Encoder[PgShdescriptionRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "objoid" := row.objoid,
        "classoid" := row.classoid,
        "description" := row.description
      )}
  implicit val read: Read[PgShdescriptionRow] =
    new Read[PgShdescriptionRow](
      gets = List(
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[String], Nullability.NoNulls)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgShdescriptionRow(
        objoid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 0),
        classoid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
        description = Get[String].unsafeGetNonNullable(rs, i + 2)
      )
    )
  

}
