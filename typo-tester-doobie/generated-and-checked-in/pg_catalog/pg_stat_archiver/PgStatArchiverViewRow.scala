/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_archiver

import adventureworks.TypoOffsetDateTime
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatArchiverViewRow(
  archivedCount: Option[Long],
  lastArchivedWal: Option[String],
  lastArchivedTime: Option[TypoOffsetDateTime],
  failedCount: Option[Long],
  lastFailedWal: Option[String],
  lastFailedTime: Option[TypoOffsetDateTime],
  statsReset: Option[TypoOffsetDateTime]
)

object PgStatArchiverViewRow {
  implicit val decoder: Decoder[PgStatArchiverViewRow] = Decoder.forProduct7[PgStatArchiverViewRow, Option[Long], Option[String], Option[TypoOffsetDateTime], Option[Long], Option[String], Option[TypoOffsetDateTime], Option[TypoOffsetDateTime]]("archived_count", "last_archived_wal", "last_archived_time", "failed_count", "last_failed_wal", "last_failed_time", "stats_reset")(PgStatArchiverViewRow.apply)
  implicit val encoder: Encoder[PgStatArchiverViewRow] = Encoder.forProduct7[PgStatArchiverViewRow, Option[Long], Option[String], Option[TypoOffsetDateTime], Option[Long], Option[String], Option[TypoOffsetDateTime], Option[TypoOffsetDateTime]]("archived_count", "last_archived_wal", "last_archived_time", "failed_count", "last_failed_wal", "last_failed_time", "stats_reset")(x => (x.archivedCount, x.lastArchivedWal, x.lastArchivedTime, x.failedCount, x.lastFailedWal, x.lastFailedTime, x.statsReset))
  implicit val read: Read[PgStatArchiverViewRow] = new Read[PgStatArchiverViewRow](
    gets = List(
      (Get[Long], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[TypoOffsetDateTime], Nullability.Nullable),
      (Get[Long], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[TypoOffsetDateTime], Nullability.Nullable),
      (Get[TypoOffsetDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatArchiverViewRow(
      archivedCount = Get[Long].unsafeGetNullable(rs, i + 0),
      lastArchivedWal = Get[String].unsafeGetNullable(rs, i + 1),
      lastArchivedTime = Get[TypoOffsetDateTime].unsafeGetNullable(rs, i + 2),
      failedCount = Get[Long].unsafeGetNullable(rs, i + 3),
      lastFailedWal = Get[String].unsafeGetNullable(rs, i + 4),
      lastFailedTime = Get[TypoOffsetDateTime].unsafeGetNullable(rs, i + 5),
      statsReset = Get[TypoOffsetDateTime].unsafeGetNullable(rs, i + 6)
    )
  )
}
