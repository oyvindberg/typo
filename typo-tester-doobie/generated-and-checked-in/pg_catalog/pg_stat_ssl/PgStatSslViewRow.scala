/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_ssl

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatSslViewRow(
  pid: Option[Int],
  ssl: Option[Boolean],
  version: Option[String],
  cipher: Option[String],
  bits: Option[Int],
  clientDn: Option[String],
  clientSerial: Option[BigDecimal],
  issuerDn: Option[String]
)

object PgStatSslViewRow {
  implicit val decoder: Decoder[PgStatSslViewRow] = Decoder.forProduct8[PgStatSslViewRow, Option[Int], Option[Boolean], Option[String], Option[String], Option[Int], Option[String], Option[BigDecimal], Option[String]]("pid", "ssl", "version", "cipher", "bits", "client_dn", "client_serial", "issuer_dn")(PgStatSslViewRow.apply)
  implicit val encoder: Encoder[PgStatSslViewRow] = Encoder.forProduct8[PgStatSslViewRow, Option[Int], Option[Boolean], Option[String], Option[String], Option[Int], Option[String], Option[BigDecimal], Option[String]]("pid", "ssl", "version", "cipher", "bits", "client_dn", "client_serial", "issuer_dn")(x => (x.pid, x.ssl, x.version, x.cipher, x.bits, x.clientDn, x.clientSerial, x.issuerDn))
  implicit val read: Read[PgStatSslViewRow] = new Read[PgStatSslViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[BigDecimal], Nullability.Nullable),
      (Get[String], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatSslViewRow(
      pid = Get[Int].unsafeGetNullable(rs, i + 0),
      ssl = Get[Boolean].unsafeGetNullable(rs, i + 1),
      version = Get[String].unsafeGetNullable(rs, i + 2),
      cipher = Get[String].unsafeGetNullable(rs, i + 3),
      bits = Get[Int].unsafeGetNullable(rs, i + 4),
      clientDn = Get[String].unsafeGetNullable(rs, i + 5),
      clientSerial = Get[BigDecimal].unsafeGetNullable(rs, i + 6),
      issuerDn = Get[String].unsafeGetNullable(rs, i + 7)
    )
  )
}
