/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_subscription

import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet
import java.time.OffsetDateTime

case class PgStatSubscriptionViewRow(
  subid: Option[/* oid */ Long],
  subname: Option[String],
  pid: Option[Int],
  relid: Option[/* oid */ Long],
  receivedLsn: Option[/* pg_lsn */ Long],
  lastMsgSendTime: Option[OffsetDateTime],
  lastMsgReceiptTime: Option[OffsetDateTime],
  latestEndLsn: Option[/* pg_lsn */ Long],
  latestEndTime: Option[OffsetDateTime]
)

object PgStatSubscriptionViewRow {
  implicit val decoder: Decoder[PgStatSubscriptionViewRow] =
    (c: HCursor) =>
      for {
        subid <- c.downField("subid").as[Option[/* oid */ Long]]
        subname <- c.downField("subname").as[Option[String]]
        pid <- c.downField("pid").as[Option[Int]]
        relid <- c.downField("relid").as[Option[/* oid */ Long]]
        receivedLsn <- c.downField("received_lsn").as[Option[/* pg_lsn */ Long]]
        lastMsgSendTime <- c.downField("last_msg_send_time").as[Option[OffsetDateTime]]
        lastMsgReceiptTime <- c.downField("last_msg_receipt_time").as[Option[OffsetDateTime]]
        latestEndLsn <- c.downField("latest_end_lsn").as[Option[/* pg_lsn */ Long]]
        latestEndTime <- c.downField("latest_end_time").as[Option[OffsetDateTime]]
      } yield PgStatSubscriptionViewRow(subid, subname, pid, relid, receivedLsn, lastMsgSendTime, lastMsgReceiptTime, latestEndLsn, latestEndTime)
  implicit val encoder: Encoder[PgStatSubscriptionViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "subid" := row.subid,
        "subname" := row.subname,
        "pid" := row.pid,
        "relid" := row.relid,
        "received_lsn" := row.receivedLsn,
        "last_msg_send_time" := row.lastMsgSendTime,
        "last_msg_receipt_time" := row.lastMsgReceiptTime,
        "latest_end_lsn" := row.latestEndLsn,
        "latest_end_time" := row.latestEndTime
      )}
  implicit val read: Read[PgStatSubscriptionViewRow] =
    new Read[PgStatSubscriptionViewRow](
      gets = List(
        (Get[/* oid */ Long], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[/* oid */ Long], Nullability.Nullable),
        (Get[/* pg_lsn */ Long], Nullability.Nullable),
        (Get[OffsetDateTime], Nullability.Nullable),
        (Get[OffsetDateTime], Nullability.Nullable),
        (Get[/* pg_lsn */ Long], Nullability.Nullable),
        (Get[OffsetDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgStatSubscriptionViewRow(
        subid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 0),
        subname = Get[String].unsafeGetNullable(rs, i + 1),
        pid = Get[Int].unsafeGetNullable(rs, i + 2),
        relid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 3),
        receivedLsn = Get[/* pg_lsn */ Long].unsafeGetNullable(rs, i + 4),
        lastMsgSendTime = Get[OffsetDateTime].unsafeGetNullable(rs, i + 5),
        lastMsgReceiptTime = Get[OffsetDateTime].unsafeGetNullable(rs, i + 6),
        latestEndLsn = Get[/* pg_lsn */ Long].unsafeGetNullable(rs, i + 7),
        latestEndTime = Get[OffsetDateTime].unsafeGetNullable(rs, i + 8)
      )
    )
  

}
