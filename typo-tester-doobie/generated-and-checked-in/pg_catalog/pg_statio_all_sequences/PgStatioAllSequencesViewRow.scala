/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statio_all_sequences

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatioAllSequencesViewRow(
  relid: Option[/* oid */ Long],
  schemaname: Option[String],
  relname: Option[String],
  blksRead: Option[Long],
  blksHit: Option[Long]
)

object PgStatioAllSequencesViewRow {
  implicit val decoder: Decoder[PgStatioAllSequencesViewRow] = Decoder.forProduct5[PgStatioAllSequencesViewRow, Option[/* oid */ Long], Option[String], Option[String], Option[Long], Option[Long]]("relid", "schemaname", "relname", "blks_read", "blks_hit")(PgStatioAllSequencesViewRow.apply)
  implicit val encoder: Encoder[PgStatioAllSequencesViewRow] = Encoder.forProduct5[PgStatioAllSequencesViewRow, Option[/* oid */ Long], Option[String], Option[String], Option[Long], Option[Long]]("relid", "schemaname", "relname", "blks_read", "blks_hit")(x => (x.relid, x.schemaname, x.relname, x.blksRead, x.blksHit))
  implicit val read: Read[PgStatioAllSequencesViewRow] = new Read[PgStatioAllSequencesViewRow](
    gets = List(
      (Get[/* oid */ Long], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Long], Nullability.Nullable),
      (Get[Long], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatioAllSequencesViewRow(
      relid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 0),
      schemaname = Get[String].unsafeGetNullable(rs, i + 1),
      relname = Get[String].unsafeGetNullable(rs, i + 2),
      blksRead = Get[Long].unsafeGetNullable(rs, i + 3),
      blksHit = Get[Long].unsafeGetNullable(rs, i + 4)
    )
  )
}
