/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_indexes

import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgIndexesViewRow(
  schemaname: Option[String],
  tablename: Option[String],
  indexname: Option[String],
  tablespace: Option[String],
  indexdef: Option[String]
)

object PgIndexesViewRow {
  implicit val decoder: Decoder[PgIndexesViewRow] =
    (c: HCursor) =>
      for {
        schemaname <- c.downField("schemaname").as[Option[String]]
        tablename <- c.downField("tablename").as[Option[String]]
        indexname <- c.downField("indexname").as[Option[String]]
        tablespace <- c.downField("tablespace").as[Option[String]]
        indexdef <- c.downField("indexdef").as[Option[String]]
      } yield PgIndexesViewRow(schemaname, tablename, indexname, tablespace, indexdef)
  implicit val encoder: Encoder[PgIndexesViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "schemaname" := row.schemaname,
        "tablename" := row.tablename,
        "indexname" := row.indexname,
        "tablespace" := row.tablespace,
        "indexdef" := row.indexdef
      )}
  implicit val read: Read[PgIndexesViewRow] =
    new Read[PgIndexesViewRow](
      gets = List(
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgIndexesViewRow(
        schemaname = Get[String].unsafeGetNullable(rs, i + 0),
        tablename = Get[String].unsafeGetNullable(rs, i + 1),
        indexname = Get[String].unsafeGetNullable(rs, i + 2),
        tablespace = Get[String].unsafeGetNullable(rs, i + 3),
        indexdef = Get[String].unsafeGetNullable(rs, i + 4)
      )
    )
  

}
