/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_namespace

import adventureworks.TypoAclItem
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgNamespaceRow(
  oid: PgNamespaceId,
  nspname: String,
  nspowner: /* oid */ Long,
  nspacl: Option[Array[TypoAclItem]]
)

object PgNamespaceRow {
  implicit val decoder: Decoder[PgNamespaceRow] = Decoder.forProduct4[PgNamespaceRow, PgNamespaceId, String, /* oid */ Long, Option[Array[TypoAclItem]]]("oid", "nspname", "nspowner", "nspacl")(PgNamespaceRow.apply)
  implicit val encoder: Encoder[PgNamespaceRow] = Encoder.forProduct4[PgNamespaceRow, PgNamespaceId, String, /* oid */ Long, Option[Array[TypoAclItem]]]("oid", "nspname", "nspowner", "nspacl")(x => (x.oid, x.nspname, x.nspowner, x.nspacl))
  implicit val read: Read[PgNamespaceRow] = new Read[PgNamespaceRow](
    gets = List(
      (Get[PgNamespaceId], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Array[TypoAclItem]], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgNamespaceRow(
      oid = Get[PgNamespaceId].unsafeGetNonNullable(rs, i + 0),
      nspname = Get[String].unsafeGetNonNullable(rs, i + 1),
      nspowner = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2),
      nspacl = Get[Array[TypoAclItem]].unsafeGetNullable(rs, i + 3)
    )
  )
}
