/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_policies

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgPoliciesViewRow(
  schemaname: Option[String],
  tablename: Option[String],
  policyname: Option[String],
  permissive: Option[String],
  roles: Option[Array[String]],
  cmd: Option[String],
  qual: Option[String],
  withCheck: Option[String]
)

object PgPoliciesViewRow {
  implicit val decoder: Decoder[PgPoliciesViewRow] = Decoder.forProduct8[PgPoliciesViewRow, Option[String], Option[String], Option[String], Option[String], Option[Array[String]], Option[String], Option[String], Option[String]]("schemaname", "tablename", "policyname", "permissive", "roles", "cmd", "qual", "with_check")(PgPoliciesViewRow.apply)
  implicit val encoder: Encoder[PgPoliciesViewRow] = Encoder.forProduct8[PgPoliciesViewRow, Option[String], Option[String], Option[String], Option[String], Option[Array[String]], Option[String], Option[String], Option[String]]("schemaname", "tablename", "policyname", "permissive", "roles", "cmd", "qual", "with_check")(x => (x.schemaname, x.tablename, x.policyname, x.permissive, x.roles, x.cmd, x.qual, x.withCheck))
  implicit val read: Read[PgPoliciesViewRow] = new Read[PgPoliciesViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Array[String]], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgPoliciesViewRow(
      schemaname = Get[String].unsafeGetNullable(rs, i + 0),
      tablename = Get[String].unsafeGetNullable(rs, i + 1),
      policyname = Get[String].unsafeGetNullable(rs, i + 2),
      permissive = Get[String].unsafeGetNullable(rs, i + 3),
      roles = Get[Array[String]].unsafeGetNullable(rs, i + 4),
      cmd = Get[String].unsafeGetNullable(rs, i + 5),
      qual = Get[String].unsafeGetNullable(rs, i + 6),
      withCheck = Get[String].unsafeGetNullable(rs, i + 7)
    )
  )
}
