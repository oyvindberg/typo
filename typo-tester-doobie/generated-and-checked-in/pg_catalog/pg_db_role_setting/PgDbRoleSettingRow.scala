/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_db_role_setting

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgDbRoleSettingRow(
  setdatabase: /* oid */ Long,
  setrole: /* oid */ Long,
  setconfig: Option[Array[String]]
){
   val compositeId: PgDbRoleSettingId = PgDbRoleSettingId(setdatabase, setrole)
 }

object PgDbRoleSettingRow {
  implicit val decoder: Decoder[PgDbRoleSettingRow] = Decoder.forProduct3[PgDbRoleSettingRow, /* oid */ Long, /* oid */ Long, Option[Array[String]]]("setdatabase", "setrole", "setconfig")(PgDbRoleSettingRow.apply)
  implicit val encoder: Encoder[PgDbRoleSettingRow] = Encoder.forProduct3[PgDbRoleSettingRow, /* oid */ Long, /* oid */ Long, Option[Array[String]]]("setdatabase", "setrole", "setconfig")(x => (x.setdatabase, x.setrole, x.setconfig))
  implicit val read: Read[PgDbRoleSettingRow] = new Read[PgDbRoleSettingRow](
    gets = List(
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Array[String]], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgDbRoleSettingRow(
      setdatabase = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 0),
      setrole = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      setconfig = Get[Array[String]].unsafeGetNullable(rs, i + 2)
    )
  )
}
