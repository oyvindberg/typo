/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_foreign_server

import adventureworks.TypoAclItem
import doobie.free.connection.ConnectionIO
import doobie.syntax.SqlInterpolator.SingleFragment.fromWrite
import doobie.syntax.string.toSqlInterpolator
import doobie.util.Write
import doobie.util.meta.Meta
import fs2.Stream

object PgForeignServerRepoImpl extends PgForeignServerRepo {
  override def delete(oid: PgForeignServerId): ConnectionIO[Boolean] = {
    sql"delete from pg_catalog.pg_foreign_server where oid = ${fromWrite(oid)(Write.fromPut(PgForeignServerId.put))}".update.run.map(_ > 0)
  }
  override def insert(unsaved: PgForeignServerRow): ConnectionIO[PgForeignServerRow] = {
    sql"""insert into pg_catalog.pg_foreign_server(oid, srvname, srvowner, srvfdw, srvtype, srvversion, srvacl, srvoptions)
          values (${fromWrite(unsaved.oid)(Write.fromPut(PgForeignServerId.put))}::oid, ${fromWrite(unsaved.srvname)(Write.fromPut(Meta.StringMeta.put))}::name, ${fromWrite(unsaved.srvowner)(Write.fromPut(Meta.LongMeta.put))}::oid, ${fromWrite(unsaved.srvfdw)(Write.fromPut(Meta.LongMeta.put))}::oid, ${fromWrite(unsaved.srvtype)(Write.fromPutOption(Meta.StringMeta.put))}, ${fromWrite(unsaved.srvversion)(Write.fromPutOption(Meta.StringMeta.put))}, ${fromWrite(unsaved.srvacl)(Write.fromPutOption(TypoAclItem.arrayPut))}::_aclitem, ${fromWrite(unsaved.srvoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text)
          returning oid, srvname, srvowner, srvfdw, srvtype, srvversion, srvacl, srvoptions
       """.query(PgForeignServerRow.read).unique
  }
  override def selectAll: Stream[ConnectionIO, PgForeignServerRow] = {
    sql"select oid, srvname, srvowner, srvfdw, srvtype, srvversion, srvacl, srvoptions from pg_catalog.pg_foreign_server".query(PgForeignServerRow.read).stream
  }
  override def selectById(oid: PgForeignServerId): ConnectionIO[Option[PgForeignServerRow]] = {
    sql"select oid, srvname, srvowner, srvfdw, srvtype, srvversion, srvacl, srvoptions from pg_catalog.pg_foreign_server where oid = ${fromWrite(oid)(Write.fromPut(PgForeignServerId.put))}".query(PgForeignServerRow.read).option
  }
  override def selectByIds(oids: Array[PgForeignServerId]): Stream[ConnectionIO, PgForeignServerRow] = {
    sql"select oid, srvname, srvowner, srvfdw, srvtype, srvversion, srvacl, srvoptions from pg_catalog.pg_foreign_server where oid = ANY(${fromWrite(oids)(Write.fromPut(PgForeignServerId.arrayPut))})".query(PgForeignServerRow.read).stream
  }
  override def update(row: PgForeignServerRow): ConnectionIO[Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_foreign_server
          set srvname = ${fromWrite(row.srvname)(Write.fromPut(Meta.StringMeta.put))}::name,
              srvowner = ${fromWrite(row.srvowner)(Write.fromPut(Meta.LongMeta.put))}::oid,
              srvfdw = ${fromWrite(row.srvfdw)(Write.fromPut(Meta.LongMeta.put))}::oid,
              srvtype = ${fromWrite(row.srvtype)(Write.fromPutOption(Meta.StringMeta.put))},
              srvversion = ${fromWrite(row.srvversion)(Write.fromPutOption(Meta.StringMeta.put))},
              srvacl = ${fromWrite(row.srvacl)(Write.fromPutOption(TypoAclItem.arrayPut))}::_aclitem,
              srvoptions = ${fromWrite(row.srvoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text
          where oid = ${fromWrite(oid)(Write.fromPut(PgForeignServerId.put))}
       """
      .update
      .run
      .map(_ > 0)
  }
  override def upsert(unsaved: PgForeignServerRow): ConnectionIO[PgForeignServerRow] = {
    sql"""insert into pg_catalog.pg_foreign_server(oid, srvname, srvowner, srvfdw, srvtype, srvversion, srvacl, srvoptions)
          values (
            ${fromWrite(unsaved.oid)(Write.fromPut(PgForeignServerId.put))}::oid,
            ${fromWrite(unsaved.srvname)(Write.fromPut(Meta.StringMeta.put))}::name,
            ${fromWrite(unsaved.srvowner)(Write.fromPut(Meta.LongMeta.put))}::oid,
            ${fromWrite(unsaved.srvfdw)(Write.fromPut(Meta.LongMeta.put))}::oid,
            ${fromWrite(unsaved.srvtype)(Write.fromPutOption(Meta.StringMeta.put))},
            ${fromWrite(unsaved.srvversion)(Write.fromPutOption(Meta.StringMeta.put))},
            ${fromWrite(unsaved.srvacl)(Write.fromPutOption(TypoAclItem.arrayPut))}::_aclitem,
            ${fromWrite(unsaved.srvoptions)(Write.fromPutOption(adventureworks.StringArrayMeta.put))}::_text
          )
          on conflict (oid)
          do update set
            srvname = EXCLUDED.srvname,
            srvowner = EXCLUDED.srvowner,
            srvfdw = EXCLUDED.srvfdw,
            srvtype = EXCLUDED.srvtype,
            srvversion = EXCLUDED.srvversion,
            srvacl = EXCLUDED.srvacl,
            srvoptions = EXCLUDED.srvoptions
          returning oid, srvname, srvowner, srvfdw, srvtype, srvversion, srvacl, srvoptions
       """.query(PgForeignServerRow.read).unique
  }
}
