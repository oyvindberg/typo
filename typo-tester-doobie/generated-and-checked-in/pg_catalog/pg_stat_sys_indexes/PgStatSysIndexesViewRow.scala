/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_sys_indexes

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatSysIndexesViewRow(
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.relid]] */
  relid: Option[/* oid */ Long],
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.indexrelid]] */
  indexrelid: Option[/* oid */ Long],
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.schemaname]] */
  schemaname: Option[String],
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.relname]] */
  relname: Option[String],
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.indexrelname]] */
  indexrelname: Option[String],
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.idxScan]] */
  idxScan: Option[Long],
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.idxTupRead]] */
  idxTupRead: Option[Long],
  /** Points to [[pg_stat_all_indexes.PgStatAllIndexesViewRow.idxTupFetch]] */
  idxTupFetch: Option[Long]
)

object PgStatSysIndexesViewRow {
  implicit val decoder: Decoder[PgStatSysIndexesViewRow] = Decoder.forProduct8[PgStatSysIndexesViewRow, Option[/* oid */ Long], Option[/* oid */ Long], Option[String], Option[String], Option[String], Option[Long], Option[Long], Option[Long]]("relid", "indexrelid", "schemaname", "relname", "indexrelname", "idx_scan", "idx_tup_read", "idx_tup_fetch")(PgStatSysIndexesViewRow.apply)
  implicit val encoder: Encoder[PgStatSysIndexesViewRow] = Encoder.forProduct8[PgStatSysIndexesViewRow, Option[/* oid */ Long], Option[/* oid */ Long], Option[String], Option[String], Option[String], Option[Long], Option[Long], Option[Long]]("relid", "indexrelid", "schemaname", "relname", "indexrelname", "idx_scan", "idx_tup_read", "idx_tup_fetch")(x => (x.relid, x.indexrelid, x.schemaname, x.relname, x.indexrelname, x.idxScan, x.idxTupRead, x.idxTupFetch))
  implicit val read: Read[PgStatSysIndexesViewRow] = new Read[PgStatSysIndexesViewRow](
    gets = List(
      (Get[/* oid */ Long], Nullability.Nullable),
      (Get[/* oid */ Long], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Long], Nullability.Nullable),
      (Get[Long], Nullability.Nullable),
      (Get[Long], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatSysIndexesViewRow(
      relid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 0),
      indexrelid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 1),
      schemaname = Get[String].unsafeGetNullable(rs, i + 2),
      relname = Get[String].unsafeGetNullable(rs, i + 3),
      indexrelname = Get[String].unsafeGetNullable(rs, i + 4),
      idxScan = Get[Long].unsafeGetNullable(rs, i + 5),
      idxTupRead = Get[Long].unsafeGetNullable(rs, i + 6),
      idxTupFetch = Get[Long].unsafeGetNullable(rs, i + 7)
    )
  )
}
