/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_available_extension_versions

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgAvailableExtensionVersionsViewRow(
  name: Option[String],
  version: Option[String],
  installed: Option[Boolean],
  superuser: Option[Boolean],
  trusted: Option[Boolean],
  relocatable: Option[Boolean],
  schema: Option[String],
  requires: Option[Array[String]],
  comment: Option[String]
)

object PgAvailableExtensionVersionsViewRow {
  implicit val decoder: Decoder[PgAvailableExtensionVersionsViewRow] = Decoder.forProduct9[PgAvailableExtensionVersionsViewRow, Option[String], Option[String], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[String], Option[Array[String]], Option[String]]("name", "version", "installed", "superuser", "trusted", "relocatable", "schema", "requires", "comment")(PgAvailableExtensionVersionsViewRow.apply)
  implicit val encoder: Encoder[PgAvailableExtensionVersionsViewRow] = Encoder.forProduct9[PgAvailableExtensionVersionsViewRow, Option[String], Option[String], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[String], Option[Array[String]], Option[String]]("name", "version", "installed", "superuser", "trusted", "relocatable", "schema", "requires", "comment")(x => (x.name, x.version, x.installed, x.superuser, x.trusted, x.relocatable, x.schema, x.requires, x.comment))
  implicit val read: Read[PgAvailableExtensionVersionsViewRow] = new Read[PgAvailableExtensionVersionsViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Array[String]], Nullability.Nullable),
      (Get[String], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgAvailableExtensionVersionsViewRow(
      name = Get[String].unsafeGetNullable(rs, i + 0),
      version = Get[String].unsafeGetNullable(rs, i + 1),
      installed = Get[Boolean].unsafeGetNullable(rs, i + 2),
      superuser = Get[Boolean].unsafeGetNullable(rs, i + 3),
      trusted = Get[Boolean].unsafeGetNullable(rs, i + 4),
      relocatable = Get[Boolean].unsafeGetNullable(rs, i + 5),
      schema = Get[String].unsafeGetNullable(rs, i + 6),
      requires = Get[Array[String]].unsafeGetNullable(rs, i + 7),
      comment = Get[String].unsafeGetNullable(rs, i + 8)
    )
  )
}
