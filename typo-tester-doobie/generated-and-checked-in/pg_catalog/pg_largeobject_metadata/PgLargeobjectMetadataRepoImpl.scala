/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_largeobject_metadata

import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import fs2.Stream

object PgLargeobjectMetadataRepoImpl extends PgLargeobjectMetadataRepo {
  override def delete(oid: PgLargeobjectMetadataId): ConnectionIO[Boolean] = {
    sql"delete from pg_catalog.pg_largeobject_metadata where oid = $oid".update.run.map(_ > 0)
  }
  override def insert(unsaved: PgLargeobjectMetadataRow): ConnectionIO[PgLargeobjectMetadataRow] = {
    sql"""insert into pg_catalog.pg_largeobject_metadata(oid, lomowner, lomacl)
          values (${unsaved.oid}::oid, ${unsaved.lomowner}::oid, ${unsaved.lomacl}::_aclitem)
          returning oid, lomowner, lomacl
       """.query[PgLargeobjectMetadataRow].unique
  }
  override def selectAll: Stream[ConnectionIO, PgLargeobjectMetadataRow] = {
    sql"select oid, lomowner, lomacl from pg_catalog.pg_largeobject_metadata".query[PgLargeobjectMetadataRow].stream
  }
  override def selectById(oid: PgLargeobjectMetadataId): ConnectionIO[Option[PgLargeobjectMetadataRow]] = {
    sql"select oid, lomowner, lomacl from pg_catalog.pg_largeobject_metadata where oid = $oid".query[PgLargeobjectMetadataRow].option
  }
  override def selectByIds(oids: Array[PgLargeobjectMetadataId]): Stream[ConnectionIO, PgLargeobjectMetadataRow] = {
    sql"select oid, lomowner, lomacl from pg_catalog.pg_largeobject_metadata where oid = ANY($oids)".query[PgLargeobjectMetadataRow].stream
  }
  override def update(row: PgLargeobjectMetadataRow): ConnectionIO[Boolean] = {
    val oid = row.oid
    sql"""update pg_catalog.pg_largeobject_metadata
          set lomowner = ${row.lomowner}::oid,
              lomacl = ${row.lomacl}::_aclitem
          where oid = $oid
       """
      .update
      .run
      .map(_ > 0)
  }
  override def upsert(unsaved: PgLargeobjectMetadataRow): ConnectionIO[PgLargeobjectMetadataRow] = {
    sql"""insert into pg_catalog.pg_largeobject_metadata(oid, lomowner, lomacl)
          values (
            ${unsaved.oid}::oid,
            ${unsaved.lomowner}::oid,
            ${unsaved.lomacl}::_aclitem
          )
          on conflict (oid)
          do update set
            lomowner = EXCLUDED.lomowner,
            lomacl = EXCLUDED.lomacl
          returning oid, lomowner, lomacl
       """.query[PgLargeobjectMetadataRow].unique
  }
}
