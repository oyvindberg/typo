/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statio_user_indexes

import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgStatioUserIndexesViewRow(
  /** Points to [[pg_statio_all_indexes.PgStatioAllIndexesViewRow.relid]] */
  relid: Option[/* oid */ Long],
  /** Points to [[pg_statio_all_indexes.PgStatioAllIndexesViewRow.indexrelid]] */
  indexrelid: Option[/* oid */ Long],
  /** Points to [[pg_statio_all_indexes.PgStatioAllIndexesViewRow.schemaname]] */
  schemaname: Option[String],
  /** Points to [[pg_statio_all_indexes.PgStatioAllIndexesViewRow.relname]] */
  relname: Option[String],
  /** Points to [[pg_statio_all_indexes.PgStatioAllIndexesViewRow.indexrelname]] */
  indexrelname: Option[String],
  /** Points to [[pg_statio_all_indexes.PgStatioAllIndexesViewRow.idxBlksRead]] */
  idxBlksRead: Option[Long],
  /** Points to [[pg_statio_all_indexes.PgStatioAllIndexesViewRow.idxBlksHit]] */
  idxBlksHit: Option[Long]
)

object PgStatioUserIndexesViewRow {
  implicit val decoder: Decoder[PgStatioUserIndexesViewRow] =
    (c: HCursor) =>
      for {
        relid <- c.downField("relid").as[Option[/* oid */ Long]]
        indexrelid <- c.downField("indexrelid").as[Option[/* oid */ Long]]
        schemaname <- c.downField("schemaname").as[Option[String]]
        relname <- c.downField("relname").as[Option[String]]
        indexrelname <- c.downField("indexrelname").as[Option[String]]
        idxBlksRead <- c.downField("idx_blks_read").as[Option[Long]]
        idxBlksHit <- c.downField("idx_blks_hit").as[Option[Long]]
      } yield PgStatioUserIndexesViewRow(relid, indexrelid, schemaname, relname, indexrelname, idxBlksRead, idxBlksHit)
  implicit val encoder: Encoder[PgStatioUserIndexesViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "relid" := row.relid,
        "indexrelid" := row.indexrelid,
        "schemaname" := row.schemaname,
        "relname" := row.relname,
        "indexrelname" := row.indexrelname,
        "idx_blks_read" := row.idxBlksRead,
        "idx_blks_hit" := row.idxBlksHit
      )}
  implicit val read: Read[PgStatioUserIndexesViewRow] =
    new Read[PgStatioUserIndexesViewRow](
      gets = List(
        (Get[/* oid */ Long], Nullability.Nullable),
        (Get[/* oid */ Long], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Long], Nullability.Nullable),
        (Get[Long], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgStatioUserIndexesViewRow(
        relid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 0),
        indexrelid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 1),
        schemaname = Get[String].unsafeGetNullable(rs, i + 2),
        relname = Get[String].unsafeGetNullable(rs, i + 3),
        indexrelname = Get[String].unsafeGetNullable(rs, i + 4),
        idxBlksRead = Get[Long].unsafeGetNullable(rs, i + 5),
        idxBlksHit = Get[Long].unsafeGetNullable(rs, i + 6)
      )
    )
  

}
