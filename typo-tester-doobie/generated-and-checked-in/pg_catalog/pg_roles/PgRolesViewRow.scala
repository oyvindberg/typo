/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_roles

import adventureworks.TypoOffsetDateTime
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgRolesViewRow(
  rolname: Option[String],
  rolsuper: Option[Boolean],
  rolinherit: Option[Boolean],
  rolcreaterole: Option[Boolean],
  rolcreatedb: Option[Boolean],
  rolcanlogin: Option[Boolean],
  rolreplication: Option[Boolean],
  rolconnlimit: Option[Int],
  rolpassword: Option[String],
  rolvaliduntil: Option[TypoOffsetDateTime],
  rolbypassrls: Option[Boolean],
  rolconfig: Option[Array[String]],
  oid: Option[/* oid */ Long]
)

object PgRolesViewRow {
  implicit val decoder: Decoder[PgRolesViewRow] = Decoder.forProduct13[PgRolesViewRow, Option[String], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[Int], Option[String], Option[TypoOffsetDateTime], Option[Boolean], Option[Array[String]], Option[/* oid */ Long]]("rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolconnlimit", "rolpassword", "rolvaliduntil", "rolbypassrls", "rolconfig", "oid")(PgRolesViewRow.apply)
  implicit val encoder: Encoder[PgRolesViewRow] = Encoder.forProduct13[PgRolesViewRow, Option[String], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[Boolean], Option[Int], Option[String], Option[TypoOffsetDateTime], Option[Boolean], Option[Array[String]], Option[/* oid */ Long]]("rolname", "rolsuper", "rolinherit", "rolcreaterole", "rolcreatedb", "rolcanlogin", "rolreplication", "rolconnlimit", "rolpassword", "rolvaliduntil", "rolbypassrls", "rolconfig", "oid")(x => (x.rolname, x.rolsuper, x.rolinherit, x.rolcreaterole, x.rolcreatedb, x.rolcanlogin, x.rolreplication, x.rolconnlimit, x.rolpassword, x.rolvaliduntil, x.rolbypassrls, x.rolconfig, x.oid))
  implicit val read: Read[PgRolesViewRow] = new Read[PgRolesViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[TypoOffsetDateTime], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[Array[String]], Nullability.Nullable),
      (Get[/* oid */ Long], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgRolesViewRow(
      rolname = Get[String].unsafeGetNullable(rs, i + 0),
      rolsuper = Get[Boolean].unsafeGetNullable(rs, i + 1),
      rolinherit = Get[Boolean].unsafeGetNullable(rs, i + 2),
      rolcreaterole = Get[Boolean].unsafeGetNullable(rs, i + 3),
      rolcreatedb = Get[Boolean].unsafeGetNullable(rs, i + 4),
      rolcanlogin = Get[Boolean].unsafeGetNullable(rs, i + 5),
      rolreplication = Get[Boolean].unsafeGetNullable(rs, i + 6),
      rolconnlimit = Get[Int].unsafeGetNullable(rs, i + 7),
      rolpassword = Get[String].unsafeGetNullable(rs, i + 8),
      rolvaliduntil = Get[TypoOffsetDateTime].unsafeGetNullable(rs, i + 9),
      rolbypassrls = Get[Boolean].unsafeGetNullable(rs, i + 10),
      rolconfig = Get[Array[String]].unsafeGetNullable(rs, i + 11),
      oid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 12)
    )
  )
}
