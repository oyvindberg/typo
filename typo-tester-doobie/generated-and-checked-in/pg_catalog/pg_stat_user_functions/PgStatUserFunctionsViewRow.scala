/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_user_functions

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatUserFunctionsViewRow(
  funcid: Option[/* oid */ Long],
  schemaname: Option[String],
  funcname: Option[String],
  calls: Option[Long],
  totalTime: Option[Double],
  selfTime: Option[Double]
)

object PgStatUserFunctionsViewRow {
  implicit val decoder: Decoder[PgStatUserFunctionsViewRow] = Decoder.forProduct6[PgStatUserFunctionsViewRow, Option[/* oid */ Long], Option[String], Option[String], Option[Long], Option[Double], Option[Double]]("funcid", "schemaname", "funcname", "calls", "total_time", "self_time")(PgStatUserFunctionsViewRow.apply)
  implicit val encoder: Encoder[PgStatUserFunctionsViewRow] = Encoder.forProduct6[PgStatUserFunctionsViewRow, Option[/* oid */ Long], Option[String], Option[String], Option[Long], Option[Double], Option[Double]]("funcid", "schemaname", "funcname", "calls", "total_time", "self_time")(x => (x.funcid, x.schemaname, x.funcname, x.calls, x.totalTime, x.selfTime))
  implicit val read: Read[PgStatUserFunctionsViewRow] = new Read[PgStatUserFunctionsViewRow](
    gets = List(
      (Get[/* oid */ Long], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Long], Nullability.Nullable),
      (Get[Double], Nullability.Nullable),
      (Get[Double], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatUserFunctionsViewRow(
      funcid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 0),
      schemaname = Get[String].unsafeGetNullable(rs, i + 1),
      funcname = Get[String].unsafeGetNullable(rs, i + 2),
      calls = Get[Long].unsafeGetNullable(rs, i + 3),
      totalTime = Get[Double].unsafeGetNullable(rs, i + 4),
      selfTime = Get[Double].unsafeGetNullable(rs, i + 5)
    )
  )
}
