/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_depend

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgDependRow(
  classid: /* oid */ Long,
  objid: /* oid */ Long,
  objsubid: Int,
  refclassid: /* oid */ Long,
  refobjid: /* oid */ Long,
  refobjsubid: Int,
  deptype: String
)

object PgDependRow {
  implicit val decoder: Decoder[PgDependRow] = Decoder.forProduct7[PgDependRow, /* oid */ Long, /* oid */ Long, Int, /* oid */ Long, /* oid */ Long, Int, String]("classid", "objid", "objsubid", "refclassid", "refobjid", "refobjsubid", "deptype")(PgDependRow.apply)
  implicit val encoder: Encoder[PgDependRow] = Encoder.forProduct7[PgDependRow, /* oid */ Long, /* oid */ Long, Int, /* oid */ Long, /* oid */ Long, Int, String]("classid", "objid", "objsubid", "refclassid", "refobjid", "refobjsubid", "deptype")(x => (x.classid, x.objid, x.objsubid, x.refclassid, x.refobjid, x.refobjsubid, x.deptype))
  implicit val read: Read[PgDependRow] = new Read[PgDependRow](
    gets = List(
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Int], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Int], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgDependRow(
      classid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 0),
      objid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      objsubid = Get[Int].unsafeGetNonNullable(rs, i + 2),
      refclassid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 3),
      refobjid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 4),
      refobjsubid = Get[Int].unsafeGetNonNullable(rs, i + 5),
      deptype = Get[String].unsafeGetNonNullable(rs, i + 6)
    )
  )
}
