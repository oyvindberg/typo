/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_stat_gssapi

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgStatGssapiViewRow(
  pid: Option[Int],
  gssAuthenticated: Option[Boolean],
  principal: Option[String],
  encrypted: Option[Boolean]
)

object PgStatGssapiViewRow {
  implicit val decoder: Decoder[PgStatGssapiViewRow] = Decoder.forProduct4[PgStatGssapiViewRow, Option[Int], Option[Boolean], Option[String], Option[Boolean]]("pid", "gss_authenticated", "principal", "encrypted")(PgStatGssapiViewRow.apply)
  implicit val encoder: Encoder[PgStatGssapiViewRow] = Encoder.forProduct4[PgStatGssapiViewRow, Option[Int], Option[Boolean], Option[String], Option[Boolean]]("pid", "gss_authenticated", "principal", "encrypted")(x => (x.pid, x.gssAuthenticated, x.principal, x.encrypted))
  implicit val read: Read[PgStatGssapiViewRow] = new Read[PgStatGssapiViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Boolean], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgStatGssapiViewRow(
      pid = Get[Int].unsafeGetNullable(rs, i + 0),
      gssAuthenticated = Get[Boolean].unsafeGetNullable(rs, i + 1),
      principal = Get[String].unsafeGetNullable(rs, i + 2),
      encrypted = Get[Boolean].unsafeGetNullable(rs, i + 3)
    )
  )
}
