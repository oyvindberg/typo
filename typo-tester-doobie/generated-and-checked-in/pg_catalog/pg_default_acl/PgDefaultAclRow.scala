/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_default_acl

import adventureworks.TypoAclItem
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgDefaultAclRow(
  oid: PgDefaultAclId,
  defaclrole: /* oid */ Long,
  defaclnamespace: /* oid */ Long,
  defaclobjtype: String,
  defaclacl: Array[TypoAclItem]
)

object PgDefaultAclRow {
  implicit val decoder: Decoder[PgDefaultAclRow] =
    (c: HCursor) =>
      for {
        oid <- c.downField("oid").as[PgDefaultAclId]
        defaclrole <- c.downField("defaclrole").as[/* oid */ Long]
        defaclnamespace <- c.downField("defaclnamespace").as[/* oid */ Long]
        defaclobjtype <- c.downField("defaclobjtype").as[String]
        defaclacl <- c.downField("defaclacl").as[Array[TypoAclItem]]
      } yield PgDefaultAclRow(oid, defaclrole, defaclnamespace, defaclobjtype, defaclacl)
  implicit val encoder: Encoder[PgDefaultAclRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "oid" := row.oid,
        "defaclrole" := row.defaclrole,
        "defaclnamespace" := row.defaclnamespace,
        "defaclobjtype" := row.defaclobjtype,
        "defaclacl" := row.defaclacl
      )}
  implicit val read: Read[PgDefaultAclRow] =
    new Read[PgDefaultAclRow](
      gets = List(
        (Get[PgDefaultAclId], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[String], Nullability.NoNulls),
        (Get[Array[TypoAclItem]], Nullability.NoNulls)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgDefaultAclRow(
        oid = Get[PgDefaultAclId].unsafeGetNonNullable(rs, i + 0),
        defaclrole = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
        defaclnamespace = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2),
        defaclobjtype = Get[String].unsafeGetNonNullable(rs, i + 3),
        defaclacl = Get[Array[TypoAclItem]].unsafeGetNonNullable(rs, i + 4)
      )
    )
  

}
