/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_settings

import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgSettingsViewRow(
  name: Option[String],
  setting: Option[String],
  unit: Option[String],
  category: Option[String],
  shortDesc: Option[String],
  extraDesc: Option[String],
  context: Option[String],
  vartype: Option[String],
  source: Option[String],
  minVal: Option[String],
  maxVal: Option[String],
  enumvals: Option[Array[String]],
  bootVal: Option[String],
  resetVal: Option[String],
  sourcefile: Option[String],
  sourceline: Option[Int],
  pendingRestart: Option[Boolean]
)

object PgSettingsViewRow {
  implicit val decoder: Decoder[PgSettingsViewRow] = Decoder.forProduct17[PgSettingsViewRow, Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[Array[String]], Option[String], Option[String], Option[String], Option[Int], Option[Boolean]]("name", "setting", "unit", "category", "short_desc", "extra_desc", "context", "vartype", "source", "min_val", "max_val", "enumvals", "boot_val", "reset_val", "sourcefile", "sourceline", "pending_restart")(PgSettingsViewRow.apply)(Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeArray[String](Decoder.decodeString, implicitly)), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(Decoder.decodeBoolean))
  implicit val encoder: Encoder[PgSettingsViewRow] = Encoder.forProduct17[PgSettingsViewRow, Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[String], Option[Array[String]], Option[String], Option[String], Option[String], Option[Int], Option[Boolean]]("name", "setting", "unit", "category", "short_desc", "extra_desc", "context", "vartype", "source", "min_val", "max_val", "enumvals", "boot_val", "reset_val", "sourcefile", "sourceline", "pending_restart")(x => (x.name, x.setting, x.unit, x.category, x.shortDesc, x.extraDesc, x.context, x.vartype, x.source, x.minVal, x.maxVal, x.enumvals, x.bootVal, x.resetVal, x.sourcefile, x.sourceline, x.pendingRestart))(Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeIterable[String, Array](Encoder.encodeString, implicitly)), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(Encoder.encodeBoolean))
  implicit val read: Read[PgSettingsViewRow] = new Read[PgSettingsViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (adventureworks.StringArrayMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.BooleanMeta.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgSettingsViewRow(
      name = Meta.StringMeta.get.unsafeGetNullable(rs, i + 0),
      setting = Meta.StringMeta.get.unsafeGetNullable(rs, i + 1),
      unit = Meta.StringMeta.get.unsafeGetNullable(rs, i + 2),
      category = Meta.StringMeta.get.unsafeGetNullable(rs, i + 3),
      shortDesc = Meta.StringMeta.get.unsafeGetNullable(rs, i + 4),
      extraDesc = Meta.StringMeta.get.unsafeGetNullable(rs, i + 5),
      context = Meta.StringMeta.get.unsafeGetNullable(rs, i + 6),
      vartype = Meta.StringMeta.get.unsafeGetNullable(rs, i + 7),
      source = Meta.StringMeta.get.unsafeGetNullable(rs, i + 8),
      minVal = Meta.StringMeta.get.unsafeGetNullable(rs, i + 9),
      maxVal = Meta.StringMeta.get.unsafeGetNullable(rs, i + 10),
      enumvals = adventureworks.StringArrayMeta.get.unsafeGetNullable(rs, i + 11),
      bootVal = Meta.StringMeta.get.unsafeGetNullable(rs, i + 12),
      resetVal = Meta.StringMeta.get.unsafeGetNullable(rs, i + 13),
      sourcefile = Meta.StringMeta.get.unsafeGetNullable(rs, i + 14),
      sourceline = Meta.IntMeta.get.unsafeGetNullable(rs, i + 15),
      pendingRestart = Meta.BooleanMeta.get.unsafeGetNullable(rs, i + 16)
    )
  )
}
