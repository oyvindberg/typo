/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_rewrite

import adventureworks.TypoPgNodeTree
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgRewriteRow(
  oid: PgRewriteId,
  rulename: String,
  evClass: /* oid */ Long,
  evType: String,
  evEnabled: String,
  isInstead: Boolean,
  evQual: TypoPgNodeTree,
  evAction: TypoPgNodeTree
)

object PgRewriteRow {
  implicit val decoder: Decoder[PgRewriteRow] = Decoder.forProduct8[PgRewriteRow, PgRewriteId, String, /* oid */ Long, String, String, Boolean, TypoPgNodeTree, TypoPgNodeTree]("oid", "rulename", "ev_class", "ev_type", "ev_enabled", "is_instead", "ev_qual", "ev_action")(PgRewriteRow.apply)
  implicit val encoder: Encoder[PgRewriteRow] = Encoder.forProduct8[PgRewriteRow, PgRewriteId, String, /* oid */ Long, String, String, Boolean, TypoPgNodeTree, TypoPgNodeTree]("oid", "rulename", "ev_class", "ev_type", "ev_enabled", "is_instead", "ev_qual", "ev_action")(x => (x.oid, x.rulename, x.evClass, x.evType, x.evEnabled, x.isInstead, x.evQual, x.evAction))
  implicit val read: Read[PgRewriteRow] = new Read[PgRewriteRow](
    gets = List(
      (Get[PgRewriteId], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[Boolean], Nullability.NoNulls),
      (Get[TypoPgNodeTree], Nullability.NoNulls),
      (Get[TypoPgNodeTree], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgRewriteRow(
      oid = Get[PgRewriteId].unsafeGetNonNullable(rs, i + 0),
      rulename = Get[String].unsafeGetNonNullable(rs, i + 1),
      evClass = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2),
      evType = Get[String].unsafeGetNonNullable(rs, i + 3),
      evEnabled = Get[String].unsafeGetNonNullable(rs, i + 4),
      isInstead = Get[Boolean].unsafeGetNonNullable(rs, i + 5),
      evQual = Get[TypoPgNodeTree].unsafeGetNonNullable(rs, i + 6),
      evAction = Get[TypoPgNodeTree].unsafeGetNonNullable(rs, i + 7)
    )
  )
}
