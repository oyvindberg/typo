/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_rewrite

import adventureworks.TypoPgNodeTree
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgRewriteRow(
  oid: PgRewriteId,
  rulename: String,
  evClass: /* oid */ Long,
  evType: String,
  evEnabled: String,
  isInstead: Boolean,
  evQual: TypoPgNodeTree,
  evAction: TypoPgNodeTree
)

object PgRewriteRow {
  implicit val decoder: Decoder[PgRewriteRow] = Decoder.forProduct8[PgRewriteRow, PgRewriteId, String, /* oid */ Long, String, String, Boolean, TypoPgNodeTree, TypoPgNodeTree]("oid", "rulename", "ev_class", "ev_type", "ev_enabled", "is_instead", "ev_qual", "ev_action")(PgRewriteRow.apply)(PgRewriteId.decoder, Decoder.decodeString, Decoder.decodeLong, Decoder.decodeString, Decoder.decodeString, Decoder.decodeBoolean, TypoPgNodeTree.decoder, TypoPgNodeTree.decoder)
  implicit val encoder: Encoder[PgRewriteRow] = Encoder.forProduct8[PgRewriteRow, PgRewriteId, String, /* oid */ Long, String, String, Boolean, TypoPgNodeTree, TypoPgNodeTree]("oid", "rulename", "ev_class", "ev_type", "ev_enabled", "is_instead", "ev_qual", "ev_action")(x => (x.oid, x.rulename, x.evClass, x.evType, x.evEnabled, x.isInstead, x.evQual, x.evAction))(PgRewriteId.encoder, Encoder.encodeString, Encoder.encodeLong, Encoder.encodeString, Encoder.encodeString, Encoder.encodeBoolean, TypoPgNodeTree.encoder, TypoPgNodeTree.encoder)
  implicit val read: Read[PgRewriteRow] = new Read[PgRewriteRow](
    gets = List(
      (PgRewriteId.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.LongMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.StringMeta.get, Nullability.NoNulls),
      (Meta.BooleanMeta.get, Nullability.NoNulls),
      (TypoPgNodeTree.get, Nullability.NoNulls),
      (TypoPgNodeTree.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgRewriteRow(
      oid = PgRewriteId.get.unsafeGetNonNullable(rs, i + 0),
      rulename = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 1),
      evClass = Meta.LongMeta.get.unsafeGetNonNullable(rs, i + 2),
      evType = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 3),
      evEnabled = Meta.StringMeta.get.unsafeGetNonNullable(rs, i + 4),
      isInstead = Meta.BooleanMeta.get.unsafeGetNonNullable(rs, i + 5),
      evQual = TypoPgNodeTree.get.unsafeGetNonNullable(rs, i + 6),
      evAction = TypoPgNodeTree.get.unsafeGetNonNullable(rs, i + 7)
    )
  )
}
