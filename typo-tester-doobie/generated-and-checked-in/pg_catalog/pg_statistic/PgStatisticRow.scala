/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_statistic

import adventureworks.TypoAnyArray
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgStatisticRow(
  starelid: /* oid */ Long,
  staattnum: Int,
  stainherit: Boolean,
  stanullfrac: Float,
  stawidth: Int,
  stadistinct: Float,
  stakind1: Int,
  stakind2: Int,
  stakind3: Int,
  stakind4: Int,
  stakind5: Int,
  staop1: /* oid */ Long,
  staop2: /* oid */ Long,
  staop3: /* oid */ Long,
  staop4: /* oid */ Long,
  staop5: /* oid */ Long,
  stacoll1: /* oid */ Long,
  stacoll2: /* oid */ Long,
  stacoll3: /* oid */ Long,
  stacoll4: /* oid */ Long,
  stacoll5: /* oid */ Long,
  stanumbers1: Option[Array[Float]],
  stanumbers2: Option[Array[Float]],
  stanumbers3: Option[Array[Float]],
  stanumbers4: Option[Array[Float]],
  stanumbers5: Option[Array[Float]],
  stavalues1: Option[TypoAnyArray],
  stavalues2: Option[TypoAnyArray],
  stavalues3: Option[TypoAnyArray],
  stavalues4: Option[TypoAnyArray],
  stavalues5: Option[TypoAnyArray]
){
   val compositeId: PgStatisticId = PgStatisticId(starelid, staattnum, stainherit)
 }

object PgStatisticRow {
  implicit val decoder: Decoder[PgStatisticRow] =
    (c: HCursor) =>
      for {
        starelid <- c.downField("starelid").as[/* oid */ Long]
        staattnum <- c.downField("staattnum").as[Int]
        stainherit <- c.downField("stainherit").as[Boolean]
        stanullfrac <- c.downField("stanullfrac").as[Float]
        stawidth <- c.downField("stawidth").as[Int]
        stadistinct <- c.downField("stadistinct").as[Float]
        stakind1 <- c.downField("stakind1").as[Int]
        stakind2 <- c.downField("stakind2").as[Int]
        stakind3 <- c.downField("stakind3").as[Int]
        stakind4 <- c.downField("stakind4").as[Int]
        stakind5 <- c.downField("stakind5").as[Int]
        staop1 <- c.downField("staop1").as[/* oid */ Long]
        staop2 <- c.downField("staop2").as[/* oid */ Long]
        staop3 <- c.downField("staop3").as[/* oid */ Long]
        staop4 <- c.downField("staop4").as[/* oid */ Long]
        staop5 <- c.downField("staop5").as[/* oid */ Long]
        stacoll1 <- c.downField("stacoll1").as[/* oid */ Long]
        stacoll2 <- c.downField("stacoll2").as[/* oid */ Long]
        stacoll3 <- c.downField("stacoll3").as[/* oid */ Long]
        stacoll4 <- c.downField("stacoll4").as[/* oid */ Long]
        stacoll5 <- c.downField("stacoll5").as[/* oid */ Long]
        stanumbers1 <- c.downField("stanumbers1").as[Option[Array[Float]]]
        stanumbers2 <- c.downField("stanumbers2").as[Option[Array[Float]]]
        stanumbers3 <- c.downField("stanumbers3").as[Option[Array[Float]]]
        stanumbers4 <- c.downField("stanumbers4").as[Option[Array[Float]]]
        stanumbers5 <- c.downField("stanumbers5").as[Option[Array[Float]]]
        stavalues1 <- c.downField("stavalues1").as[Option[TypoAnyArray]]
        stavalues2 <- c.downField("stavalues2").as[Option[TypoAnyArray]]
        stavalues3 <- c.downField("stavalues3").as[Option[TypoAnyArray]]
        stavalues4 <- c.downField("stavalues4").as[Option[TypoAnyArray]]
        stavalues5 <- c.downField("stavalues5").as[Option[TypoAnyArray]]
      } yield PgStatisticRow(starelid, staattnum, stainherit, stanullfrac, stawidth, stadistinct, stakind1, stakind2, stakind3, stakind4, stakind5, staop1, staop2, staop3, staop4, staop5, stacoll1, stacoll2, stacoll3, stacoll4, stacoll5, stanumbers1, stanumbers2, stanumbers3, stanumbers4, stanumbers5, stavalues1, stavalues2, stavalues3, stavalues4, stavalues5)
  implicit val encoder: Encoder[PgStatisticRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "starelid" := row.starelid,
        "staattnum" := row.staattnum,
        "stainherit" := row.stainherit,
        "stanullfrac" := row.stanullfrac,
        "stawidth" := row.stawidth,
        "stadistinct" := row.stadistinct,
        "stakind1" := row.stakind1,
        "stakind2" := row.stakind2,
        "stakind3" := row.stakind3,
        "stakind4" := row.stakind4,
        "stakind5" := row.stakind5,
        "staop1" := row.staop1,
        "staop2" := row.staop2,
        "staop3" := row.staop3,
        "staop4" := row.staop4,
        "staop5" := row.staop5,
        "stacoll1" := row.stacoll1,
        "stacoll2" := row.stacoll2,
        "stacoll3" := row.stacoll3,
        "stacoll4" := row.stacoll4,
        "stacoll5" := row.stacoll5,
        "stanumbers1" := row.stanumbers1,
        "stanumbers2" := row.stanumbers2,
        "stanumbers3" := row.stanumbers3,
        "stanumbers4" := row.stanumbers4,
        "stanumbers5" := row.stanumbers5,
        "stavalues1" := row.stavalues1,
        "stavalues2" := row.stavalues2,
        "stavalues3" := row.stavalues3,
        "stavalues4" := row.stavalues4,
        "stavalues5" := row.stavalues5
      )}
  implicit val read: Read[PgStatisticRow] =
    new Read[PgStatisticRow](
      gets = List(
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[Boolean], Nullability.NoNulls),
        (Get[Float], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[Float], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[Int], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[Array[Float]], Nullability.Nullable),
        (Get[Array[Float]], Nullability.Nullable),
        (Get[Array[Float]], Nullability.Nullable),
        (Get[Array[Float]], Nullability.Nullable),
        (Get[Array[Float]], Nullability.Nullable),
        (Get[TypoAnyArray], Nullability.Nullable),
        (Get[TypoAnyArray], Nullability.Nullable),
        (Get[TypoAnyArray], Nullability.Nullable),
        (Get[TypoAnyArray], Nullability.Nullable),
        (Get[TypoAnyArray], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgStatisticRow(
        starelid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 0),
        staattnum = Get[Int].unsafeGetNonNullable(rs, i + 1),
        stainherit = Get[Boolean].unsafeGetNonNullable(rs, i + 2),
        stanullfrac = Get[Float].unsafeGetNonNullable(rs, i + 3),
        stawidth = Get[Int].unsafeGetNonNullable(rs, i + 4),
        stadistinct = Get[Float].unsafeGetNonNullable(rs, i + 5),
        stakind1 = Get[Int].unsafeGetNonNullable(rs, i + 6),
        stakind2 = Get[Int].unsafeGetNonNullable(rs, i + 7),
        stakind3 = Get[Int].unsafeGetNonNullable(rs, i + 8),
        stakind4 = Get[Int].unsafeGetNonNullable(rs, i + 9),
        stakind5 = Get[Int].unsafeGetNonNullable(rs, i + 10),
        staop1 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 11),
        staop2 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 12),
        staop3 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 13),
        staop4 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 14),
        staop5 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 15),
        stacoll1 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 16),
        stacoll2 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 17),
        stacoll3 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 18),
        stacoll4 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 19),
        stacoll5 = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 20),
        stanumbers1 = Get[Array[Float]].unsafeGetNullable(rs, i + 21),
        stanumbers2 = Get[Array[Float]].unsafeGetNullable(rs, i + 22),
        stanumbers3 = Get[Array[Float]].unsafeGetNullable(rs, i + 23),
        stanumbers4 = Get[Array[Float]].unsafeGetNullable(rs, i + 24),
        stanumbers5 = Get[Array[Float]].unsafeGetNullable(rs, i + 25),
        stavalues1 = Get[TypoAnyArray].unsafeGetNullable(rs, i + 26),
        stavalues2 = Get[TypoAnyArray].unsafeGetNullable(rs, i + 27),
        stavalues3 = Get[TypoAnyArray].unsafeGetNullable(rs, i + 28),
        stavalues4 = Get[TypoAnyArray].unsafeGetNullable(rs, i + 29),
        stavalues5 = Get[TypoAnyArray].unsafeGetNullable(rs, i + 30)
      )
    )
  

}
