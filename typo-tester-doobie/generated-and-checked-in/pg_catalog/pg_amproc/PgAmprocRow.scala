/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_amproc

import adventureworks.TypoRegproc
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgAmprocRow(
  oid: PgAmprocId,
  amprocfamily: /* oid */ Long,
  amproclefttype: /* oid */ Long,
  amprocrighttype: /* oid */ Long,
  amprocnum: Int,
  amproc: TypoRegproc
)

object PgAmprocRow {
  implicit val decoder: Decoder[PgAmprocRow] = Decoder.forProduct6[PgAmprocRow, PgAmprocId, /* oid */ Long, /* oid */ Long, /* oid */ Long, Int, TypoRegproc]("oid", "amprocfamily", "amproclefttype", "amprocrighttype", "amprocnum", "amproc")(PgAmprocRow.apply)
  implicit val encoder: Encoder[PgAmprocRow] = Encoder.forProduct6[PgAmprocRow, PgAmprocId, /* oid */ Long, /* oid */ Long, /* oid */ Long, Int, TypoRegproc]("oid", "amprocfamily", "amproclefttype", "amprocrighttype", "amprocnum", "amproc")(x => (x.oid, x.amprocfamily, x.amproclefttype, x.amprocrighttype, x.amprocnum, x.amproc))
  implicit val read: Read[PgAmprocRow] = new Read[PgAmprocRow](
    gets = List(
      (Get[PgAmprocId], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Int], Nullability.NoNulls),
      (Get[TypoRegproc], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgAmprocRow(
      oid = Get[PgAmprocId].unsafeGetNonNullable(rs, i + 0),
      amprocfamily = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      amproclefttype = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2),
      amprocrighttype = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 3),
      amprocnum = Get[Int].unsafeGetNonNullable(rs, i + 4),
      amproc = Get[TypoRegproc].unsafeGetNonNullable(rs, i + 5)
    )
  )
}
