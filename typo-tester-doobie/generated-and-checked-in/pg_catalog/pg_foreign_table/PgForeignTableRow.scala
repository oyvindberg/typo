/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_foreign_table

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgForeignTableRow(
  ftrelid: PgForeignTableId,
  ftserver: /* oid */ Long,
  ftoptions: Option[Array[String]]
)

object PgForeignTableRow {
  implicit val decoder: Decoder[PgForeignTableRow] = Decoder.forProduct3[PgForeignTableRow, PgForeignTableId, /* oid */ Long, Option[Array[String]]]("ftrelid", "ftserver", "ftoptions")(PgForeignTableRow.apply)
  implicit val encoder: Encoder[PgForeignTableRow] = Encoder.forProduct3[PgForeignTableRow, PgForeignTableId, /* oid */ Long, Option[Array[String]]]("ftrelid", "ftserver", "ftoptions")(x => (x.ftrelid, x.ftserver, x.ftoptions))
  implicit val read: Read[PgForeignTableRow] = new Read[PgForeignTableRow](
    gets = List(
      (Get[PgForeignTableId], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Array[String]], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgForeignTableRow(
      ftrelid = Get[PgForeignTableId].unsafeGetNonNullable(rs, i + 0),
      ftserver = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      ftoptions = Get[Array[String]].unsafeGetNullable(rs, i + 2)
    )
  )
}
