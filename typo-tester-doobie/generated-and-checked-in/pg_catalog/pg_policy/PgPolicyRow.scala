/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_policy

import adventureworks.TypoPgNodeTree
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgPolicyRow(
  oid: PgPolicyId,
  polname: String,
  polrelid: /* oid */ Long,
  polcmd: String,
  polpermissive: Boolean,
  polroles: Array[/* oid */ Long],
  polqual: Option[TypoPgNodeTree],
  polwithcheck: Option[TypoPgNodeTree]
)

object PgPolicyRow {
  implicit val decoder: Decoder[PgPolicyRow] = Decoder.forProduct8[PgPolicyRow, PgPolicyId, String, /* oid */ Long, String, Boolean, Array[/* oid */ Long], Option[TypoPgNodeTree], Option[TypoPgNodeTree]]("oid", "polname", "polrelid", "polcmd", "polpermissive", "polroles", "polqual", "polwithcheck")(PgPolicyRow.apply)
  implicit val encoder: Encoder[PgPolicyRow] = Encoder.forProduct8[PgPolicyRow, PgPolicyId, String, /* oid */ Long, String, Boolean, Array[/* oid */ Long], Option[TypoPgNodeTree], Option[TypoPgNodeTree]]("oid", "polname", "polrelid", "polcmd", "polpermissive", "polroles", "polqual", "polwithcheck")(x => (x.oid, x.polname, x.polrelid, x.polcmd, x.polpermissive, x.polroles, x.polqual, x.polwithcheck))
  implicit val read: Read[PgPolicyRow] = new Read[PgPolicyRow](
    gets = List(
      (Get[PgPolicyId], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[Boolean], Nullability.NoNulls),
      (Get[Array[/* oid */ Long]], Nullability.NoNulls),
      (Get[TypoPgNodeTree], Nullability.Nullable),
      (Get[TypoPgNodeTree], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgPolicyRow(
      oid = Get[PgPolicyId].unsafeGetNonNullable(rs, i + 0),
      polname = Get[String].unsafeGetNonNullable(rs, i + 1),
      polrelid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2),
      polcmd = Get[String].unsafeGetNonNullable(rs, i + 3),
      polpermissive = Get[Boolean].unsafeGetNonNullable(rs, i + 4),
      polroles = Get[Array[/* oid */ Long]].unsafeGetNonNullable(rs, i + 5),
      polqual = Get[TypoPgNodeTree].unsafeGetNullable(rs, i + 6),
      polwithcheck = Get[TypoPgNodeTree].unsafeGetNullable(rs, i + 7)
    )
  )
}
