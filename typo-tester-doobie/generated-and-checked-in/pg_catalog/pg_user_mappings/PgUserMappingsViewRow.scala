/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_user_mappings

import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgUserMappingsViewRow(
  umid: Option[/* oid */ Long],
  srvid: Option[/* oid */ Long],
  srvname: Option[String],
  umuser: Option[/* oid */ Long],
  usename: Option[String],
  umoptions: Option[Array[String]]
)

object PgUserMappingsViewRow {
  implicit val decoder: Decoder[PgUserMappingsViewRow] =
    (c: HCursor) =>
      for {
        umid <- c.downField("umid").as[Option[/* oid */ Long]]
        srvid <- c.downField("srvid").as[Option[/* oid */ Long]]
        srvname <- c.downField("srvname").as[Option[String]]
        umuser <- c.downField("umuser").as[Option[/* oid */ Long]]
        usename <- c.downField("usename").as[Option[String]]
        umoptions <- c.downField("umoptions").as[Option[Array[String]]]
      } yield PgUserMappingsViewRow(umid, srvid, srvname, umuser, usename, umoptions)
  implicit val encoder: Encoder[PgUserMappingsViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "umid" := row.umid,
        "srvid" := row.srvid,
        "srvname" := row.srvname,
        "umuser" := row.umuser,
        "usename" := row.usename,
        "umoptions" := row.umoptions
      )}
  implicit val read: Read[PgUserMappingsViewRow] =
    new Read[PgUserMappingsViewRow](
      gets = List(
        (Get[/* oid */ Long], Nullability.Nullable),
        (Get[/* oid */ Long], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[/* oid */ Long], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Array[String]], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgUserMappingsViewRow(
        umid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 0),
        srvid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 1),
        srvname = Get[String].unsafeGetNullable(rs, i + 2),
        umuser = Get[/* oid */ Long].unsafeGetNullable(rs, i + 3),
        usename = Get[String].unsafeGetNullable(rs, i + 4),
        umoptions = Get[Array[String]].unsafeGetNullable(rs, i + 5)
      )
    )
  

}
