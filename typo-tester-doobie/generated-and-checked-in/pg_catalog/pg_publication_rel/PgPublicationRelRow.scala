/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_publication_rel

import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class PgPublicationRelRow(
  oid: PgPublicationRelId,
  prpubid: /* oid */ Long,
  prrelid: /* oid */ Long
)

object PgPublicationRelRow {
  implicit val decoder: Decoder[PgPublicationRelRow] =
    (c: HCursor) =>
      for {
        oid <- c.downField("oid").as[PgPublicationRelId]
        prpubid <- c.downField("prpubid").as[/* oid */ Long]
        prrelid <- c.downField("prrelid").as[/* oid */ Long]
      } yield PgPublicationRelRow(oid, prpubid, prrelid)
  implicit val encoder: Encoder[PgPublicationRelRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "oid" := row.oid,
        "prpubid" := row.prpubid,
        "prrelid" := row.prrelid
      )}
  implicit val read: Read[PgPublicationRelRow] =
    new Read[PgPublicationRelRow](
      gets = List(
        (Get[PgPublicationRelId], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls),
        (Get[/* oid */ Long], Nullability.NoNulls)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgPublicationRelRow(
        oid = Get[PgPublicationRelId].unsafeGetNonNullable(rs, i + 0),
        prpubid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
        prrelid = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 2)
      )
    )
  

}
