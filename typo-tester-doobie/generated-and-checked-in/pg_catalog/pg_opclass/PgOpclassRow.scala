/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_opclass

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgOpclassRow(
  oid: PgOpclassId,
  opcmethod: /* oid */ Long,
  opcname: String,
  opcnamespace: /* oid */ Long,
  opcowner: /* oid */ Long,
  opcfamily: /* oid */ Long,
  opcintype: /* oid */ Long,
  opcdefault: Boolean,
  opckeytype: /* oid */ Long
)

object PgOpclassRow {
  implicit val decoder: Decoder[PgOpclassRow] = Decoder.forProduct9[PgOpclassRow, PgOpclassId, /* oid */ Long, String, /* oid */ Long, /* oid */ Long, /* oid */ Long, /* oid */ Long, Boolean, /* oid */ Long]("oid", "opcmethod", "opcname", "opcnamespace", "opcowner", "opcfamily", "opcintype", "opcdefault", "opckeytype")(PgOpclassRow.apply)
  implicit val encoder: Encoder[PgOpclassRow] = Encoder.forProduct9[PgOpclassRow, PgOpclassId, /* oid */ Long, String, /* oid */ Long, /* oid */ Long, /* oid */ Long, /* oid */ Long, Boolean, /* oid */ Long]("oid", "opcmethod", "opcname", "opcnamespace", "opcowner", "opcfamily", "opcintype", "opcdefault", "opckeytype")(x => (x.oid, x.opcmethod, x.opcname, x.opcnamespace, x.opcowner, x.opcfamily, x.opcintype, x.opcdefault, x.opckeytype))
  implicit val read: Read[PgOpclassRow] = new Read[PgOpclassRow](
    gets = List(
      (Get[PgOpclassId], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[Boolean], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgOpclassRow(
      oid = Get[PgOpclassId].unsafeGetNonNullable(rs, i + 0),
      opcmethod = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      opcname = Get[String].unsafeGetNonNullable(rs, i + 2),
      opcnamespace = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 3),
      opcowner = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 4),
      opcfamily = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 5),
      opcintype = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 6),
      opcdefault = Get[Boolean].unsafeGetNonNullable(rs, i + 7),
      opckeytype = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 8)
    )
  )
}
