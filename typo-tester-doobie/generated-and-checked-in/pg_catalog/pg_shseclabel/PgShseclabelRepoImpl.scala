/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_shseclabel

import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import fs2.Stream

object PgShseclabelRepoImpl extends PgShseclabelRepo {
  override def delete(compositeId: PgShseclabelId): ConnectionIO[Boolean] = {
    sql"delete from pg_catalog.pg_shseclabel where objoid = ${compositeId.objoid} AND classoid = ${compositeId.classoid} AND provider = ${compositeId.provider}".update.run.map(_ > 0)
  }
  override def insert(unsaved: PgShseclabelRow): ConnectionIO[PgShseclabelRow] = {
    sql"""insert into pg_catalog.pg_shseclabel(objoid, classoid, provider, "label")
          values (${unsaved.objoid}::oid, ${unsaved.classoid}::oid, ${unsaved.provider}, ${unsaved.label})
          returning objoid, classoid, provider, "label"
       """.query[PgShseclabelRow].unique
  }
  override def selectAll: Stream[ConnectionIO, PgShseclabelRow] = {
    sql"""select objoid, classoid, provider, "label" from pg_catalog.pg_shseclabel""".query[PgShseclabelRow].stream
  }
  override def selectById(compositeId: PgShseclabelId): ConnectionIO[Option[PgShseclabelRow]] = {
    sql"""select objoid, classoid, provider, "label" from pg_catalog.pg_shseclabel where objoid = ${compositeId.objoid} AND classoid = ${compositeId.classoid} AND provider = ${compositeId.provider}""".query[PgShseclabelRow].option
  }
  override def update(row: PgShseclabelRow): ConnectionIO[Boolean] = {
    val compositeId = row.compositeId
    sql"""update pg_catalog.pg_shseclabel
          set "label" = ${row.label}
          where objoid = ${compositeId.objoid} AND classoid = ${compositeId.classoid} AND provider = ${compositeId.provider}
       """
      .update
      .run
      .map(_ > 0)
  }
  override def upsert(unsaved: PgShseclabelRow): ConnectionIO[PgShseclabelRow] = {
    sql"""insert into pg_catalog.pg_shseclabel(objoid, classoid, provider, "label")
          values (
            ${unsaved.objoid}::oid,
            ${unsaved.classoid}::oid,
            ${unsaved.provider},
            ${unsaved.label}
          )
          on conflict (objoid, classoid, provider)
          do update set
            "label" = EXCLUDED."label"
          returning objoid, classoid, provider, "label"
       """.query[PgShseclabelRow].unique
  }
}
