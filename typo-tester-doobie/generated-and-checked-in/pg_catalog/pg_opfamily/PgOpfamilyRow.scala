/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_opfamily

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgOpfamilyRow(
  oid: PgOpfamilyId,
  opfmethod: /* oid */ Long,
  opfname: String,
  opfnamespace: /* oid */ Long,
  opfowner: /* oid */ Long
)

object PgOpfamilyRow {
  implicit val decoder: Decoder[PgOpfamilyRow] = Decoder.forProduct5[PgOpfamilyRow, PgOpfamilyId, /* oid */ Long, String, /* oid */ Long, /* oid */ Long]("oid", "opfmethod", "opfname", "opfnamespace", "opfowner")(PgOpfamilyRow.apply)
  implicit val encoder: Encoder[PgOpfamilyRow] = Encoder.forProduct5[PgOpfamilyRow, PgOpfamilyId, /* oid */ Long, String, /* oid */ Long, /* oid */ Long]("oid", "opfmethod", "opfname", "opfnamespace", "opfowner")(x => (x.oid, x.opfmethod, x.opfname, x.opfnamespace, x.opfowner))
  implicit val read: Read[PgOpfamilyRow] = new Read[PgOpfamilyRow](
    gets = List(
      (Get[PgOpfamilyId], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[String], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls),
      (Get[/* oid */ Long], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgOpfamilyRow(
      oid = Get[PgOpfamilyId].unsafeGetNonNullable(rs, i + 0),
      opfmethod = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 1),
      opfname = Get[String].unsafeGetNonNullable(rs, i + 2),
      opfnamespace = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 3),
      opfowner = Get[/* oid */ Long].unsafeGetNonNullable(rs, i + 4)
    )
  )
}
