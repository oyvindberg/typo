/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pg_catalog
package pg_available_extensions

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgAvailableExtensionsViewRow(
  name: Option[String],
  defaultVersion: Option[String],
  installedVersion: Option[String],
  comment: Option[String]
)

object PgAvailableExtensionsViewRow {
  implicit val decoder: Decoder[PgAvailableExtensionsViewRow] = Decoder.forProduct4[PgAvailableExtensionsViewRow, Option[String], Option[String], Option[String], Option[String]]("name", "default_version", "installed_version", "comment")(PgAvailableExtensionsViewRow.apply)
  implicit val encoder: Encoder[PgAvailableExtensionsViewRow] = Encoder.forProduct4[PgAvailableExtensionsViewRow, Option[String], Option[String], Option[String], Option[String]]("name", "default_version", "installed_version", "comment")(x => (x.name, x.defaultVersion, x.installedVersion, x.comment))
  implicit val read: Read[PgAvailableExtensionsViewRow] = new Read[PgAvailableExtensionsViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgAvailableExtensionsViewRow(
      name = Get[String].unsafeGetNullable(rs, i + 0),
      defaultVersion = Get[String].unsafeGetNullable(rs, i + 1),
      installedVersion = Get[String].unsafeGetNullable(rs, i + 2),
      comment = Get[String].unsafeGetNullable(rs, i + 3)
    )
  )
}
