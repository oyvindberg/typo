/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package businessentity

import adventureworks.TypoLocalDateTime
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class BusinessentityRow(
  /** Primary key for all customers, vendors, and employees. */
  businessentityid: BusinessentityId,
  rowguid: UUID,
  modifieddate: TypoLocalDateTime
)

object BusinessentityRow {
  implicit val decoder: Decoder[BusinessentityRow] = Decoder.forProduct3[BusinessentityRow, BusinessentityId, UUID, TypoLocalDateTime]("businessentityid", "rowguid", "modifieddate")(BusinessentityRow.apply)
  implicit val encoder: Encoder[BusinessentityRow] = Encoder.forProduct3[BusinessentityRow, BusinessentityId, UUID, TypoLocalDateTime]("businessentityid", "rowguid", "modifieddate")(x => (x.businessentityid, x.rowguid, x.modifieddate))
  implicit val read: Read[BusinessentityRow] = new Read[BusinessentityRow](
    gets = List(
      (Get[BusinessentityId], Nullability.NoNulls),
      (Get[UUID], Nullability.NoNulls),
      (Get[TypoLocalDateTime], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => BusinessentityRow(
      businessentityid = Get[BusinessentityId].unsafeGetNonNullable(rs, i + 0),
      rowguid = Get[UUID].unsafeGetNonNullable(rs, i + 1),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNonNullable(rs, i + 2)
    )
  )
}
