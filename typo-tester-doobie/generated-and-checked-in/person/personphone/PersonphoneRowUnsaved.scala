/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package personphone

import adventureworks.Defaulted
import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.person.phonenumbertype.PhonenumbertypeId
import adventureworks.public.Phone
import io.circe.Decoder
import io.circe.Encoder

/** This class corresponds to a row in table `person.personphone` which has not been persisted yet */
case class PersonphoneRowUnsaved(
  /** Business entity identification number. Foreign key to Person.BusinessEntityID.
      Points to [[person.PersonRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Telephone number identification number. */
  phonenumber: Phone,
  /** Kind of phone number. Foreign key to PhoneNumberType.PhoneNumberTypeID.
      Points to [[phonenumbertype.PhonenumbertypeRow.phonenumbertypeid]] */
  phonenumbertypeid: PhonenumbertypeId,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(modifieddateDefault: => TypoLocalDateTime): PersonphoneRow =
    PersonphoneRow(
      businessentityid = businessentityid,
      phonenumber = phonenumber,
      phonenumbertypeid = phonenumbertypeid,
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object PersonphoneRowUnsaved {
  implicit val decoder: Decoder[PersonphoneRowUnsaved] = Decoder.forProduct4[PersonphoneRowUnsaved, BusinessentityId, Phone, PhonenumbertypeId, Defaulted[TypoLocalDateTime]]("businessentityid", "phonenumber", "phonenumbertypeid", "modifieddate")(PersonphoneRowUnsaved.apply)
  implicit val encoder: Encoder[PersonphoneRowUnsaved] = Encoder.forProduct4[PersonphoneRowUnsaved, BusinessentityId, Phone, PhonenumbertypeId, Defaulted[TypoLocalDateTime]]("businessentityid", "phonenumber", "phonenumbertypeid", "modifieddate")(x => (x.businessentityid, x.phonenumber, x.phonenumbertypeid, x.modifieddate))
}
