/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package stateprovince

import adventureworks.person.countryregion.CountryregionId
import adventureworks.public.Flag
import adventureworks.public.Name
import adventureworks.sales.salesterritory.SalesterritoryId
import java.time.LocalDateTime
import java.util.UUID

sealed abstract class StateprovinceFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class StateprovinceFieldValue[T](name: String, value: T) extends StateprovinceFieldOrIdValue(name, value)

object StateprovinceFieldValue {
  case class stateprovinceid(override val value: StateprovinceId) extends StateprovinceFieldOrIdValue("stateprovinceid", value)
  case class stateprovincecode(override val value: /* bpchar */ String) extends StateprovinceFieldValue("stateprovincecode", value)
  case class countryregioncode(override val value: CountryregionId) extends StateprovinceFieldValue("countryregioncode", value)
  case class isonlystateprovinceflag(override val value: Flag) extends StateprovinceFieldValue("isonlystateprovinceflag", value)
  case class name(override val value: Name) extends StateprovinceFieldValue("name", value)
  case class territoryid(override val value: SalesterritoryId) extends StateprovinceFieldValue("territoryid", value)
  case class rowguid(override val value: UUID) extends StateprovinceFieldValue("rowguid", value)
  case class modifieddate(override val value: LocalDateTime) extends StateprovinceFieldValue("modifieddate", value)
}
