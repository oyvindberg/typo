/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package contacttype

import doobie.Meta

/** Type for the primary key of table `person.contacttype` */
case class ContacttypeId(value: Int) extends AnyVal
object ContacttypeId {
  implicit val ordering: Ordering[ContacttypeId] = Ordering.by(_.value)
  
  implicit val metaArray: Meta[Array[ContacttypeId]] = Meta[Array[Int]].imap(_.map(ContacttypeId.apply))(_.map(_.value))
  implicit val meta: Meta[ContacttypeId] = Meta[Int].imap(ContacttypeId.apply)(_.value)
}
