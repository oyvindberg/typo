/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package pa

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class PaViewRow(
  id: Option[Int],
  /** Points to [[person.password.PasswordRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[person.password.PasswordRow.passwordhash]] */
  passwordhash: Option[/* max 128 chars */ String],
  /** Points to [[person.password.PasswordRow.passwordsalt]] */
  passwordsalt: Option[/* max 10 chars */ String],
  /** Points to [[person.password.PasswordRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[person.password.PasswordRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object PaViewRow {
  implicit val decoder: Decoder[PaViewRow] = Decoder.forProduct6[PaViewRow, Option[Int], Option[BusinessentityId], Option[/* max 128 chars */ String], Option[/* max 10 chars */ String], Option[UUID], Option[TypoLocalDateTime]]("id", "businessentityid", "passwordhash", "passwordsalt", "rowguid", "modifieddate")(PaViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(BusinessentityId.decoder), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeUUID), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[PaViewRow] = Encoder.forProduct6[PaViewRow, Option[Int], Option[BusinessentityId], Option[/* max 128 chars */ String], Option[/* max 10 chars */ String], Option[UUID], Option[TypoLocalDateTime]]("id", "businessentityid", "passwordhash", "passwordsalt", "rowguid", "modifieddate")(x => (x.id, x.businessentityid, x.passwordhash, x.passwordsalt, x.rowguid, x.modifieddate))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(BusinessentityId.encoder), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeUUID), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[PaViewRow] = new Read[PaViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (BusinessentityId.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (adventureworks.UUIDMeta.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PaViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      businessentityid = BusinessentityId.get.unsafeGetNullable(rs, i + 1),
      passwordhash = Meta.StringMeta.get.unsafeGetNullable(rs, i + 2),
      passwordsalt = Meta.StringMeta.get.unsafeGetNullable(rs, i + 3),
      rowguid = adventureworks.UUIDMeta.get.unsafeGetNullable(rs, i + 4),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 5)
    )
  )
}
