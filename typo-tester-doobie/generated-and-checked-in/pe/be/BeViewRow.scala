/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package be

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class BeViewRow(
  id: Option[Int],
  /** Points to [[person.businessentity.BusinessentityRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[person.businessentity.BusinessentityRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[person.businessentity.BusinessentityRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object BeViewRow {
  implicit val decoder: Decoder[BeViewRow] = Decoder.forProduct4[BeViewRow, Option[Int], Option[BusinessentityId], Option[UUID], Option[TypoLocalDateTime]]("id", "businessentityid", "rowguid", "modifieddate")(BeViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(BusinessentityId.decoder), Decoder.decodeOption(Decoder.decodeUUID), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[BeViewRow] = Encoder.forProduct4[BeViewRow, Option[Int], Option[BusinessentityId], Option[UUID], Option[TypoLocalDateTime]]("id", "businessentityid", "rowguid", "modifieddate")(x => (x.id, x.businessentityid, x.rowguid, x.modifieddate))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(BusinessentityId.encoder), Encoder.encodeOption(Encoder.encodeUUID), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[BeViewRow] = new Read[BeViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (BusinessentityId.get, Nullability.Nullable),
      (adventureworks.UUIDMeta.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => BeViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      businessentityid = BusinessentityId.get.unsafeGetNullable(rs, i + 1),
      rowguid = adventureworks.UUIDMeta.get.unsafeGetNullable(rs, i + 2),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 3)
    )
  )
}
