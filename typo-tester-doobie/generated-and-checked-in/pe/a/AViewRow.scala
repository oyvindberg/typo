/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package a

import adventureworks.TypoLocalDateTime
import adventureworks.person.address.AddressId
import adventureworks.person.stateprovince.StateprovinceId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class AViewRow(
  id: Option[Int],
  /** Points to [[person.address.AddressRow.addressid]] */
  addressid: Option[AddressId],
  /** Points to [[person.address.AddressRow.addressline1]] */
  addressline1: Option[/* max 60 chars */ String],
  /** Points to [[person.address.AddressRow.addressline2]] */
  addressline2: Option[/* max 60 chars */ String],
  /** Points to [[person.address.AddressRow.city]] */
  city: Option[/* max 30 chars */ String],
  /** Points to [[person.address.AddressRow.stateprovinceid]] */
  stateprovinceid: Option[StateprovinceId],
  /** Points to [[person.address.AddressRow.postalcode]] */
  postalcode: Option[/* max 15 chars */ String],
  /** Points to [[person.address.AddressRow.spatiallocation]] */
  spatiallocation: Option[Byte],
  /** Points to [[person.address.AddressRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[person.address.AddressRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object AViewRow {
  implicit val decoder: Decoder[AViewRow] = Decoder.forProduct10[AViewRow, Option[Int], Option[AddressId], Option[/* max 60 chars */ String], Option[/* max 60 chars */ String], Option[/* max 30 chars */ String], Option[StateprovinceId], Option[/* max 15 chars */ String], Option[Byte], Option[UUID], Option[TypoLocalDateTime]]("id", "addressid", "addressline1", "addressline2", "city", "stateprovinceid", "postalcode", "spatiallocation", "rowguid", "modifieddate")(AViewRow.apply)
  implicit val encoder: Encoder[AViewRow] = Encoder.forProduct10[AViewRow, Option[Int], Option[AddressId], Option[/* max 60 chars */ String], Option[/* max 60 chars */ String], Option[/* max 30 chars */ String], Option[StateprovinceId], Option[/* max 15 chars */ String], Option[Byte], Option[UUID], Option[TypoLocalDateTime]]("id", "addressid", "addressline1", "addressline2", "city", "stateprovinceid", "postalcode", "spatiallocation", "rowguid", "modifieddate")(x => (x.id, x.addressid, x.addressline1, x.addressline2, x.city, x.stateprovinceid, x.postalcode, x.spatiallocation, x.rowguid, x.modifieddate))
  implicit val read: Read[AViewRow] = new Read[AViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[AddressId], Nullability.Nullable),
      (Get[/* max 60 chars */ String], Nullability.Nullable),
      (Get[/* max 60 chars */ String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[StateprovinceId], Nullability.Nullable),
      (Get[/* max 15 chars */ String], Nullability.Nullable),
      (Get[Byte], Nullability.Nullable),
      (Get[UUID], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => AViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      addressid = Get[AddressId].unsafeGetNullable(rs, i + 1),
      addressline1 = Get[/* max 60 chars */ String].unsafeGetNullable(rs, i + 2),
      addressline2 = Get[/* max 60 chars */ String].unsafeGetNullable(rs, i + 3),
      city = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 4),
      stateprovinceid = Get[StateprovinceId].unsafeGetNullable(rs, i + 5),
      postalcode = Get[/* max 15 chars */ String].unsafeGetNullable(rs, i + 6),
      spatiallocation = Get[Byte].unsafeGetNullable(rs, i + 7),
      rowguid = Get[UUID].unsafeGetNullable(rs, i + 8),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 9)
    )
  )
}
