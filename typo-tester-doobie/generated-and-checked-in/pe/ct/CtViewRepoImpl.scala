/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package ct

import adventureworks.person.contacttype.ContacttypeId
import adventureworks.public.Name
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object CtViewRepoImpl extends CtViewRepo {
  override def selectAll: Stream[ConnectionIO, CtViewRow] = {
    sql"""select "id", contacttypeid, "name", modifieddate from pe.ct""".query[CtViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[CtViewFieldOrIdValue[_]]): Stream[ConnectionIO, CtViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case CtViewFieldValue.id(value) => fr""""id" = $value"""
        case CtViewFieldValue.contacttypeid(value) => fr"contacttypeid = $value"
        case CtViewFieldValue.name(value) => fr""""name" = $value"""
        case CtViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from pe.ct $where".query[CtViewRow].stream
  
  }
  implicit val read: Read[CtViewRow] =
    new Read[CtViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[ContacttypeId], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => CtViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        contacttypeid = Get[ContacttypeId].unsafeGetNullable(rs, i + 1),
        name = Get[Name].unsafeGetNullable(rs, i + 2),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 3)
      )
    )
  

}
