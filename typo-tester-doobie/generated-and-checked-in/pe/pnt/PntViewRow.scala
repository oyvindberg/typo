/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package pnt

import adventureworks.TypoLocalDateTime
import adventureworks.person.phonenumbertype.PhonenumbertypeId
import adventureworks.public.Name
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PntViewRow(
  id: Option[Int],
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.phonenumbertypeid]] */
  phonenumbertypeid: Option[PhonenumbertypeId],
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.name]] */
  name: Option[Name],
  /** Points to [[person.phonenumbertype.PhonenumbertypeRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object PntViewRow {
  implicit val decoder: Decoder[PntViewRow] = Decoder.forProduct4[PntViewRow, Option[Int], Option[PhonenumbertypeId], Option[Name], Option[TypoLocalDateTime]]("id", "phonenumbertypeid", "name", "modifieddate")(PntViewRow.apply)
  implicit val encoder: Encoder[PntViewRow] = Encoder.forProduct4[PntViewRow, Option[Int], Option[PhonenumbertypeId], Option[Name], Option[TypoLocalDateTime]]("id", "phonenumbertypeid", "name", "modifieddate")(x => (x.id, x.phonenumbertypeid, x.name, x.modifieddate))
  implicit val read: Read[PntViewRow] = new Read[PntViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[PhonenumbertypeId], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PntViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      phonenumbertypeid = Get[PhonenumbertypeId].unsafeGetNullable(rs, i + 1),
      name = Get[Name].unsafeGetNullable(rs, i + 2),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 3)
    )
  )
}
