/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import doobie.Meta

/** Domain `public.Phone`
  * No constraint
  */
case class Phone(value: String) extends AnyVal
object Phone {
  implicit def ordering(implicit ev: Ordering[String]): Ordering[Phone] = Ordering.by(_.value)
  
  implicit val metaArray: Meta[Array[Phone]] = Meta[Array[String]].imap(_.map(Phone.apply))(_.map(_.value))
  implicit val meta: Meta[Phone] = Meta[String].imap(Phone.apply)(_.value)
}
