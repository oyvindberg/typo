/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package pgtestnull

import adventureworks.TypoBox
import adventureworks.TypoCircle
import adventureworks.TypoHStore
import adventureworks.TypoInet
import adventureworks.TypoInterval
import adventureworks.TypoJson
import adventureworks.TypoJsonb
import adventureworks.TypoLine
import adventureworks.TypoLineSegment
import adventureworks.TypoLocalDate
import adventureworks.TypoLocalDateTime
import adventureworks.TypoLocalTime
import adventureworks.TypoMoney
import adventureworks.TypoOffsetDateTime
import adventureworks.TypoOffsetTime
import adventureworks.TypoPath
import adventureworks.TypoPoint
import adventureworks.TypoPolygon
import adventureworks.TypoXml
import doobie.free.connection.ConnectionIO
import doobie.syntax.SqlInterpolator.SingleFragment.fromWrite
import doobie.syntax.string.toSqlInterpolator
import doobie.util.Write
import fs2.Stream

object PgtestnullRepoImpl extends PgtestnullRepo {
  override def insert(unsaved: PgtestnullRow): ConnectionIO[PgtestnullRow] = {
    sql"""insert into "public".pgtestnull(box, circle, line, lseg, "path", point, polygon, "interval", money, "xml", json, jsonb, hstore, inet, "timestamp", timestampz, "time", timez, "date", uuid, boxes, circlees, linees, lseges, pathes, pointes, polygones, intervales, moneyes, xmles, jsones, jsonbes, hstores, inets, timestamps, timestampzs, times, timezs, dates, uuids)
          values (${fromWrite(unsaved.box)(Write.fromPutOption(TypoBox.put))}::box, ${fromWrite(unsaved.circle)(Write.fromPutOption(TypoCircle.put))}::circle, ${fromWrite(unsaved.line)(Write.fromPutOption(TypoLine.put))}::line, ${fromWrite(unsaved.lseg)(Write.fromPutOption(TypoLineSegment.put))}::lseg, ${fromWrite(unsaved.path)(Write.fromPutOption(TypoPath.put))}::path, ${fromWrite(unsaved.point)(Write.fromPutOption(TypoPoint.put))}::point, ${fromWrite(unsaved.polygon)(Write.fromPutOption(TypoPolygon.put))}::polygon, ${fromWrite(unsaved.interval)(Write.fromPutOption(TypoInterval.put))}::interval, ${fromWrite(unsaved.money)(Write.fromPutOption(TypoMoney.put))}::money, ${fromWrite(unsaved.xml)(Write.fromPutOption(TypoXml.put))}::xml, ${fromWrite(unsaved.json)(Write.fromPutOption(TypoJson.put))}::json, ${fromWrite(unsaved.jsonb)(Write.fromPutOption(TypoJsonb.put))}::jsonb, ${fromWrite(unsaved.hstore)(Write.fromPutOption(TypoHStore.put))}::hstore, ${fromWrite(unsaved.inet)(Write.fromPutOption(TypoInet.put))}::inet, ${fromWrite(unsaved.timestamp)(Write.fromPutOption(TypoLocalDateTime.put))}::timestamp, ${fromWrite(unsaved.timestampz)(Write.fromPutOption(TypoOffsetDateTime.put))}::timestamptz, ${fromWrite(unsaved.time)(Write.fromPutOption(TypoLocalTime.put))}::time, ${fromWrite(unsaved.timez)(Write.fromPutOption(TypoOffsetTime.put))}::timetz, ${fromWrite(unsaved.date)(Write.fromPutOption(TypoLocalDate.put))}::date, ${fromWrite(unsaved.uuid)(Write.fromPutOption(adventureworks.UUIDMeta.put))}::uuid, ${fromWrite(unsaved.boxes)(Write.fromPutOption(TypoBox.arrayPut))}::_box, ${fromWrite(unsaved.circlees)(Write.fromPutOption(TypoCircle.arrayPut))}::_circle, ${fromWrite(unsaved.linees)(Write.fromPutOption(TypoLine.arrayPut))}::_line, ${fromWrite(unsaved.lseges)(Write.fromPutOption(TypoLineSegment.arrayPut))}::_lseg, ${fromWrite(unsaved.pathes)(Write.fromPutOption(TypoPath.arrayPut))}::_path, ${fromWrite(unsaved.pointes)(Write.fromPutOption(TypoPoint.arrayPut))}::_point, ${fromWrite(unsaved.polygones)(Write.fromPutOption(TypoPolygon.arrayPut))}::_polygon, ${fromWrite(unsaved.intervales)(Write.fromPutOption(TypoInterval.arrayPut))}::_interval, ${fromWrite(unsaved.moneyes)(Write.fromPutOption(TypoMoney.arrayPut))}::_money, ${fromWrite(unsaved.xmles)(Write.fromPutOption(TypoXml.arrayPut))}::_xml, ${fromWrite(unsaved.jsones)(Write.fromPutOption(TypoJson.arrayPut))}::_json, ${fromWrite(unsaved.jsonbes)(Write.fromPutOption(TypoJsonb.arrayPut))}::_jsonb, ${fromWrite(unsaved.hstores)(Write.fromPutOption(TypoHStore.arrayPut))}::_hstore, ${fromWrite(unsaved.inets)(Write.fromPutOption(TypoInet.arrayPut))}::_inet, ${fromWrite(unsaved.timestamps)(Write.fromPutOption(TypoLocalDateTime.arrayPut))}::_timestamp, ${fromWrite(unsaved.timestampzs)(Write.fromPutOption(TypoOffsetDateTime.arrayPut))}::_timestamptz, ${fromWrite(unsaved.times)(Write.fromPutOption(TypoLocalTime.arrayPut))}::_time, ${fromWrite(unsaved.timezs)(Write.fromPutOption(TypoOffsetTime.arrayPut))}::_timetz, ${fromWrite(unsaved.dates)(Write.fromPutOption(TypoLocalDate.arrayPut))}::_date, ${fromWrite(unsaved.uuids)(Write.fromPutOption(adventureworks.UUIDArrayMeta.put))}::_uuid)
          returning box, circle, line, lseg, "path", point, polygon, "interval", money::numeric, "xml", json, jsonb, hstore, inet, "timestamp"::text, timestampz::text, "time"::text, timez::text, "date"::text, uuid, boxes, circlees, linees, lseges, pathes, pointes, polygones, intervales, moneyes::numeric[], xmles, jsones, jsonbes, hstores, inets, timestamps::text[], timestampzs::text[], times::text[], timezs::text[], dates::text[], uuids
       """.query(PgtestnullRow.read).unique
  }
  override def selectAll: Stream[ConnectionIO, PgtestnullRow] = {
    sql"""select box, circle, line, lseg, "path", point, polygon, "interval", money::numeric, "xml", json, jsonb, hstore, inet, "timestamp"::text, timestampz::text, "time"::text, timez::text, "date"::text, uuid, boxes, circlees, linees, lseges, pathes, pointes, polygones, intervales, moneyes::numeric[], xmles, jsones, jsonbes, hstores, inets, timestamps::text[], timestampzs::text[], times::text[], timezs::text[], dates::text[], uuids from "public".pgtestnull""".query(PgtestnullRow.read).stream
  }
}
