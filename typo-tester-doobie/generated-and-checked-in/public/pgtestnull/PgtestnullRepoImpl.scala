/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package pgtestnull

import adventureworks.TypoBox
import adventureworks.TypoCircle
import adventureworks.TypoHStore
import adventureworks.TypoInet
import adventureworks.TypoInterval
import adventureworks.TypoJson
import adventureworks.TypoJsonb
import adventureworks.TypoLine
import adventureworks.TypoLineSegment
import adventureworks.TypoMoney
import adventureworks.TypoPath
import adventureworks.TypoPoint
import adventureworks.TypoPolygon
import adventureworks.TypoXml
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet

object PgtestnullRepoImpl extends PgtestnullRepo {
  override def insert(unsaved: PgtestnullRow): ConnectionIO[PgtestnullRow] = {
    sql"""insert into "public".pgtestnull(box, circle, line, lseg, "path", point, polygon, "interval", money, "xml", json, jsonb, hstore, inet, boxes, circlees, linees, lseges, pathes, pointes, polygones, intervales, moneyes, xmles, jsones, jsonbes, hstores, inets)
          values (${unsaved.box}::box, ${unsaved.circle}::circle, ${unsaved.line}::line, ${unsaved.lseg}::lseg, ${unsaved.path}::path, ${unsaved.point}::point, ${unsaved.polygon}::polygon, ${unsaved.interval}::interval, ${unsaved.money}::numeric, ${unsaved.xml}::xml, ${unsaved.json}::json, ${unsaved.jsonb}::jsonb, ${unsaved.hstore}::hstore, ${unsaved.inet}::inet, ${unsaved.boxes}::_box, ${unsaved.circlees}::_circle, ${unsaved.linees}::_line, ${unsaved.lseges}::_lseg, ${unsaved.pathes}::_path, ${unsaved.pointes}::_point, ${unsaved.polygones}::_polygon, ${unsaved.intervales}::_interval, ${unsaved.moneyes}::numeric[], ${unsaved.xmles}::_xml, ${unsaved.jsones}::_json, ${unsaved.jsonbes}::_jsonb, ${unsaved.hstores}::_hstore, ${unsaved.inets}::_inet)
          returning box, circle, line, lseg, "path", point, polygon, "interval", money::numeric, "xml", json, jsonb, hstore, inet, boxes, circlees, linees, lseges, pathes, pointes, polygones, intervales, moneyes::numeric[], xmles, jsones, jsonbes, hstores, inets
       """.query.unique
  }
  override def selectAll: Stream[ConnectionIO, PgtestnullRow] = {
    sql"""select box, circle, line, lseg, "path", point, polygon, "interval", money, "xml", json, jsonb, hstore, inet, boxes, circlees, linees, lseges, pathes, pointes, polygones, intervales, moneyes, xmles, jsones, jsonbes, hstores, inets from "public".pgtestnull""".query[PgtestnullRow].stream
  }
  override def selectByFieldValues(fieldValues: List[PgtestnullFieldOrIdValue[_]]): Stream[ConnectionIO, PgtestnullRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case PgtestnullFieldValue.box(value) => fr"box = $value"
        case PgtestnullFieldValue.circle(value) => fr"circle = $value"
        case PgtestnullFieldValue.line(value) => fr"line = $value"
        case PgtestnullFieldValue.lseg(value) => fr"lseg = $value"
        case PgtestnullFieldValue.path(value) => fr""""path" = $value"""
        case PgtestnullFieldValue.point(value) => fr"point = $value"
        case PgtestnullFieldValue.polygon(value) => fr"polygon = $value"
        case PgtestnullFieldValue.interval(value) => fr""""interval" = $value"""
        case PgtestnullFieldValue.money(value) => fr"money = $value"
        case PgtestnullFieldValue.xml(value) => fr""""xml" = $value"""
        case PgtestnullFieldValue.json(value) => fr"json = $value"
        case PgtestnullFieldValue.jsonb(value) => fr"jsonb = $value"
        case PgtestnullFieldValue.hstore(value) => fr"hstore = $value"
        case PgtestnullFieldValue.inet(value) => fr"inet = $value"
        case PgtestnullFieldValue.boxes(value) => fr"boxes = $value"
        case PgtestnullFieldValue.circlees(value) => fr"circlees = $value"
        case PgtestnullFieldValue.linees(value) => fr"linees = $value"
        case PgtestnullFieldValue.lseges(value) => fr"lseges = $value"
        case PgtestnullFieldValue.pathes(value) => fr"pathes = $value"
        case PgtestnullFieldValue.pointes(value) => fr"pointes = $value"
        case PgtestnullFieldValue.polygones(value) => fr"polygones = $value"
        case PgtestnullFieldValue.intervales(value) => fr"intervales = $value"
        case PgtestnullFieldValue.moneyes(value) => fr"moneyes = $value"
        case PgtestnullFieldValue.xmles(value) => fr"xmles = $value"
        case PgtestnullFieldValue.jsones(value) => fr"jsones = $value"
        case PgtestnullFieldValue.jsonbes(value) => fr"jsonbes = $value"
        case PgtestnullFieldValue.hstores(value) => fr"hstores = $value"
        case PgtestnullFieldValue.inets(value) => fr"inets = $value"
      } :_*
    )
    sql"""select * from "public".pgtestnull $where""".query[PgtestnullRow].stream
  
  }
  implicit val read: Read[PgtestnullRow] =
    new Read[PgtestnullRow](
      gets = List(
        (Get[TypoBox], Nullability.Nullable),
        (Get[TypoCircle], Nullability.Nullable),
        (Get[TypoLine], Nullability.Nullable),
        (Get[TypoLineSegment], Nullability.Nullable),
        (Get[TypoPath], Nullability.Nullable),
        (Get[TypoPoint], Nullability.Nullable),
        (Get[TypoPolygon], Nullability.Nullable),
        (Get[TypoInterval], Nullability.Nullable),
        (Get[TypoMoney], Nullability.Nullable),
        (Get[TypoXml], Nullability.Nullable),
        (Get[TypoJson], Nullability.Nullable),
        (Get[TypoJsonb], Nullability.Nullable),
        (Get[TypoHStore], Nullability.Nullable),
        (Get[TypoInet], Nullability.Nullable),
        (Get[Array[TypoBox]], Nullability.Nullable),
        (Get[Array[TypoCircle]], Nullability.Nullable),
        (Get[Array[TypoLine]], Nullability.Nullable),
        (Get[Array[TypoLineSegment]], Nullability.Nullable),
        (Get[Array[TypoPath]], Nullability.Nullable),
        (Get[Array[TypoPoint]], Nullability.Nullable),
        (Get[Array[TypoPolygon]], Nullability.Nullable),
        (Get[Array[TypoInterval]], Nullability.Nullable),
        (Get[Array[TypoMoney]], Nullability.Nullable),
        (Get[Array[TypoXml]], Nullability.Nullable),
        (Get[Array[TypoJson]], Nullability.Nullable),
        (Get[Array[TypoJsonb]], Nullability.Nullable),
        (Get[Array[TypoHStore]], Nullability.Nullable),
        (Get[Array[TypoInet]], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PgtestnullRow(
        box = Get[TypoBox].unsafeGetNullable(rs, i + 0),
        circle = Get[TypoCircle].unsafeGetNullable(rs, i + 1),
        line = Get[TypoLine].unsafeGetNullable(rs, i + 2),
        lseg = Get[TypoLineSegment].unsafeGetNullable(rs, i + 3),
        path = Get[TypoPath].unsafeGetNullable(rs, i + 4),
        point = Get[TypoPoint].unsafeGetNullable(rs, i + 5),
        polygon = Get[TypoPolygon].unsafeGetNullable(rs, i + 6),
        interval = Get[TypoInterval].unsafeGetNullable(rs, i + 7),
        money = Get[TypoMoney].unsafeGetNullable(rs, i + 8),
        xml = Get[TypoXml].unsafeGetNullable(rs, i + 9),
        json = Get[TypoJson].unsafeGetNullable(rs, i + 10),
        jsonb = Get[TypoJsonb].unsafeGetNullable(rs, i + 11),
        hstore = Get[TypoHStore].unsafeGetNullable(rs, i + 12),
        inet = Get[TypoInet].unsafeGetNullable(rs, i + 13),
        boxes = Get[Array[TypoBox]].unsafeGetNullable(rs, i + 14),
        circlees = Get[Array[TypoCircle]].unsafeGetNullable(rs, i + 15),
        linees = Get[Array[TypoLine]].unsafeGetNullable(rs, i + 16),
        lseges = Get[Array[TypoLineSegment]].unsafeGetNullable(rs, i + 17),
        pathes = Get[Array[TypoPath]].unsafeGetNullable(rs, i + 18),
        pointes = Get[Array[TypoPoint]].unsafeGetNullable(rs, i + 19),
        polygones = Get[Array[TypoPolygon]].unsafeGetNullable(rs, i + 20),
        intervales = Get[Array[TypoInterval]].unsafeGetNullable(rs, i + 21),
        moneyes = Get[Array[TypoMoney]].unsafeGetNullable(rs, i + 22),
        xmles = Get[Array[TypoXml]].unsafeGetNullable(rs, i + 23),
        jsones = Get[Array[TypoJson]].unsafeGetNullable(rs, i + 24),
        jsonbes = Get[Array[TypoJsonb]].unsafeGetNullable(rs, i + 25),
        hstores = Get[Array[TypoHStore]].unsafeGetNullable(rs, i + 26),
        inets = Get[Array[TypoInet]].unsafeGetNullable(rs, i + 27)
      )
    )
  

}
