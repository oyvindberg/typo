/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import doobie.util.Get
import doobie.util.Put
import io.circe.Decoder
import io.circe.Encoder

/** Domain `public.OrderNumber`
  * No constraint
  */
case class OrderNumber(value: String) extends AnyVal
object OrderNumber {
  implicit val arrayGet: Get[Array[OrderNumber]] = Get[Array[String]].map(_.map(OrderNumber.apply))
  implicit val arrayPut: Put[Array[OrderNumber]] = Put[Array[String]].contramap(_.map(_.value))
  implicit val decoder: Decoder[OrderNumber] = Decoder[String].map(OrderNumber.apply)
  implicit val encoder: Encoder[OrderNumber] = Encoder[String].contramap(_.value)
  implicit val get: Get[OrderNumber] = Get[String].map(OrderNumber.apply)
  implicit val ordering: Ordering[OrderNumber] = Ordering.by(_.value)
  implicit val put: Put[OrderNumber] = Put[String].contramap(_.value)
}
