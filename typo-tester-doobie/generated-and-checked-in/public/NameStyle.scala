/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public

import doobie.Get
import doobie.Meta
import doobie.Put
import doobie.Read
import doobie.Write

/** Domain `public.NameStyle`
  * No constraint
  */
case class NameStyle(value: Boolean) extends AnyVal
object NameStyle {
  implicit def ordering(implicit ev: Ordering[Boolean]): Ordering[NameStyle] = Ordering.by(_.value)
  
  implicit val putArray: Put[Array[NameStyle]] = Meta[Array[Boolean]].put.contramap(_.map(_.value))
  implicit val getArray: Get[Array[NameStyle]] = Meta[Array[Boolean]].get.map(_.map(NameStyle.apply))
  implicit val put: Put[NameStyle] = Put[Boolean].contramap(_.value)
  implicit val get: Get[NameStyle] = Get[Boolean].map(NameStyle.apply)
  implicit val write: Write[NameStyle] = Write[Boolean].contramap(_.value)
  implicit val read: Read[NameStyle] = Read[Boolean].map(NameStyle.apply)
}
