/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package jc

import adventureworks.TypoLocalDateTime
import adventureworks.TypoXml
import adventureworks.humanresources.jobcandidate.JobcandidateId
import adventureworks.person.businessentity.BusinessentityId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class JcViewRow(
  id: Option[Int],
  /** Points to [[humanresources.jobcandidate.JobcandidateRow.jobcandidateid]] */
  jobcandidateid: Option[JobcandidateId],
  /** Points to [[humanresources.jobcandidate.JobcandidateRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[humanresources.jobcandidate.JobcandidateRow.resume]] */
  resume: Option[TypoXml],
  /** Points to [[humanresources.jobcandidate.JobcandidateRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object JcViewRow {
  implicit val decoder: Decoder[JcViewRow] = Decoder.forProduct5[JcViewRow, Option[Int], Option[JobcandidateId], Option[BusinessentityId], Option[TypoXml], Option[TypoLocalDateTime]]("id", "jobcandidateid", "businessentityid", "resume", "modifieddate")(JcViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(JobcandidateId.decoder), Decoder.decodeOption(BusinessentityId.decoder), Decoder.decodeOption(TypoXml.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[JcViewRow] = Encoder.forProduct5[JcViewRow, Option[Int], Option[JobcandidateId], Option[BusinessentityId], Option[TypoXml], Option[TypoLocalDateTime]]("id", "jobcandidateid", "businessentityid", "resume", "modifieddate")(x => (x.id, x.jobcandidateid, x.businessentityid, x.resume, x.modifieddate))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(JobcandidateId.encoder), Encoder.encodeOption(BusinessentityId.encoder), Encoder.encodeOption(TypoXml.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[JcViewRow] = new Read[JcViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (JobcandidateId.get, Nullability.Nullable),
      (BusinessentityId.get, Nullability.Nullable),
      (TypoXml.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => JcViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      jobcandidateid = JobcandidateId.get.unsafeGetNullable(rs, i + 1),
      businessentityid = BusinessentityId.get.unsafeGetNullable(rs, i + 2),
      resume = TypoXml.get.unsafeGetNullable(rs, i + 3),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 4)
    )
  )
}
