/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package d

import adventureworks.TypoLocalDateTime
import adventureworks.humanresources.department.DepartmentId
import adventureworks.public.Name
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class DViewRow(
  id: Option[Int],
  /** Points to [[humanresources.department.DepartmentRow.departmentid]] */
  departmentid: Option[DepartmentId],
  /** Points to [[humanresources.department.DepartmentRow.name]] */
  name: Option[Name],
  /** Points to [[humanresources.department.DepartmentRow.groupname]] */
  groupname: Option[Name],
  /** Points to [[humanresources.department.DepartmentRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object DViewRow {
  implicit val decoder: Decoder[DViewRow] = Decoder.forProduct5[DViewRow, Option[Int], Option[DepartmentId], Option[Name], Option[Name], Option[TypoLocalDateTime]]("id", "departmentid", "name", "groupname", "modifieddate")(DViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(DepartmentId.decoder), Decoder.decodeOption(Name.decoder), Decoder.decodeOption(Name.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[DViewRow] = Encoder.forProduct5[DViewRow, Option[Int], Option[DepartmentId], Option[Name], Option[Name], Option[TypoLocalDateTime]]("id", "departmentid", "name", "groupname", "modifieddate")(x => (x.id, x.departmentid, x.name, x.groupname, x.modifieddate))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(DepartmentId.encoder), Encoder.encodeOption(Name.encoder), Encoder.encodeOption(Name.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[DViewRow] = new Read[DViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (DepartmentId.get, Nullability.Nullable),
      (Name.get, Nullability.Nullable),
      (Name.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => DViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      departmentid = DepartmentId.get.unsafeGetNullable(rs, i + 1),
      name = Name.get.unsafeGetNullable(rs, i + 2),
      groupname = Name.get.unsafeGetNullable(rs, i + 3),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 4)
    )
  )
}
