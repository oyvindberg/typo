/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package edh

import adventureworks.TypoLocalDate
import adventureworks.TypoLocalDateTime
import adventureworks.humanresources.department.DepartmentId
import adventureworks.humanresources.shift.ShiftId
import adventureworks.person.businessentity.BusinessentityId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class EdhViewRow(
  id: Option[Int],
  /** Points to [[humanresources.employeedepartmenthistory.EmployeedepartmenthistoryRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[humanresources.employeedepartmenthistory.EmployeedepartmenthistoryRow.departmentid]] */
  departmentid: Option[DepartmentId],
  /** Points to [[humanresources.employeedepartmenthistory.EmployeedepartmenthistoryRow.shiftid]] */
  shiftid: Option[ShiftId],
  /** Points to [[humanresources.employeedepartmenthistory.EmployeedepartmenthistoryRow.startdate]] */
  startdate: Option[TypoLocalDate],
  /** Points to [[humanresources.employeedepartmenthistory.EmployeedepartmenthistoryRow.enddate]] */
  enddate: Option[TypoLocalDate],
  /** Points to [[humanresources.employeedepartmenthistory.EmployeedepartmenthistoryRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object EdhViewRow {
  implicit val decoder: Decoder[EdhViewRow] = Decoder.forProduct7[EdhViewRow, Option[Int], Option[BusinessentityId], Option[DepartmentId], Option[ShiftId], Option[TypoLocalDate], Option[TypoLocalDate], Option[TypoLocalDateTime]]("id", "businessentityid", "departmentid", "shiftid", "startdate", "enddate", "modifieddate")(EdhViewRow.apply)
  implicit val encoder: Encoder[EdhViewRow] = Encoder.forProduct7[EdhViewRow, Option[Int], Option[BusinessentityId], Option[DepartmentId], Option[ShiftId], Option[TypoLocalDate], Option[TypoLocalDate], Option[TypoLocalDateTime]]("id", "businessentityid", "departmentid", "shiftid", "startdate", "enddate", "modifieddate")(x => (x.id, x.businessentityid, x.departmentid, x.shiftid, x.startdate, x.enddate, x.modifieddate))
  implicit val read: Read[EdhViewRow] = new Read[EdhViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[DepartmentId], Nullability.Nullable),
      (Get[ShiftId], Nullability.Nullable),
      (Get[TypoLocalDate], Nullability.Nullable),
      (Get[TypoLocalDate], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => EdhViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 1),
      departmentid = Get[DepartmentId].unsafeGetNullable(rs, i + 2),
      shiftid = Get[ShiftId].unsafeGetNullable(rs, i + 3),
      startdate = Get[TypoLocalDate].unsafeGetNullable(rs, i + 4),
      enddate = Get[TypoLocalDate].unsafeGetNullable(rs, i + 5),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 6)
    )
  )
}
