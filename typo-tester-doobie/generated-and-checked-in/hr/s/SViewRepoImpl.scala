/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package s

import adventureworks.humanresources.shift.ShiftId
import adventureworks.public.Name
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime
import java.time.LocalTime

object SViewRepoImpl extends SViewRepo {
  override def selectAll: Stream[ConnectionIO, SViewRow] = {
    sql"""select "id", shiftid, "name", starttime, endtime, modifieddate from hr.s""".query[SViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[SViewFieldOrIdValue[_]]): Stream[ConnectionIO, SViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case SViewFieldValue.id(value) => fr""""id" = $value"""
        case SViewFieldValue.shiftid(value) => fr"shiftid = $value"
        case SViewFieldValue.name(value) => fr""""name" = $value"""
        case SViewFieldValue.starttime(value) => fr"starttime = $value"
        case SViewFieldValue.endtime(value) => fr"endtime = $value"
        case SViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from hr.s $where".query[SViewRow].stream
  
  }
  implicit val read: Read[SViewRow] =
    new Read[SViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[ShiftId], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[LocalTime], Nullability.Nullable),
        (Get[LocalTime], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => SViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        shiftid = Get[ShiftId].unsafeGetNullable(rs, i + 1),
        name = Get[Name].unsafeGetNullable(rs, i + 2),
        starttime = Get[LocalTime].unsafeGetNullable(rs, i + 3),
        endtime = Get[LocalTime].unsafeGetNullable(rs, i + 4),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 5)
      )
    )
  

}
