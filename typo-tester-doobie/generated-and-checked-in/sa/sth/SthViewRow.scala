/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sth

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.salesterritory.SalesterritoryId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class SthViewRow(
  id: Option[Int],
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.territoryid]] */
  territoryid: Option[SalesterritoryId],
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.startdate]] */
  startdate: Option[TypoLocalDateTime],
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.enddate]] */
  enddate: Option[TypoLocalDateTime],
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[sales.salesterritoryhistory.SalesterritoryhistoryRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object SthViewRow {
  implicit val decoder: Decoder[SthViewRow] = Decoder.forProduct7[SthViewRow, Option[Int], Option[BusinessentityId], Option[SalesterritoryId], Option[TypoLocalDateTime], Option[TypoLocalDateTime], Option[UUID], Option[TypoLocalDateTime]]("id", "businessentityid", "territoryid", "startdate", "enddate", "rowguid", "modifieddate")(SthViewRow.apply)
  implicit val encoder: Encoder[SthViewRow] = Encoder.forProduct7[SthViewRow, Option[Int], Option[BusinessentityId], Option[SalesterritoryId], Option[TypoLocalDateTime], Option[TypoLocalDateTime], Option[UUID], Option[TypoLocalDateTime]]("id", "businessentityid", "territoryid", "startdate", "enddate", "rowguid", "modifieddate")(x => (x.id, x.businessentityid, x.territoryid, x.startdate, x.enddate, x.rowguid, x.modifieddate))
  implicit val read: Read[SthViewRow] = new Read[SthViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[SalesterritoryId], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable),
      (Get[UUID], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => SthViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 1),
      territoryid = Get[SalesterritoryId].unsafeGetNullable(rs, i + 2),
      startdate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 3),
      enddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 4),
      rowguid = Get[UUID].unsafeGetNullable(rs, i + 5),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 6)
    )
  )
}
