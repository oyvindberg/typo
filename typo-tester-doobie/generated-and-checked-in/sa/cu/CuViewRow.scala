/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cu

import adventureworks.TypoLocalDateTime
import adventureworks.public.Name
import adventureworks.sales.currency.CurrencyId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class CuViewRow(
  id: Option[/* bpchar */ String],
  /** Points to [[sales.currency.CurrencyRow.currencycode]] */
  currencycode: Option[CurrencyId],
  /** Points to [[sales.currency.CurrencyRow.name]] */
  name: Option[Name],
  /** Points to [[sales.currency.CurrencyRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object CuViewRow {
  implicit val decoder: Decoder[CuViewRow] = Decoder.forProduct4[CuViewRow, Option[/* bpchar */ String], Option[CurrencyId], Option[Name], Option[TypoLocalDateTime]]("id", "currencycode", "name", "modifieddate")(CuViewRow.apply)
  implicit val encoder: Encoder[CuViewRow] = Encoder.forProduct4[CuViewRow, Option[/* bpchar */ String], Option[CurrencyId], Option[Name], Option[TypoLocalDateTime]]("id", "currencycode", "name", "modifieddate")(x => (x.id, x.currencycode, x.name, x.modifieddate))
  implicit val read: Read[CuViewRow] = new Read[CuViewRow](
    gets = List(
      (Get[/* bpchar */ String], Nullability.Nullable),
      (Get[CurrencyId], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => CuViewRow(
      id = Get[/* bpchar */ String].unsafeGetNullable(rs, i + 0),
      currencycode = Get[CurrencyId].unsafeGetNullable(rs, i + 1),
      name = Get[Name].unsafeGetNullable(rs, i + 2),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 3)
    )
  )
}
