/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cu

import adventureworks.TypoLocalDateTime
import adventureworks.public.Name
import adventureworks.sales.currency.CurrencyId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class CuViewRow(
  id: Option[/* bpchar */ String],
  /** Points to [[sales.currency.CurrencyRow.currencycode]] */
  currencycode: Option[CurrencyId],
  /** Points to [[sales.currency.CurrencyRow.name]] */
  name: Option[Name],
  /** Points to [[sales.currency.CurrencyRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object CuViewRow {
  implicit val decoder: Decoder[CuViewRow] = Decoder.forProduct4[CuViewRow, Option[/* bpchar */ String], Option[CurrencyId], Option[Name], Option[TypoLocalDateTime]]("id", "currencycode", "name", "modifieddate")(CuViewRow.apply)(Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(CurrencyId.decoder), Decoder.decodeOption(Name.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[CuViewRow] = Encoder.forProduct4[CuViewRow, Option[/* bpchar */ String], Option[CurrencyId], Option[Name], Option[TypoLocalDateTime]]("id", "currencycode", "name", "modifieddate")(x => (x.id, x.currencycode, x.name, x.modifieddate))(Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(CurrencyId.encoder), Encoder.encodeOption(Name.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[CuViewRow] = new Read[CuViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.Nullable),
      (CurrencyId.get, Nullability.Nullable),
      (Name.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => CuViewRow(
      id = Meta.StringMeta.get.unsafeGetNullable(rs, i + 0),
      currencycode = CurrencyId.get.unsafeGetNullable(rs, i + 1),
      name = Name.get.unsafeGetNullable(rs, i + 2),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 3)
    )
  )
}
