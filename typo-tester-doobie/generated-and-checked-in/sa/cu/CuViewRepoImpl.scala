/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cu

import adventureworks.public.Name
import adventureworks.sales.currency.CurrencyId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object CuViewRepoImpl extends CuViewRepo {
  override def selectAll: Stream[ConnectionIO, CuViewRow] = {
    sql"""select "id", currencycode, "name", modifieddate from sa.cu""".query[CuViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[CuViewFieldOrIdValue[_]]): Stream[ConnectionIO, CuViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case CuViewFieldValue.id(value) => fr""""id" = $value"""
        case CuViewFieldValue.currencycode(value) => fr"currencycode = $value"
        case CuViewFieldValue.name(value) => fr""""name" = $value"""
        case CuViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from sa.cu $where".query[CuViewRow].stream
  
  }
  implicit val read: Read[CuViewRow] =
    new Read[CuViewRow](
      gets = List(
        (Get[/* bpchar */ String], Nullability.Nullable),
        (Get[CurrencyId], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => CuViewRow(
        id = Get[/* bpchar */ String].unsafeGetNullable(rs, i + 0),
        currencycode = Get[CurrencyId].unsafeGetNullable(rs, i + 1),
        name = Get[Name].unsafeGetNullable(rs, i + 2),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 3)
      )
    )
  

}
