/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sr

import adventureworks.public.Name
import adventureworks.sales.salesreason.SalesreasonId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object SrViewRepoImpl extends SrViewRepo {
  override def selectAll: Stream[ConnectionIO, SrViewRow] = {
    sql"""select "id", salesreasonid, "name", reasontype, modifieddate from sa.sr""".query[SrViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[SrViewFieldOrIdValue[_]]): Stream[ConnectionIO, SrViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case SrViewFieldValue.id(value) => fr""""id" = $value"""
        case SrViewFieldValue.salesreasonid(value) => fr"salesreasonid = $value"
        case SrViewFieldValue.name(value) => fr""""name" = $value"""
        case SrViewFieldValue.reasontype(value) => fr"reasontype = $value"
        case SrViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from sa.sr $where".query[SrViewRow].stream
  
  }
  implicit val read: Read[SrViewRow] =
    new Read[SrViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[SalesreasonId], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => SrViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        salesreasonid = Get[SalesreasonId].unsafeGetNullable(rs, i + 1),
        name = Get[Name].unsafeGetNullable(rs, i + 2),
        reasontype = Get[Name].unsafeGetNullable(rs, i + 3),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 4)
      )
    )
  

}
