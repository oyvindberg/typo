/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package crc

import adventureworks.TypoLocalDateTime
import adventureworks.person.countryregion.CountryregionId
import adventureworks.sales.currency.CurrencyId
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class CrcViewRow(
  /** Points to [[sales.countryregioncurrency.CountryregioncurrencyRow.countryregioncode]] */
  countryregioncode: Option[CountryregionId],
  /** Points to [[sales.countryregioncurrency.CountryregioncurrencyRow.currencycode]] */
  currencycode: Option[CurrencyId],
  /** Points to [[sales.countryregioncurrency.CountryregioncurrencyRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object CrcViewRow {
  implicit val decoder: Decoder[CrcViewRow] = Decoder.forProduct3[CrcViewRow, Option[CountryregionId], Option[CurrencyId], Option[TypoLocalDateTime]]("countryregioncode", "currencycode", "modifieddate")(CrcViewRow.apply)(Decoder.decodeOption(CountryregionId.decoder), Decoder.decodeOption(CurrencyId.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[CrcViewRow] = Encoder.forProduct3[CrcViewRow, Option[CountryregionId], Option[CurrencyId], Option[TypoLocalDateTime]]("countryregioncode", "currencycode", "modifieddate")(x => (x.countryregioncode, x.currencycode, x.modifieddate))(Encoder.encodeOption(CountryregionId.encoder), Encoder.encodeOption(CurrencyId.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[CrcViewRow] = new Read[CrcViewRow](
    gets = List(
      (CountryregionId.get, Nullability.Nullable),
      (CurrencyId.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => CrcViewRow(
      countryregioncode = CountryregionId.get.unsafeGetNullable(rs, i + 0),
      currencycode = CurrencyId.get.unsafeGetNullable(rs, i + 1),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 2)
    )
  )
}
