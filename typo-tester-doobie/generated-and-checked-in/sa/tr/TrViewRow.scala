/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package tr

import adventureworks.TypoLocalDateTime
import adventureworks.person.stateprovince.StateprovinceId
import adventureworks.public.Name
import adventureworks.sales.salestaxrate.SalestaxrateId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class TrViewRow(
  id: Option[Int],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.salestaxrateid]] */
  salestaxrateid: Option[SalestaxrateId],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.stateprovinceid]] */
  stateprovinceid: Option[StateprovinceId],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.taxtype]] */
  taxtype: Option[Int],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.taxrate]] */
  taxrate: Option[BigDecimal],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.name]] */
  name: Option[Name],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object TrViewRow {
  implicit val decoder: Decoder[TrViewRow] = Decoder.forProduct8[TrViewRow, Option[Int], Option[SalestaxrateId], Option[StateprovinceId], Option[Int], Option[BigDecimal], Option[Name], Option[UUID], Option[TypoLocalDateTime]]("id", "salestaxrateid", "stateprovinceid", "taxtype", "taxrate", "name", "rowguid", "modifieddate")(TrViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(SalestaxrateId.decoder), Decoder.decodeOption(StateprovinceId.decoder), Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(Decoder.decodeBigDecimal), Decoder.decodeOption(Name.decoder), Decoder.decodeOption(Decoder.decodeUUID), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[TrViewRow] = Encoder.forProduct8[TrViewRow, Option[Int], Option[SalestaxrateId], Option[StateprovinceId], Option[Int], Option[BigDecimal], Option[Name], Option[UUID], Option[TypoLocalDateTime]]("id", "salestaxrateid", "stateprovinceid", "taxtype", "taxrate", "name", "rowguid", "modifieddate")(x => (x.id, x.salestaxrateid, x.stateprovinceid, x.taxtype, x.taxrate, x.name, x.rowguid, x.modifieddate))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(SalestaxrateId.encoder), Encoder.encodeOption(StateprovinceId.encoder), Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(Encoder.encodeBigDecimal), Encoder.encodeOption(Name.encoder), Encoder.encodeOption(Encoder.encodeUUID), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[TrViewRow] = new Read[TrViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (SalestaxrateId.get, Nullability.Nullable),
      (StateprovinceId.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.ScalaBigDecimalMeta.get, Nullability.Nullable),
      (Name.get, Nullability.Nullable),
      (adventureworks.UUIDMeta.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => TrViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      salestaxrateid = SalestaxrateId.get.unsafeGetNullable(rs, i + 1),
      stateprovinceid = StateprovinceId.get.unsafeGetNullable(rs, i + 2),
      taxtype = Meta.IntMeta.get.unsafeGetNullable(rs, i + 3),
      taxrate = Meta.ScalaBigDecimalMeta.get.unsafeGetNullable(rs, i + 4),
      name = Name.get.unsafeGetNullable(rs, i + 5),
      rowguid = adventureworks.UUIDMeta.get.unsafeGetNullable(rs, i + 6),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 7)
    )
  )
}
