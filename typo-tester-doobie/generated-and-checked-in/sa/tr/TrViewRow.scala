/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package tr

import adventureworks.TypoLocalDateTime
import adventureworks.person.stateprovince.StateprovinceId
import adventureworks.public.Name
import adventureworks.sales.salestaxrate.SalestaxrateId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class TrViewRow(
  id: Option[Int],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.salestaxrateid]] */
  salestaxrateid: Option[SalestaxrateId],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.stateprovinceid]] */
  stateprovinceid: Option[StateprovinceId],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.taxtype]] */
  taxtype: Option[Int],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.taxrate]] */
  taxrate: Option[BigDecimal],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.name]] */
  name: Option[Name],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[sales.salestaxrate.SalestaxrateRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object TrViewRow {
  implicit val decoder: Decoder[TrViewRow] = Decoder.forProduct8[TrViewRow, Option[Int], Option[SalestaxrateId], Option[StateprovinceId], Option[Int], Option[BigDecimal], Option[Name], Option[UUID], Option[TypoLocalDateTime]]("id", "salestaxrateid", "stateprovinceid", "taxtype", "taxrate", "name", "rowguid", "modifieddate")(TrViewRow.apply)
  implicit val encoder: Encoder[TrViewRow] = Encoder.forProduct8[TrViewRow, Option[Int], Option[SalestaxrateId], Option[StateprovinceId], Option[Int], Option[BigDecimal], Option[Name], Option[UUID], Option[TypoLocalDateTime]]("id", "salestaxrateid", "stateprovinceid", "taxtype", "taxrate", "name", "rowguid", "modifieddate")(x => (x.id, x.salestaxrateid, x.stateprovinceid, x.taxtype, x.taxrate, x.name, x.rowguid, x.modifieddate))
  implicit val read: Read[TrViewRow] = new Read[TrViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[SalestaxrateId], Nullability.Nullable),
      (Get[StateprovinceId], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[BigDecimal], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[UUID], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => TrViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      salestaxrateid = Get[SalestaxrateId].unsafeGetNullable(rs, i + 1),
      stateprovinceid = Get[StateprovinceId].unsafeGetNullable(rs, i + 2),
      taxtype = Get[Int].unsafeGetNullable(rs, i + 3),
      taxrate = Get[BigDecimal].unsafeGetNullable(rs, i + 4),
      name = Get[Name].unsafeGetNullable(rs, i + 5),
      rowguid = Get[UUID].unsafeGetNullable(rs, i + 6),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 7)
    )
  )
}
