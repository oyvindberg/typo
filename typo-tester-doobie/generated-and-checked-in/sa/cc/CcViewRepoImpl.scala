/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cc

import adventureworks.sales.creditcard.CreditcardId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object CcViewRepoImpl extends CcViewRepo {
  override def selectAll: Stream[ConnectionIO, CcViewRow] = {
    sql"""select "id", creditcardid, cardtype, cardnumber, expmonth, expyear, modifieddate from sa.cc""".query[CcViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[CcViewFieldOrIdValue[_]]): Stream[ConnectionIO, CcViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case CcViewFieldValue.id(value) => fr""""id" = $value"""
        case CcViewFieldValue.creditcardid(value) => fr"creditcardid = $value"
        case CcViewFieldValue.cardtype(value) => fr"cardtype = $value"
        case CcViewFieldValue.cardnumber(value) => fr"cardnumber = $value"
        case CcViewFieldValue.expmonth(value) => fr"expmonth = $value"
        case CcViewFieldValue.expyear(value) => fr"expyear = $value"
        case CcViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from sa.cc $where".query[CcViewRow].stream
  
  }
  implicit val read: Read[CcViewRow] =
    new Read[CcViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[CreditcardId], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => CcViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        creditcardid = Get[CreditcardId].unsafeGetNullable(rs, i + 1),
        cardtype = Get[String].unsafeGetNullable(rs, i + 2),
        cardnumber = Get[String].unsafeGetNullable(rs, i + 3),
        expmonth = Get[Int].unsafeGetNullable(rs, i + 4),
        expyear = Get[Int].unsafeGetNullable(rs, i + 5),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 6)
      )
    )
  

}
