/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sohsr

import adventureworks.TypoLocalDateTime
import adventureworks.sales.salesorderheader.SalesorderheaderId
import adventureworks.sales.salesreason.SalesreasonId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class SohsrViewRow(
  /** Points to [[sales.salesorderheadersalesreason.SalesorderheadersalesreasonRow.salesorderid]] */
  salesorderid: Option[SalesorderheaderId],
  /** Points to [[sales.salesorderheadersalesreason.SalesorderheadersalesreasonRow.salesreasonid]] */
  salesreasonid: Option[SalesreasonId],
  /** Points to [[sales.salesorderheadersalesreason.SalesorderheadersalesreasonRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object SohsrViewRow {
  implicit val decoder: Decoder[SohsrViewRow] = Decoder.forProduct3[SohsrViewRow, Option[SalesorderheaderId], Option[SalesreasonId], Option[TypoLocalDateTime]]("salesorderid", "salesreasonid", "modifieddate")(SohsrViewRow.apply)
  implicit val encoder: Encoder[SohsrViewRow] = Encoder.forProduct3[SohsrViewRow, Option[SalesorderheaderId], Option[SalesreasonId], Option[TypoLocalDateTime]]("salesorderid", "salesreasonid", "modifieddate")(x => (x.salesorderid, x.salesreasonid, x.modifieddate))
  implicit val read: Read[SohsrViewRow] = new Read[SohsrViewRow](
    gets = List(
      (Get[SalesorderheaderId], Nullability.Nullable),
      (Get[SalesreasonId], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => SohsrViewRow(
      salesorderid = Get[SalesorderheaderId].unsafeGetNullable(rs, i + 0),
      salesreasonid = Get[SalesreasonId].unsafeGetNullable(rs, i + 1),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 2)
    )
  )
}
