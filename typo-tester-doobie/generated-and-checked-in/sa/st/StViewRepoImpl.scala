/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package st

import adventureworks.person.countryregion.CountryregionId
import adventureworks.public.Name
import adventureworks.sales.salesterritory.SalesterritoryId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime
import java.util.UUID

object StViewRepoImpl extends StViewRepo {
  override def selectAll: Stream[ConnectionIO, StViewRow] = {
    sql"""select "id", territoryid, "name", countryregioncode, "group", salesytd, saleslastyear, costytd, costlastyear, rowguid, modifieddate from sa.st""".query[StViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[StViewFieldOrIdValue[_]]): Stream[ConnectionIO, StViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case StViewFieldValue.id(value) => fr""""id" = $value"""
        case StViewFieldValue.territoryid(value) => fr"territoryid = $value"
        case StViewFieldValue.name(value) => fr""""name" = $value"""
        case StViewFieldValue.countryregioncode(value) => fr"countryregioncode = $value"
        case StViewFieldValue.group(value) => fr""""group" = $value"""
        case StViewFieldValue.salesytd(value) => fr"salesytd = $value"
        case StViewFieldValue.saleslastyear(value) => fr"saleslastyear = $value"
        case StViewFieldValue.costytd(value) => fr"costytd = $value"
        case StViewFieldValue.costlastyear(value) => fr"costlastyear = $value"
        case StViewFieldValue.rowguid(value) => fr"rowguid = $value"
        case StViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from sa.st $where".query[StViewRow].stream
  
  }
  implicit val read: Read[StViewRow] =
    new Read[StViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[SalesterritoryId], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[CountryregionId], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[UUID], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => StViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        territoryid = Get[SalesterritoryId].unsafeGetNullable(rs, i + 1),
        name = Get[Name].unsafeGetNullable(rs, i + 2),
        countryregioncode = Get[CountryregionId].unsafeGetNullable(rs, i + 3),
        group = Get[String].unsafeGetNullable(rs, i + 4),
        salesytd = Get[BigDecimal].unsafeGetNullable(rs, i + 5),
        saleslastyear = Get[BigDecimal].unsafeGetNullable(rs, i + 6),
        costytd = Get[BigDecimal].unsafeGetNullable(rs, i + 7),
        costlastyear = Get[BigDecimal].unsafeGetNullable(rs, i + 8),
        rowguid = Get[UUID].unsafeGetNullable(rs, i + 9),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 10)
      )
    )
  

}
