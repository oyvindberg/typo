/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package c

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.customer.CustomerId
import adventureworks.sales.salesterritory.SalesterritoryId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime
import java.util.UUID

object CViewRepoImpl extends CViewRepo {
  override def selectAll: Stream[ConnectionIO, CViewRow] = {
    sql"""select "id", customerid, personid, storeid, territoryid, rowguid, modifieddate from sa."c"""".query[CViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[CViewFieldOrIdValue[_]]): Stream[ConnectionIO, CViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case CViewFieldValue.id(value) => fr""""id" = $value"""
        case CViewFieldValue.customerid(value) => fr"customerid = $value"
        case CViewFieldValue.personid(value) => fr"personid = $value"
        case CViewFieldValue.storeid(value) => fr"storeid = $value"
        case CViewFieldValue.territoryid(value) => fr"territoryid = $value"
        case CViewFieldValue.rowguid(value) => fr"rowguid = $value"
        case CViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"""select * from sa."c" $where""".query[CViewRow].stream
  
  }
  implicit val read: Read[CViewRow] =
    new Read[CViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[CustomerId], Nullability.Nullable),
        (Get[BusinessentityId], Nullability.Nullable),
        (Get[BusinessentityId], Nullability.Nullable),
        (Get[SalesterritoryId], Nullability.Nullable),
        (Get[UUID], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => CViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        customerid = Get[CustomerId].unsafeGetNullable(rs, i + 1),
        personid = Get[BusinessentityId].unsafeGetNullable(rs, i + 2),
        storeid = Get[BusinessentityId].unsafeGetNullable(rs, i + 3),
        territoryid = Get[SalesterritoryId].unsafeGetNullable(rs, i + 4),
        rowguid = Get[UUID].unsafeGetNullable(rs, i + 5),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 6)
      )
    )
  

}
