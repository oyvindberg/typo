/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package c

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.customer.CustomerId
import adventureworks.sales.salesterritory.SalesterritoryId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class CViewRow(
  id: Option[Int],
  /** Points to [[sales.customer.CustomerRow.customerid]] */
  customerid: Option[CustomerId],
  /** Points to [[sales.customer.CustomerRow.personid]] */
  personid: Option[BusinessentityId],
  /** Points to [[sales.customer.CustomerRow.storeid]] */
  storeid: Option[BusinessentityId],
  /** Points to [[sales.customer.CustomerRow.territoryid]] */
  territoryid: Option[SalesterritoryId],
  /** Points to [[sales.customer.CustomerRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[sales.customer.CustomerRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object CViewRow {
  implicit val decoder: Decoder[CViewRow] = Decoder.forProduct7[CViewRow, Option[Int], Option[CustomerId], Option[BusinessentityId], Option[BusinessentityId], Option[SalesterritoryId], Option[UUID], Option[TypoLocalDateTime]]("id", "customerid", "personid", "storeid", "territoryid", "rowguid", "modifieddate")(CViewRow.apply)
  implicit val encoder: Encoder[CViewRow] = Encoder.forProduct7[CViewRow, Option[Int], Option[CustomerId], Option[BusinessentityId], Option[BusinessentityId], Option[SalesterritoryId], Option[UUID], Option[TypoLocalDateTime]]("id", "customerid", "personid", "storeid", "territoryid", "rowguid", "modifieddate")(x => (x.id, x.customerid, x.personid, x.storeid, x.territoryid, x.rowguid, x.modifieddate))
  implicit val read: Read[CViewRow] = new Read[CViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[CustomerId], Nullability.Nullable),
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[SalesterritoryId], Nullability.Nullable),
      (Get[UUID], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => CViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      customerid = Get[CustomerId].unsafeGetNullable(rs, i + 1),
      personid = Get[BusinessentityId].unsafeGetNullable(rs, i + 2),
      storeid = Get[BusinessentityId].unsafeGetNullable(rs, i + 3),
      territoryid = Get[SalesterritoryId].unsafeGetNullable(rs, i + 4),
      rowguid = Get[UUID].unsafeGetNullable(rs, i + 5),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 6)
    )
  )
}
