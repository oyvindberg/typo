/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package personcreditcard

import adventureworks.Defaulted
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.creditcard.CreditcardId
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.time.LocalDateTime

/** This class corresponds to a row in table `sales.personcreditcard` which has not been persisted yet */
case class PersoncreditcardRowUnsaved(
  /** Business entity identification number. Foreign key to Person.BusinessEntityID.
      Points to [[person.person.PersonRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Credit card identification number. Foreign key to CreditCard.CreditCardID.
      Points to [[creditcard.CreditcardRow.creditcardid]] */
  creditcardid: CreditcardId,
  /** Default: now() */
  modifieddate: Defaulted[LocalDateTime] = Defaulted.UseDefault
) {
  def toRow(modifieddateDefault: => LocalDateTime): PersoncreditcardRow =
    PersoncreditcardRow(
      businessentityid = businessentityid,
      creditcardid = creditcardid,
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object PersoncreditcardRowUnsaved {
  implicit val decoder: Decoder[PersoncreditcardRowUnsaved] =
    (c: HCursor) =>
      for {
        businessentityid <- c.downField("businessentityid").as[BusinessentityId]
        creditcardid <- c.downField("creditcardid").as[CreditcardId]
        modifieddate <- c.downField("modifieddate").as[Defaulted[LocalDateTime]]
      } yield PersoncreditcardRowUnsaved(businessentityid, creditcardid, modifieddate)
  implicit val encoder: Encoder[PersoncreditcardRowUnsaved] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "businessentityid" := row.businessentityid,
        "creditcardid" := row.creditcardid,
        "modifieddate" := row.modifieddate
      )}
}
