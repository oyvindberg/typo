/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salespersonquotahistory

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class SalespersonquotahistoryRow(
  /** Sales person identification number. Foreign key to SalesPerson.BusinessEntityID.
      Points to [[salesperson.SalespersonRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Sales quota date. */
  quotadate: TypoLocalDateTime,
  /** Sales quota amount. */
  salesquota: BigDecimal,
  rowguid: UUID,
  modifieddate: TypoLocalDateTime
){
   val compositeId: SalespersonquotahistoryId = SalespersonquotahistoryId(businessentityid, quotadate)
 }

object SalespersonquotahistoryRow {
  implicit val decoder: Decoder[SalespersonquotahistoryRow] = Decoder.forProduct5[SalespersonquotahistoryRow, BusinessentityId, TypoLocalDateTime, BigDecimal, UUID, TypoLocalDateTime]("businessentityid", "quotadate", "salesquota", "rowguid", "modifieddate")(SalespersonquotahistoryRow.apply)
  implicit val encoder: Encoder[SalespersonquotahistoryRow] = Encoder.forProduct5[SalespersonquotahistoryRow, BusinessentityId, TypoLocalDateTime, BigDecimal, UUID, TypoLocalDateTime]("businessentityid", "quotadate", "salesquota", "rowguid", "modifieddate")(x => (x.businessentityid, x.quotadate, x.salesquota, x.rowguid, x.modifieddate))
  implicit val read: Read[SalespersonquotahistoryRow] = new Read[SalespersonquotahistoryRow](
    gets = List(
      (Get[BusinessentityId], Nullability.NoNulls),
      (Get[TypoLocalDateTime], Nullability.NoNulls),
      (Get[BigDecimal], Nullability.NoNulls),
      (Get[UUID], Nullability.NoNulls),
      (Get[TypoLocalDateTime], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => SalespersonquotahistoryRow(
      businessentityid = Get[BusinessentityId].unsafeGetNonNullable(rs, i + 0),
      quotadate = Get[TypoLocalDateTime].unsafeGetNonNullable(rs, i + 1),
      salesquota = Get[BigDecimal].unsafeGetNonNullable(rs, i + 2),
      rowguid = Get[UUID].unsafeGetNonNullable(rs, i + 3),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNonNullable(rs, i + 4)
    )
  )
}
