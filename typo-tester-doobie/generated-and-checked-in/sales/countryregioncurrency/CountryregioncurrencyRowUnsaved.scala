/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package countryregioncurrency

import adventureworks.Defaulted
import adventureworks.person.countryregion.CountryregionId
import adventureworks.sales.currency.CurrencyId
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.time.LocalDateTime

/** This class corresponds to a row in table `sales.countryregioncurrency` which has not been persisted yet */
case class CountryregioncurrencyRowUnsaved(
  /** ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
      Points to [[person.countryregion.CountryregionRow.countryregioncode]] */
  countryregioncode: CountryregionId,
  /** ISO standard currency code. Foreign key to Currency.CurrencyCode.
      Points to [[currency.CurrencyRow.currencycode]] */
  currencycode: CurrencyId,
  /** Default: now() */
  modifieddate: Defaulted[LocalDateTime] = Defaulted.UseDefault
) {
  def toRow(modifieddateDefault: => LocalDateTime): CountryregioncurrencyRow =
    CountryregioncurrencyRow(
      countryregioncode = countryregioncode,
      currencycode = currencycode,
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object CountryregioncurrencyRowUnsaved {
  implicit val decoder: Decoder[CountryregioncurrencyRowUnsaved] =
    (c: HCursor) =>
      for {
        countryregioncode <- c.downField("countryregioncode").as[CountryregionId]
        currencycode <- c.downField("currencycode").as[CurrencyId]
        modifieddate <- c.downField("modifieddate").as[Defaulted[LocalDateTime]]
      } yield CountryregioncurrencyRowUnsaved(countryregioncode, currencycode, modifieddate)
  implicit val encoder: Encoder[CountryregioncurrencyRowUnsaved] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "countryregioncode" := row.countryregioncode,
        "currencycode" := row.currencycode,
        "modifieddate" := row.modifieddate
      )}
}
