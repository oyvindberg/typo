/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package vsalespersonsalesbyfiscalyears

import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet

object VsalespersonsalesbyfiscalyearsViewRepoImpl extends VsalespersonsalesbyfiscalyearsViewRepo {
  override def selectAll: Stream[ConnectionIO, VsalespersonsalesbyfiscalyearsViewRow] = {
    sql"select SalesPersonID, FullName, JobTitle, SalesTerritory, 2012, 2013, 2014 from sales.vsalespersonsalesbyfiscalyears".query[VsalespersonsalesbyfiscalyearsViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[VsalespersonsalesbyfiscalyearsViewFieldOrIdValue[_]]): Stream[ConnectionIO, VsalespersonsalesbyfiscalyearsViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case VsalespersonsalesbyfiscalyearsViewFieldValue.SalesPersonID(value) => fr"SalesPersonID = $value"
        case VsalespersonsalesbyfiscalyearsViewFieldValue.FullName(value) => fr"FullName = $value"
        case VsalespersonsalesbyfiscalyearsViewFieldValue.JobTitle(value) => fr"JobTitle = $value"
        case VsalespersonsalesbyfiscalyearsViewFieldValue.SalesTerritory(value) => fr"SalesTerritory = $value"
        case VsalespersonsalesbyfiscalyearsViewFieldValue.`2012`(value) => fr"2012 = $value"
        case VsalespersonsalesbyfiscalyearsViewFieldValue.`2013`(value) => fr"2013 = $value"
        case VsalespersonsalesbyfiscalyearsViewFieldValue.`2014`(value) => fr"2014 = $value"
      } :_*
    )
    sql"select * from sales.vsalespersonsalesbyfiscalyears $where".query[VsalespersonsalesbyfiscalyearsViewRow].stream
  
  }
  implicit val read: Read[VsalespersonsalesbyfiscalyearsViewRow] =
    new Read[VsalespersonsalesbyfiscalyearsViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => VsalespersonsalesbyfiscalyearsViewRow(
        SalesPersonID = Get[Int].unsafeGetNullable(rs, i + 0),
        FullName = Get[String].unsafeGetNullable(rs, i + 1),
        JobTitle = Get[String].unsafeGetNullable(rs, i + 2),
        SalesTerritory = Get[String].unsafeGetNullable(rs, i + 3),
        `2012` = Get[BigDecimal].unsafeGetNullable(rs, i + 4),
        `2013` = Get[BigDecimal].unsafeGetNullable(rs, i + 5),
        `2014` = Get[BigDecimal].unsafeGetNullable(rs, i + 6)
      )
    )
  

}
