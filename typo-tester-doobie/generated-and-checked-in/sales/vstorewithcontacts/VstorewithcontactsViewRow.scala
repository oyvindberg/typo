/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package vstorewithcontacts

import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import adventureworks.public.Phone
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class VstorewithcontactsViewRow(
  /** Points to [[person.person.PersonRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[person.contacttype.ContacttypeRow.name]] */
  name: Option[Name],
  contacttype: Option[Name],
  /** Points to [[person.person.PersonRow.title]] */
  title: Option[/* max 8 chars */ String],
  /** Points to [[person.person.PersonRow.firstname]] */
  firstname: Option[Name],
  /** Points to [[person.person.PersonRow.middlename]] */
  middlename: Option[Name],
  /** Points to [[person.person.PersonRow.lastname]] */
  lastname: Option[Name],
  /** Points to [[person.person.PersonRow.suffix]] */
  suffix: Option[/* max 10 chars */ String],
  /** Points to [[person.personphone.PersonphoneRow.phonenumber]] */
  phonenumber: Option[Phone],
  phonenumbertype: Option[Name],
  /** Points to [[person.emailaddress.EmailaddressRow.emailaddress]] */
  emailaddress: Option[/* max 50 chars */ String],
  /** Points to [[person.person.PersonRow.emailpromotion]] */
  emailpromotion: Option[Int]
)

object VstorewithcontactsViewRow {
  implicit val decoder: Decoder[VstorewithcontactsViewRow] = Decoder.forProduct12[VstorewithcontactsViewRow, Option[BusinessentityId], Option[Name], Option[Name], Option[/* max 8 chars */ String], Option[Name], Option[Name], Option[Name], Option[/* max 10 chars */ String], Option[Phone], Option[Name], Option[/* max 50 chars */ String], Option[Int]]("businessentityid", "name", "contacttype", "title", "firstname", "middlename", "lastname", "suffix", "phonenumber", "phonenumbertype", "emailaddress", "emailpromotion")(VstorewithcontactsViewRow.apply)
  implicit val encoder: Encoder[VstorewithcontactsViewRow] = Encoder.forProduct12[VstorewithcontactsViewRow, Option[BusinessentityId], Option[Name], Option[Name], Option[/* max 8 chars */ String], Option[Name], Option[Name], Option[Name], Option[/* max 10 chars */ String], Option[Phone], Option[Name], Option[/* max 50 chars */ String], Option[Int]]("businessentityid", "name", "contacttype", "title", "firstname", "middlename", "lastname", "suffix", "phonenumber", "phonenumbertype", "emailaddress", "emailpromotion")(x => (x.businessentityid, x.name, x.contacttype, x.title, x.firstname, x.middlename, x.lastname, x.suffix, x.phonenumber, x.phonenumbertype, x.emailaddress, x.emailpromotion))
  implicit val read: Read[VstorewithcontactsViewRow] = new Read[VstorewithcontactsViewRow](
    gets = List(
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[/* max 8 chars */ String], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[/* max 10 chars */ String], Nullability.Nullable),
      (Get[Phone], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[/* max 50 chars */ String], Nullability.Nullable),
      (Get[Int], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => VstorewithcontactsViewRow(
      businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 0),
      name = Get[Name].unsafeGetNullable(rs, i + 1),
      contacttype = Get[Name].unsafeGetNullable(rs, i + 2),
      title = Get[/* max 8 chars */ String].unsafeGetNullable(rs, i + 3),
      firstname = Get[Name].unsafeGetNullable(rs, i + 4),
      middlename = Get[Name].unsafeGetNullable(rs, i + 5),
      lastname = Get[Name].unsafeGetNullable(rs, i + 6),
      suffix = Get[/* max 10 chars */ String].unsafeGetNullable(rs, i + 7),
      phonenumber = Get[Phone].unsafeGetNullable(rs, i + 8),
      phonenumbertype = Get[Name].unsafeGetNullable(rs, i + 9),
      emailaddress = Get[/* max 50 chars */ String].unsafeGetNullable(rs, i + 10),
      emailpromotion = Get[Int].unsafeGetNullable(rs, i + 11)
    )
  )
}
