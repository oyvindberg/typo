/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package vindividualcustomer

import adventureworks.TypoXml
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import adventureworks.public.Phone
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class VindividualcustomerViewRow(
  /** Points to [[person.person.PersonRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[person.person.PersonRow.title]] */
  title: Option[/* max 8 chars */ String],
  /** Points to [[person.person.PersonRow.firstname]] */
  firstname: Option[Name],
  /** Points to [[person.person.PersonRow.middlename]] */
  middlename: Option[Name],
  /** Points to [[person.person.PersonRow.lastname]] */
  lastname: Option[Name],
  /** Points to [[person.person.PersonRow.suffix]] */
  suffix: Option[/* max 10 chars */ String],
  /** Points to [[person.personphone.PersonphoneRow.phonenumber]] */
  phonenumber: Option[Phone],
  phonenumbertype: Option[Name],
  /** Points to [[person.emailaddress.EmailaddressRow.emailaddress]] */
  emailaddress: Option[/* max 50 chars */ String],
  /** Points to [[person.person.PersonRow.emailpromotion]] */
  emailpromotion: Option[Int],
  addresstype: Option[Name],
  /** Points to [[person.address.AddressRow.addressline1]] */
  addressline1: Option[/* max 60 chars */ String],
  /** Points to [[person.address.AddressRow.addressline2]] */
  addressline2: Option[/* max 60 chars */ String],
  /** Points to [[person.address.AddressRow.city]] */
  city: Option[/* max 30 chars */ String],
  stateprovincename: Option[Name],
  /** Points to [[person.address.AddressRow.postalcode]] */
  postalcode: Option[/* max 15 chars */ String],
  countryregionname: Option[Name],
  /** Points to [[person.person.PersonRow.demographics]] */
  demographics: Option[TypoXml]
)

object VindividualcustomerViewRow {
  implicit val decoder: Decoder[VindividualcustomerViewRow] = Decoder.forProduct18[VindividualcustomerViewRow, Option[BusinessentityId], Option[/* max 8 chars */ String], Option[Name], Option[Name], Option[Name], Option[/* max 10 chars */ String], Option[Phone], Option[Name], Option[/* max 50 chars */ String], Option[Int], Option[Name], Option[/* max 60 chars */ String], Option[/* max 60 chars */ String], Option[/* max 30 chars */ String], Option[Name], Option[/* max 15 chars */ String], Option[Name], Option[TypoXml]]("businessentityid", "title", "firstname", "middlename", "lastname", "suffix", "phonenumber", "phonenumbertype", "emailaddress", "emailpromotion", "addresstype", "addressline1", "addressline2", "city", "stateprovincename", "postalcode", "countryregionname", "demographics")(VindividualcustomerViewRow.apply)
  implicit val encoder: Encoder[VindividualcustomerViewRow] = Encoder.forProduct18[VindividualcustomerViewRow, Option[BusinessentityId], Option[/* max 8 chars */ String], Option[Name], Option[Name], Option[Name], Option[/* max 10 chars */ String], Option[Phone], Option[Name], Option[/* max 50 chars */ String], Option[Int], Option[Name], Option[/* max 60 chars */ String], Option[/* max 60 chars */ String], Option[/* max 30 chars */ String], Option[Name], Option[/* max 15 chars */ String], Option[Name], Option[TypoXml]]("businessentityid", "title", "firstname", "middlename", "lastname", "suffix", "phonenumber", "phonenumbertype", "emailaddress", "emailpromotion", "addresstype", "addressline1", "addressline2", "city", "stateprovincename", "postalcode", "countryregionname", "demographics")(x => (x.businessentityid, x.title, x.firstname, x.middlename, x.lastname, x.suffix, x.phonenumber, x.phonenumbertype, x.emailaddress, x.emailpromotion, x.addresstype, x.addressline1, x.addressline2, x.city, x.stateprovincename, x.postalcode, x.countryregionname, x.demographics))
  implicit val read: Read[VindividualcustomerViewRow] = new Read[VindividualcustomerViewRow](
    gets = List(
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[/* max 8 chars */ String], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[/* max 10 chars */ String], Nullability.Nullable),
      (Get[Phone], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[/* max 50 chars */ String], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[/* max 60 chars */ String], Nullability.Nullable),
      (Get[/* max 60 chars */ String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[/* max 15 chars */ String], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[TypoXml], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => VindividualcustomerViewRow(
      businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 0),
      title = Get[/* max 8 chars */ String].unsafeGetNullable(rs, i + 1),
      firstname = Get[Name].unsafeGetNullable(rs, i + 2),
      middlename = Get[Name].unsafeGetNullable(rs, i + 3),
      lastname = Get[Name].unsafeGetNullable(rs, i + 4),
      suffix = Get[/* max 10 chars */ String].unsafeGetNullable(rs, i + 5),
      phonenumber = Get[Phone].unsafeGetNullable(rs, i + 6),
      phonenumbertype = Get[Name].unsafeGetNullable(rs, i + 7),
      emailaddress = Get[/* max 50 chars */ String].unsafeGetNullable(rs, i + 8),
      emailpromotion = Get[Int].unsafeGetNullable(rs, i + 9),
      addresstype = Get[Name].unsafeGetNullable(rs, i + 10),
      addressline1 = Get[/* max 60 chars */ String].unsafeGetNullable(rs, i + 11),
      addressline2 = Get[/* max 60 chars */ String].unsafeGetNullable(rs, i + 12),
      city = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 13),
      stateprovincename = Get[Name].unsafeGetNullable(rs, i + 14),
      postalcode = Get[/* max 15 chars */ String].unsafeGetNullable(rs, i + 15),
      countryregionname = Get[Name].unsafeGetNullable(rs, i + 16),
      demographics = Get[TypoXml].unsafeGetNullable(rs, i + 17)
    )
  )
}
