/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package vindividualcustomer

import adventureworks.TypoXml
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import adventureworks.public.Phone
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet

object VindividualcustomerViewRepoImpl extends VindividualcustomerViewRepo {
  override def selectAll: Stream[ConnectionIO, VindividualcustomerViewRow] = {
    sql"select businessentityid, title, firstname, middlename, lastname, suffix, phonenumber, phonenumbertype, emailaddress, emailpromotion, addresstype, addressline1, addressline2, city, stateprovincename, postalcode, countryregionname, demographics from sales.vindividualcustomer".query[VindividualcustomerViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[VindividualcustomerViewFieldOrIdValue[_]]): Stream[ConnectionIO, VindividualcustomerViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case VindividualcustomerViewFieldValue.businessentityid(value) => fr"businessentityid = $value"
        case VindividualcustomerViewFieldValue.title(value) => fr"title = $value"
        case VindividualcustomerViewFieldValue.firstname(value) => fr"firstname = $value"
        case VindividualcustomerViewFieldValue.middlename(value) => fr"middlename = $value"
        case VindividualcustomerViewFieldValue.lastname(value) => fr"lastname = $value"
        case VindividualcustomerViewFieldValue.suffix(value) => fr"suffix = $value"
        case VindividualcustomerViewFieldValue.phonenumber(value) => fr"phonenumber = $value"
        case VindividualcustomerViewFieldValue.phonenumbertype(value) => fr"phonenumbertype = $value"
        case VindividualcustomerViewFieldValue.emailaddress(value) => fr"emailaddress = $value"
        case VindividualcustomerViewFieldValue.emailpromotion(value) => fr"emailpromotion = $value"
        case VindividualcustomerViewFieldValue.addresstype(value) => fr"addresstype = $value"
        case VindividualcustomerViewFieldValue.addressline1(value) => fr"addressline1 = $value"
        case VindividualcustomerViewFieldValue.addressline2(value) => fr"addressline2 = $value"
        case VindividualcustomerViewFieldValue.city(value) => fr"city = $value"
        case VindividualcustomerViewFieldValue.stateprovincename(value) => fr"stateprovincename = $value"
        case VindividualcustomerViewFieldValue.postalcode(value) => fr"postalcode = $value"
        case VindividualcustomerViewFieldValue.countryregionname(value) => fr"countryregionname = $value"
        case VindividualcustomerViewFieldValue.demographics(value) => fr"demographics = $value"
      } :_*
    )
    sql"select * from sales.vindividualcustomer $where".query[VindividualcustomerViewRow].stream
  
  }
  implicit val read: Read[VindividualcustomerViewRow] =
    new Read[VindividualcustomerViewRow](
      gets = List(
        (Get[BusinessentityId], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Phone], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[TypoXml], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => VindividualcustomerViewRow(
        businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 0),
        title = Get[String].unsafeGetNullable(rs, i + 1),
        firstname = Get[Name].unsafeGetNullable(rs, i + 2),
        middlename = Get[Name].unsafeGetNullable(rs, i + 3),
        lastname = Get[Name].unsafeGetNullable(rs, i + 4),
        suffix = Get[String].unsafeGetNullable(rs, i + 5),
        phonenumber = Get[Phone].unsafeGetNullable(rs, i + 6),
        phonenumbertype = Get[Name].unsafeGetNullable(rs, i + 7),
        emailaddress = Get[String].unsafeGetNullable(rs, i + 8),
        emailpromotion = Get[Int].unsafeGetNullable(rs, i + 9),
        addresstype = Get[Name].unsafeGetNullable(rs, i + 10),
        addressline1 = Get[String].unsafeGetNullable(rs, i + 11),
        addressline2 = Get[String].unsafeGetNullable(rs, i + 12),
        city = Get[String].unsafeGetNullable(rs, i + 13),
        stateprovincename = Get[Name].unsafeGetNullable(rs, i + 14),
        postalcode = Get[String].unsafeGetNullable(rs, i + 15),
        countryregionname = Get[Name].unsafeGetNullable(rs, i + 16),
        demographics = Get[TypoXml].unsafeGetNullable(rs, i + 17)
      )
    )
  

}
