/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package vstorewithdemographics

import adventureworks.TypoMoney
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class VstorewithdemographicsViewRow(
  /** Points to [[store.StoreRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[store.StoreRow.name]] */
  name: Option[Name],
  AnnualSales: Option[TypoMoney],
  AnnualRevenue: Option[TypoMoney],
  BankName: Option[/* max 50 chars */ String],
  BusinessType: Option[/* max 5 chars */ String],
  YearOpened: Option[Int],
  Specialty: Option[/* max 50 chars */ String],
  SquareFeet: Option[Int],
  Brands: Option[/* max 30 chars */ String],
  Internet: Option[/* max 30 chars */ String],
  NumberEmployees: Option[Int]
)

object VstorewithdemographicsViewRow {
  implicit val decoder: Decoder[VstorewithdemographicsViewRow] = Decoder.forProduct12[VstorewithdemographicsViewRow, Option[BusinessentityId], Option[Name], Option[TypoMoney], Option[TypoMoney], Option[/* max 50 chars */ String], Option[/* max 5 chars */ String], Option[Int], Option[/* max 50 chars */ String], Option[Int], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[Int]]("businessentityid", "name", "AnnualSales", "AnnualRevenue", "BankName", "BusinessType", "YearOpened", "Specialty", "SquareFeet", "Brands", "Internet", "NumberEmployees")(VstorewithdemographicsViewRow.apply)
  implicit val encoder: Encoder[VstorewithdemographicsViewRow] = Encoder.forProduct12[VstorewithdemographicsViewRow, Option[BusinessentityId], Option[Name], Option[TypoMoney], Option[TypoMoney], Option[/* max 50 chars */ String], Option[/* max 5 chars */ String], Option[Int], Option[/* max 50 chars */ String], Option[Int], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[Int]]("businessentityid", "name", "AnnualSales", "AnnualRevenue", "BankName", "BusinessType", "YearOpened", "Specialty", "SquareFeet", "Brands", "Internet", "NumberEmployees")(x => (x.businessentityid, x.name, x.AnnualSales, x.AnnualRevenue, x.BankName, x.BusinessType, x.YearOpened, x.Specialty, x.SquareFeet, x.Brands, x.Internet, x.NumberEmployees))
  implicit val read: Read[VstorewithdemographicsViewRow] = new Read[VstorewithdemographicsViewRow](
    gets = List(
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[TypoMoney], Nullability.Nullable),
      (Get[TypoMoney], Nullability.Nullable),
      (Get[/* max 50 chars */ String], Nullability.Nullable),
      (Get[/* max 5 chars */ String], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[/* max 50 chars */ String], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[Int], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => VstorewithdemographicsViewRow(
      businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 0),
      name = Get[Name].unsafeGetNullable(rs, i + 1),
      AnnualSales = Get[TypoMoney].unsafeGetNullable(rs, i + 2),
      AnnualRevenue = Get[TypoMoney].unsafeGetNullable(rs, i + 3),
      BankName = Get[/* max 50 chars */ String].unsafeGetNullable(rs, i + 4),
      BusinessType = Get[/* max 5 chars */ String].unsafeGetNullable(rs, i + 5),
      YearOpened = Get[Int].unsafeGetNullable(rs, i + 6),
      Specialty = Get[/* max 50 chars */ String].unsafeGetNullable(rs, i + 7),
      SquareFeet = Get[Int].unsafeGetNullable(rs, i + 8),
      Brands = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 9),
      Internet = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 10),
      NumberEmployees = Get[Int].unsafeGetNullable(rs, i + 11)
    )
  )
}
