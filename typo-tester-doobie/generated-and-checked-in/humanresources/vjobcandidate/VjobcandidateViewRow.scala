/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vjobcandidate

import adventureworks.TypoLocalDateTime
import adventureworks.humanresources.jobcandidate.JobcandidateId
import adventureworks.person.businessentity.BusinessentityId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class VjobcandidateViewRow(
  /** Points to [[jobcandidate.JobcandidateRow.jobcandidateid]] */
  jobcandidateid: Option[JobcandidateId],
  /** Points to [[jobcandidate.JobcandidateRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  `Name.Prefix`: Option[/* max 30 chars */ String],
  `Name.First`: Option[/* max 30 chars */ String],
  `Name.Middle`: Option[/* max 30 chars */ String],
  `Name.Last`: Option[/* max 30 chars */ String],
  `Name.Suffix`: Option[/* max 30 chars */ String],
  Skills: Option[String],
  `Addr.Type`: Option[/* max 30 chars */ String],
  `Addr.Loc.CountryRegion`: Option[/* max 100 chars */ String],
  `Addr.Loc.State`: Option[/* max 100 chars */ String],
  `Addr.Loc.City`: Option[/* max 100 chars */ String],
  `Addr.PostalCode`: Option[/* max 20 chars */ String],
  EMail: Option[String],
  WebSite: Option[String],
  /** Points to [[jobcandidate.JobcandidateRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object VjobcandidateViewRow {
  implicit val decoder: Decoder[VjobcandidateViewRow] = Decoder.forProduct16[VjobcandidateViewRow, Option[JobcandidateId], Option[BusinessentityId], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[String], Option[/* max 30 chars */ String], Option[/* max 100 chars */ String], Option[/* max 100 chars */ String], Option[/* max 100 chars */ String], Option[/* max 20 chars */ String], Option[String], Option[String], Option[TypoLocalDateTime]]("jobcandidateid", "businessentityid", "Name.Prefix", "Name.First", "Name.Middle", "Name.Last", "Name.Suffix", "Skills", "Addr.Type", "Addr.Loc.CountryRegion", "Addr.Loc.State", "Addr.Loc.City", "Addr.PostalCode", "EMail", "WebSite", "modifieddate")(VjobcandidateViewRow.apply)
  implicit val encoder: Encoder[VjobcandidateViewRow] = Encoder.forProduct16[VjobcandidateViewRow, Option[JobcandidateId], Option[BusinessentityId], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[/* max 30 chars */ String], Option[String], Option[/* max 30 chars */ String], Option[/* max 100 chars */ String], Option[/* max 100 chars */ String], Option[/* max 100 chars */ String], Option[/* max 20 chars */ String], Option[String], Option[String], Option[TypoLocalDateTime]]("jobcandidateid", "businessentityid", "Name.Prefix", "Name.First", "Name.Middle", "Name.Last", "Name.Suffix", "Skills", "Addr.Type", "Addr.Loc.CountryRegion", "Addr.Loc.State", "Addr.Loc.City", "Addr.PostalCode", "EMail", "WebSite", "modifieddate")(x => (x.jobcandidateid, x.businessentityid, x.`Name.Prefix`, x.`Name.First`, x.`Name.Middle`, x.`Name.Last`, x.`Name.Suffix`, x.Skills, x.`Addr.Type`, x.`Addr.Loc.CountryRegion`, x.`Addr.Loc.State`, x.`Addr.Loc.City`, x.`Addr.PostalCode`, x.EMail, x.WebSite, x.modifieddate))
  implicit val read: Read[VjobcandidateViewRow] = new Read[VjobcandidateViewRow](
    gets = List(
      (Get[JobcandidateId], Nullability.Nullable),
      (Get[BusinessentityId], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[/* max 100 chars */ String], Nullability.Nullable),
      (Get[/* max 100 chars */ String], Nullability.Nullable),
      (Get[/* max 100 chars */ String], Nullability.Nullable),
      (Get[/* max 20 chars */ String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => VjobcandidateViewRow(
      jobcandidateid = Get[JobcandidateId].unsafeGetNullable(rs, i + 0),
      businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 1),
      `Name.Prefix` = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 2),
      `Name.First` = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 3),
      `Name.Middle` = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 4),
      `Name.Last` = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 5),
      `Name.Suffix` = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 6),
      Skills = Get[String].unsafeGetNullable(rs, i + 7),
      `Addr.Type` = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 8),
      `Addr.Loc.CountryRegion` = Get[/* max 100 chars */ String].unsafeGetNullable(rs, i + 9),
      `Addr.Loc.State` = Get[/* max 100 chars */ String].unsafeGetNullable(rs, i + 10),
      `Addr.Loc.City` = Get[/* max 100 chars */ String].unsafeGetNullable(rs, i + 11),
      `Addr.PostalCode` = Get[/* max 20 chars */ String].unsafeGetNullable(rs, i + 12),
      EMail = Get[String].unsafeGetNullable(rs, i + 13),
      WebSite = Get[String].unsafeGetNullable(rs, i + 14),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 15)
    )
  )
}
