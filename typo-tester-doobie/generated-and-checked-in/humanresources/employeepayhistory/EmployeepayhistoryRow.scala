/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package employeepayhistory

import adventureworks.TypoLocalDateTime
import adventureworks.person.businessentity.BusinessentityId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class EmployeepayhistoryRow(
  /** Employee identification number. Foreign key to Employee.BusinessEntityID.
      Points to [[employee.EmployeeRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Date the change in pay is effective */
  ratechangedate: TypoLocalDateTime,
  /** Salary hourly rate. */
  rate: BigDecimal,
  /** 1 = Salary received monthly, 2 = Salary received biweekly */
  payfrequency: Int,
  modifieddate: TypoLocalDateTime
){
   val compositeId: EmployeepayhistoryId = EmployeepayhistoryId(businessentityid, ratechangedate)
 }

object EmployeepayhistoryRow {
  implicit val decoder: Decoder[EmployeepayhistoryRow] = Decoder.forProduct5[EmployeepayhistoryRow, BusinessentityId, TypoLocalDateTime, BigDecimal, Int, TypoLocalDateTime]("businessentityid", "ratechangedate", "rate", "payfrequency", "modifieddate")(EmployeepayhistoryRow.apply)
  implicit val encoder: Encoder[EmployeepayhistoryRow] = Encoder.forProduct5[EmployeepayhistoryRow, BusinessentityId, TypoLocalDateTime, BigDecimal, Int, TypoLocalDateTime]("businessentityid", "ratechangedate", "rate", "payfrequency", "modifieddate")(x => (x.businessentityid, x.ratechangedate, x.rate, x.payfrequency, x.modifieddate))
  implicit val read: Read[EmployeepayhistoryRow] = new Read[EmployeepayhistoryRow](
    gets = List(
      (Get[BusinessentityId], Nullability.NoNulls),
      (Get[TypoLocalDateTime], Nullability.NoNulls),
      (Get[BigDecimal], Nullability.NoNulls),
      (Get[Int], Nullability.NoNulls),
      (Get[TypoLocalDateTime], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => EmployeepayhistoryRow(
      businessentityid = Get[BusinessentityId].unsafeGetNonNullable(rs, i + 0),
      ratechangedate = Get[TypoLocalDateTime].unsafeGetNonNullable(rs, i + 1),
      rate = Get[BigDecimal].unsafeGetNonNullable(rs, i + 2),
      payfrequency = Get[Int].unsafeGetNonNullable(rs, i + 3),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNonNullable(rs, i + 4)
    )
  )
}
