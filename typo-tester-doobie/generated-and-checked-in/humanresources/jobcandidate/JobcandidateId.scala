/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package jobcandidate

import doobie.Meta
import io.circe.Decoder
import io.circe.Encoder

/** Type for the primary key of table `humanresources.jobcandidate` */
case class JobcandidateId(value: Int) extends AnyVal
object JobcandidateId {
  implicit val ordering: Ordering[JobcandidateId] = Ordering.by(_.value)
  implicit val encoder: Encoder[JobcandidateId] =
    Encoder[Int].contramap(_.value)
  implicit val decoder: Decoder[JobcandidateId] =
    Decoder[Int].map(JobcandidateId(_))
  implicit val meta: Meta[JobcandidateId] = Meta[Int].imap(JobcandidateId.apply)(_.value)
  implicit val metaArray: Meta[Array[JobcandidateId]] = Meta[Array[Int]].imap(_.map(JobcandidateId.apply))(_.map(_.value))
}
