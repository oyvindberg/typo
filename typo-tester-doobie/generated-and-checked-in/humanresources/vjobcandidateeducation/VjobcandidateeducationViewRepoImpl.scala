/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vjobcandidateeducation

import adventureworks.humanresources.jobcandidate.JobcandidateId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDate

object VjobcandidateeducationViewRepoImpl extends VjobcandidateeducationViewRepo {
  override def selectAll: Stream[ConnectionIO, VjobcandidateeducationViewRow] = {
    sql"""select jobcandidateid, "Edu.Level", "Edu.StartDate", "Edu.EndDate", "Edu.Degree", "Edu.Major", "Edu.Minor", "Edu.GPA", "Edu.GPAScale", "Edu.School", "Edu.Loc.CountryRegion", "Edu.Loc.State", "Edu.Loc.City" from humanresources.vjobcandidateeducation""".query[VjobcandidateeducationViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[VjobcandidateeducationViewFieldOrIdValue[_]]): Stream[ConnectionIO, VjobcandidateeducationViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case VjobcandidateeducationViewFieldValue.jobcandidateid(value) => fr"jobcandidateid = $value"
        case VjobcandidateeducationViewFieldValue.`Edu.Level`(value) => fr""""Edu.Level" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.StartDate`(value) => fr""""Edu.StartDate" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.EndDate`(value) => fr""""Edu.EndDate" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.Degree`(value) => fr""""Edu.Degree" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.Major`(value) => fr""""Edu.Major" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.Minor`(value) => fr""""Edu.Minor" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.GPA`(value) => fr""""Edu.GPA" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.GPAScale`(value) => fr""""Edu.GPAScale" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.School`(value) => fr""""Edu.School" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.Loc.CountryRegion`(value) => fr""""Edu.Loc.CountryRegion" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.Loc.State`(value) => fr""""Edu.Loc.State" = $value"""
        case VjobcandidateeducationViewFieldValue.`Edu.Loc.City`(value) => fr""""Edu.Loc.City" = $value"""
      } :_*
    )
    sql"select * from humanresources.vjobcandidateeducation $where".query[VjobcandidateeducationViewRow].stream
  
  }
  implicit val read: Read[VjobcandidateeducationViewRow] =
    new Read[VjobcandidateeducationViewRow](
      gets = List(
        (Get[JobcandidateId], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[LocalDate], Nullability.Nullable),
        (Get[LocalDate], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => VjobcandidateeducationViewRow(
        jobcandidateid = Get[JobcandidateId].unsafeGetNullable(rs, i + 0),
        `Edu.Level` = Get[String].unsafeGetNullable(rs, i + 1),
        `Edu.StartDate` = Get[LocalDate].unsafeGetNullable(rs, i + 2),
        `Edu.EndDate` = Get[LocalDate].unsafeGetNullable(rs, i + 3),
        `Edu.Degree` = Get[String].unsafeGetNullable(rs, i + 4),
        `Edu.Major` = Get[String].unsafeGetNullable(rs, i + 5),
        `Edu.Minor` = Get[String].unsafeGetNullable(rs, i + 6),
        `Edu.GPA` = Get[String].unsafeGetNullable(rs, i + 7),
        `Edu.GPAScale` = Get[String].unsafeGetNullable(rs, i + 8),
        `Edu.School` = Get[String].unsafeGetNullable(rs, i + 9),
        `Edu.Loc.CountryRegion` = Get[String].unsafeGetNullable(rs, i + 10),
        `Edu.Loc.State` = Get[String].unsafeGetNullable(rs, i + 11),
        `Edu.Loc.City` = Get[String].unsafeGetNullable(rs, i + 12)
      )
    )
  

}
