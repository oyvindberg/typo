/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vemployee

import adventureworks.TypoXml
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import adventureworks.public.Phone
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet

object VemployeeViewRepoImpl extends VemployeeViewRepo {
  override def selectAll: Stream[ConnectionIO, VemployeeViewRow] = {
    sql"select businessentityid, title, firstname, middlename, lastname, suffix, jobtitle, phonenumber, phonenumbertype, emailaddress, emailpromotion, addressline1, addressline2, city, stateprovincename, postalcode, countryregionname, additionalcontactinfo from humanresources.vemployee".query[VemployeeViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[VemployeeViewFieldOrIdValue[_]]): Stream[ConnectionIO, VemployeeViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case VemployeeViewFieldValue.businessentityid(value) => fr"businessentityid = $value"
        case VemployeeViewFieldValue.title(value) => fr"title = $value"
        case VemployeeViewFieldValue.firstname(value) => fr"firstname = $value"
        case VemployeeViewFieldValue.middlename(value) => fr"middlename = $value"
        case VemployeeViewFieldValue.lastname(value) => fr"lastname = $value"
        case VemployeeViewFieldValue.suffix(value) => fr"suffix = $value"
        case VemployeeViewFieldValue.jobtitle(value) => fr"jobtitle = $value"
        case VemployeeViewFieldValue.phonenumber(value) => fr"phonenumber = $value"
        case VemployeeViewFieldValue.phonenumbertype(value) => fr"phonenumbertype = $value"
        case VemployeeViewFieldValue.emailaddress(value) => fr"emailaddress = $value"
        case VemployeeViewFieldValue.emailpromotion(value) => fr"emailpromotion = $value"
        case VemployeeViewFieldValue.addressline1(value) => fr"addressline1 = $value"
        case VemployeeViewFieldValue.addressline2(value) => fr"addressline2 = $value"
        case VemployeeViewFieldValue.city(value) => fr"city = $value"
        case VemployeeViewFieldValue.stateprovincename(value) => fr"stateprovincename = $value"
        case VemployeeViewFieldValue.postalcode(value) => fr"postalcode = $value"
        case VemployeeViewFieldValue.countryregionname(value) => fr"countryregionname = $value"
        case VemployeeViewFieldValue.additionalcontactinfo(value) => fr"additionalcontactinfo = $value"
      } :_*
    )
    sql"select * from humanresources.vemployee $where".query[VemployeeViewRow].stream
  
  }
  implicit val read: Read[VemployeeViewRow] =
    new Read[VemployeeViewRow](
      gets = List(
        (Get[BusinessentityId], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Phone], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[TypoXml], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => VemployeeViewRow(
        businessentityid = Get[BusinessentityId].unsafeGetNullable(rs, i + 0),
        title = Get[String].unsafeGetNullable(rs, i + 1),
        firstname = Get[Name].unsafeGetNullable(rs, i + 2),
        middlename = Get[Name].unsafeGetNullable(rs, i + 3),
        lastname = Get[Name].unsafeGetNullable(rs, i + 4),
        suffix = Get[String].unsafeGetNullable(rs, i + 5),
        jobtitle = Get[String].unsafeGetNullable(rs, i + 6),
        phonenumber = Get[Phone].unsafeGetNullable(rs, i + 7),
        phonenumbertype = Get[Name].unsafeGetNullable(rs, i + 8),
        emailaddress = Get[String].unsafeGetNullable(rs, i + 9),
        emailpromotion = Get[Int].unsafeGetNullable(rs, i + 10),
        addressline1 = Get[String].unsafeGetNullable(rs, i + 11),
        addressline2 = Get[String].unsafeGetNullable(rs, i + 12),
        city = Get[String].unsafeGetNullable(rs, i + 13),
        stateprovincename = Get[Name].unsafeGetNullable(rs, i + 14),
        postalcode = Get[String].unsafeGetNullable(rs, i + 15),
        countryregionname = Get[Name].unsafeGetNullable(rs, i + 16),
        additionalcontactinfo = Get[TypoXml].unsafeGetNullable(rs, i + 17)
      )
    )
  

}
