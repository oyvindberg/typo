/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package pod

import adventureworks.production.product.ProductId
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object PodViewRepoImpl extends PodViewRepo {
  override def selectAll: Stream[ConnectionIO, PodViewRow] = {
    sql"""select "id", purchaseorderid, purchaseorderdetailid, duedate, orderqty, productid, unitprice, receivedqty, rejectedqty, modifieddate from pu.pod""".query[PodViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[PodViewFieldOrIdValue[_]]): Stream[ConnectionIO, PodViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case PodViewFieldValue.id(value) => fr""""id" = $value"""
        case PodViewFieldValue.purchaseorderid(value) => fr"purchaseorderid = $value"
        case PodViewFieldValue.purchaseorderdetailid(value) => fr"purchaseorderdetailid = $value"
        case PodViewFieldValue.duedate(value) => fr"duedate = $value"
        case PodViewFieldValue.orderqty(value) => fr"orderqty = $value"
        case PodViewFieldValue.productid(value) => fr"productid = $value"
        case PodViewFieldValue.unitprice(value) => fr"unitprice = $value"
        case PodViewFieldValue.receivedqty(value) => fr"receivedqty = $value"
        case PodViewFieldValue.rejectedqty(value) => fr"rejectedqty = $value"
        case PodViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from pu.pod $where".query[PodViewRow].stream
  
  }
  implicit val read: Read[PodViewRow] =
    new Read[PodViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[PurchaseorderheaderId], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[ProductId], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PodViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        purchaseorderid = Get[PurchaseorderheaderId].unsafeGetNullable(rs, i + 1),
        purchaseorderdetailid = Get[Int].unsafeGetNullable(rs, i + 2),
        duedate = Get[LocalDateTime].unsafeGetNullable(rs, i + 3),
        orderqty = Get[Int].unsafeGetNullable(rs, i + 4),
        productid = Get[ProductId].unsafeGetNullable(rs, i + 5),
        unitprice = Get[BigDecimal].unsafeGetNullable(rs, i + 6),
        receivedqty = Get[BigDecimal].unsafeGetNullable(rs, i + 7),
        rejectedqty = Get[BigDecimal].unsafeGetNullable(rs, i + 8),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 9)
      )
    )
  

}
