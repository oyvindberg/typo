/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package pod

import adventureworks.production.product.ProductId
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.time.LocalDateTime

case class PodViewRow(
  id: Option[Int],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.purchaseorderid]] */
  purchaseorderid: Option[PurchaseorderheaderId],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.purchaseorderdetailid]] */
  purchaseorderdetailid: Option[Int],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.duedate]] */
  duedate: Option[LocalDateTime],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.orderqty]] */
  orderqty: Option[Int],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.unitprice]] */
  unitprice: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.receivedqty]] */
  receivedqty: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.rejectedqty]] */
  rejectedqty: Option[BigDecimal],
  /** Points to [[purchasing.purchaseorderdetail.PurchaseorderdetailRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object PodViewRow {
  implicit val decoder: Decoder[PodViewRow] =
    (c: HCursor) =>
      for {
        id <- c.downField("id").as[Option[Int]]
        purchaseorderid <- c.downField("purchaseorderid").as[Option[PurchaseorderheaderId]]
        purchaseorderdetailid <- c.downField("purchaseorderdetailid").as[Option[Int]]
        duedate <- c.downField("duedate").as[Option[LocalDateTime]]
        orderqty <- c.downField("orderqty").as[Option[Int]]
        productid <- c.downField("productid").as[Option[ProductId]]
        unitprice <- c.downField("unitprice").as[Option[BigDecimal]]
        receivedqty <- c.downField("receivedqty").as[Option[BigDecimal]]
        rejectedqty <- c.downField("rejectedqty").as[Option[BigDecimal]]
        modifieddate <- c.downField("modifieddate").as[Option[LocalDateTime]]
      } yield PodViewRow(id, purchaseorderid, purchaseorderdetailid, duedate, orderqty, productid, unitprice, receivedqty, rejectedqty, modifieddate)
  implicit val encoder: Encoder[PodViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "id" := row.id,
        "purchaseorderid" := row.purchaseorderid,
        "purchaseorderdetailid" := row.purchaseorderdetailid,
        "duedate" := row.duedate,
        "orderqty" := row.orderqty,
        "productid" := row.productid,
        "unitprice" := row.unitprice,
        "receivedqty" := row.receivedqty,
        "rejectedqty" := row.rejectedqty,
        "modifieddate" := row.modifieddate
      )}
}
