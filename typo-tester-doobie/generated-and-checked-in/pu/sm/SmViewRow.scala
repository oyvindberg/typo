/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pu
package sm

import adventureworks.TypoLocalDateTime
import adventureworks.public.Name
import adventureworks.purchasing.shipmethod.ShipmethodId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class SmViewRow(
  id: Option[Int],
  /** Points to [[purchasing.shipmethod.ShipmethodRow.shipmethodid]] */
  shipmethodid: Option[ShipmethodId],
  /** Points to [[purchasing.shipmethod.ShipmethodRow.name]] */
  name: Option[Name],
  /** Points to [[purchasing.shipmethod.ShipmethodRow.shipbase]] */
  shipbase: Option[BigDecimal],
  /** Points to [[purchasing.shipmethod.ShipmethodRow.shiprate]] */
  shiprate: Option[BigDecimal],
  /** Points to [[purchasing.shipmethod.ShipmethodRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[purchasing.shipmethod.ShipmethodRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object SmViewRow {
  implicit val decoder: Decoder[SmViewRow] = Decoder.forProduct7[SmViewRow, Option[Int], Option[ShipmethodId], Option[Name], Option[BigDecimal], Option[BigDecimal], Option[UUID], Option[TypoLocalDateTime]]("id", "shipmethodid", "name", "shipbase", "shiprate", "rowguid", "modifieddate")(SmViewRow.apply)
  implicit val encoder: Encoder[SmViewRow] = Encoder.forProduct7[SmViewRow, Option[Int], Option[ShipmethodId], Option[Name], Option[BigDecimal], Option[BigDecimal], Option[UUID], Option[TypoLocalDateTime]]("id", "shipmethodid", "name", "shipbase", "shiprate", "rowguid", "modifieddate")(x => (x.id, x.shipmethodid, x.name, x.shipbase, x.shiprate, x.rowguid, x.modifieddate))
  implicit val read: Read[SmViewRow] = new Read[SmViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[ShipmethodId], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[BigDecimal], Nullability.Nullable),
      (Get[BigDecimal], Nullability.Nullable),
      (Get[UUID], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => SmViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      shipmethodid = Get[ShipmethodId].unsafeGetNullable(rs, i + 1),
      name = Get[Name].unsafeGetNullable(rs, i + 2),
      shipbase = Get[BigDecimal].unsafeGetNullable(rs, i + 3),
      shiprate = Get[BigDecimal].unsafeGetNullable(rs, i + 4),
      rowguid = Get[UUID].unsafeGetNullable(rs, i + 5),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 6)
    )
  )
}
