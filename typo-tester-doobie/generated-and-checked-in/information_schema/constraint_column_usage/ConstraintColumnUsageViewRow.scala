/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package constraint_column_usage

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class ConstraintColumnUsageViewRow(
  tableCatalog: Option[SqlIdentifier],
  tableSchema: Option[SqlIdentifier],
  tableName: Option[SqlIdentifier],
  columnName: Option[SqlIdentifier],
  constraintCatalog: Option[SqlIdentifier],
  constraintSchema: Option[SqlIdentifier],
  constraintName: Option[SqlIdentifier]
)

object ConstraintColumnUsageViewRow {
  implicit val decoder: Decoder[ConstraintColumnUsageViewRow] = Decoder.forProduct7[ConstraintColumnUsageViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("table_catalog", "table_schema", "table_name", "column_name", "constraint_catalog", "constraint_schema", "constraint_name")(ConstraintColumnUsageViewRow.apply)
  implicit val encoder: Encoder[ConstraintColumnUsageViewRow] = Encoder.forProduct7[ConstraintColumnUsageViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("table_catalog", "table_schema", "table_name", "column_name", "constraint_catalog", "constraint_schema", "constraint_name")(x => (x.tableCatalog, x.tableSchema, x.tableName, x.columnName, x.constraintCatalog, x.constraintSchema, x.constraintName))
  implicit val read: Read[ConstraintColumnUsageViewRow] = new Read[ConstraintColumnUsageViewRow](
    gets = List(
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => ConstraintColumnUsageViewRow(
      tableCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
      tableSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
      tableName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
      columnName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 3),
      constraintCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 4),
      constraintSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 5),
      constraintName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 6)
    )
  )
}
