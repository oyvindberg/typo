/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package foreign_servers

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class ForeignServersViewStructure[Row](val prefix: Option[String], val extract: Row => ForeignServersViewRow, val merge: (Row, ForeignServersViewRow) => Row)
  extends Relation[ForeignServersViewFields, ForeignServersViewRow, Row]
    with ForeignServersViewFields[Row] { outer =>

  override val foreignServerCatalog = new OptField[SqlIdentifier, Row](prefix, "foreign_server_catalog", None, Some("information_schema.sql_identifier"))(x => extract(x).foreignServerCatalog, (row, value) => merge(row, extract(row).copy(foreignServerCatalog = value)))
  override val foreignServerName = new OptField[SqlIdentifier, Row](prefix, "foreign_server_name", None, Some("information_schema.sql_identifier"))(x => extract(x).foreignServerName, (row, value) => merge(row, extract(row).copy(foreignServerName = value)))
  override val foreignDataWrapperCatalog = new OptField[SqlIdentifier, Row](prefix, "foreign_data_wrapper_catalog", None, Some("information_schema.sql_identifier"))(x => extract(x).foreignDataWrapperCatalog, (row, value) => merge(row, extract(row).copy(foreignDataWrapperCatalog = value)))
  override val foreignDataWrapperName = new OptField[SqlIdentifier, Row](prefix, "foreign_data_wrapper_name", None, Some("information_schema.sql_identifier"))(x => extract(x).foreignDataWrapperName, (row, value) => merge(row, extract(row).copy(foreignDataWrapperName = value)))
  override val foreignServerType = new OptField[CharacterData, Row](prefix, "foreign_server_type", None, Some("information_schema.character_data"))(x => extract(x).foreignServerType, (row, value) => merge(row, extract(row).copy(foreignServerType = value)))
  override val foreignServerVersion = new OptField[CharacterData, Row](prefix, "foreign_server_version", None, Some("information_schema.character_data"))(x => extract(x).foreignServerVersion, (row, value) => merge(row, extract(row).copy(foreignServerVersion = value)))
  override val authorizationIdentifier = new OptField[SqlIdentifier, Row](prefix, "authorization_identifier", None, Some("information_schema.sql_identifier"))(x => extract(x).authorizationIdentifier, (row, value) => merge(row, extract(row).copy(authorizationIdentifier = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](foreignServerCatalog, foreignServerName, foreignDataWrapperCatalog, foreignDataWrapperName, foreignServerType, foreignServerVersion, authorizationIdentifier)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => ForeignServersViewRow, merge: (NewRow, ForeignServersViewRow) => NewRow): ForeignServersViewStructure[NewRow] =
    new ForeignServersViewStructure(prefix, extract, merge)
}
