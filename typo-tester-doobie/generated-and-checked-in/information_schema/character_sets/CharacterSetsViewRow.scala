/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package character_sets

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class CharacterSetsViewRow(
  characterSetCatalog: Option[SqlIdentifier],
  characterSetSchema: Option[SqlIdentifier],
  characterSetName: Option[SqlIdentifier],
  characterRepertoire: Option[SqlIdentifier],
  formOfUse: Option[SqlIdentifier],
  defaultCollateCatalog: Option[SqlIdentifier],
  defaultCollateSchema: Option[SqlIdentifier],
  defaultCollateName: Option[SqlIdentifier]
)

object CharacterSetsViewRow {
  implicit val decoder: Decoder[CharacterSetsViewRow] = Decoder.forProduct8[CharacterSetsViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("character_set_catalog", "character_set_schema", "character_set_name", "character_repertoire", "form_of_use", "default_collate_catalog", "default_collate_schema", "default_collate_name")(CharacterSetsViewRow.apply)
  implicit val encoder: Encoder[CharacterSetsViewRow] = Encoder.forProduct8[CharacterSetsViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("character_set_catalog", "character_set_schema", "character_set_name", "character_repertoire", "form_of_use", "default_collate_catalog", "default_collate_schema", "default_collate_name")(x => (x.characterSetCatalog, x.characterSetSchema, x.characterSetName, x.characterRepertoire, x.formOfUse, x.defaultCollateCatalog, x.defaultCollateSchema, x.defaultCollateName))
  implicit val read: Read[CharacterSetsViewRow] = new Read[CharacterSetsViewRow](
    gets = List(
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => CharacterSetsViewRow(
      characterSetCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
      characterSetSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
      characterSetName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
      characterRepertoire = Get[SqlIdentifier].unsafeGetNullable(rs, i + 3),
      formOfUse = Get[SqlIdentifier].unsafeGetNullable(rs, i + 4),
      defaultCollateCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 5),
      defaultCollateSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 6),
      defaultCollateName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 7)
    )
  )
}
