/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package `_pg_foreign_table_columns`

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgForeignTableColumnsViewRow(
  nspname: Option[String],
  relname: Option[String],
  attname: Option[String],
  attfdwoptions: Option[Array[String]]
)

object PgForeignTableColumnsViewRow {
  implicit val decoder: Decoder[PgForeignTableColumnsViewRow] = Decoder.forProduct4[PgForeignTableColumnsViewRow, Option[String], Option[String], Option[String], Option[Array[String]]]("nspname", "relname", "attname", "attfdwoptions")(PgForeignTableColumnsViewRow.apply)
  implicit val encoder: Encoder[PgForeignTableColumnsViewRow] = Encoder.forProduct4[PgForeignTableColumnsViewRow, Option[String], Option[String], Option[String], Option[Array[String]]]("nspname", "relname", "attname", "attfdwoptions")(x => (x.nspname, x.relname, x.attname, x.attfdwoptions))
  implicit val read: Read[PgForeignTableColumnsViewRow] = new Read[PgForeignTableColumnsViewRow](
    gets = List(
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[Array[String]], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgForeignTableColumnsViewRow(
      nspname = Get[String].unsafeGetNullable(rs, i + 0),
      relname = Get[String].unsafeGetNullable(rs, i + 1),
      attname = Get[String].unsafeGetNullable(rs, i + 2),
      attfdwoptions = Get[Array[String]].unsafeGetNullable(rs, i + 3)
    )
  )
}
