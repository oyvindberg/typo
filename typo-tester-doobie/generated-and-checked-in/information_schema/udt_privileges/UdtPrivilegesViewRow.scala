/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package udt_privileges

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.YesOrNo
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class UdtPrivilegesViewRow(
  grantor: Option[SqlIdentifier],
  grantee: Option[SqlIdentifier],
  udtCatalog: Option[SqlIdentifier],
  udtSchema: Option[SqlIdentifier],
  udtName: Option[SqlIdentifier],
  privilegeType: Option[CharacterData],
  isGrantable: Option[YesOrNo]
)

object UdtPrivilegesViewRow {
  implicit val decoder: Decoder[UdtPrivilegesViewRow] = Decoder.forProduct7[UdtPrivilegesViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[CharacterData], Option[YesOrNo]]("grantor", "grantee", "udt_catalog", "udt_schema", "udt_name", "privilege_type", "is_grantable")(UdtPrivilegesViewRow.apply)
  implicit val encoder: Encoder[UdtPrivilegesViewRow] = Encoder.forProduct7[UdtPrivilegesViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[CharacterData], Option[YesOrNo]]("grantor", "grantee", "udt_catalog", "udt_schema", "udt_name", "privilege_type", "is_grantable")(x => (x.grantor, x.grantee, x.udtCatalog, x.udtSchema, x.udtName, x.privilegeType, x.isGrantable))
  implicit val read: Read[UdtPrivilegesViewRow] = new Read[UdtPrivilegesViewRow](
    gets = List(
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[CharacterData], Nullability.Nullable),
      (Get[YesOrNo], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => UdtPrivilegesViewRow(
      grantor = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
      grantee = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
      udtCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
      udtSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 3),
      udtName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 4),
      privilegeType = Get[CharacterData].unsafeGetNullable(rs, i + 5),
      isGrantable = Get[YesOrNo].unsafeGetNullable(rs, i + 6)
    )
  )
}
