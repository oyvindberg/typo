/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package collations

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class CollationsViewRow(
  collationCatalog: Option[SqlIdentifier],
  collationSchema: Option[SqlIdentifier],
  collationName: Option[SqlIdentifier],
  padAttribute: Option[CharacterData]
)

object CollationsViewRow {
  implicit val decoder: Decoder[CollationsViewRow] =
    (c: HCursor) =>
      for {
        collationCatalog <- c.downField("collation_catalog").as[Option[SqlIdentifier]]
        collationSchema <- c.downField("collation_schema").as[Option[SqlIdentifier]]
        collationName <- c.downField("collation_name").as[Option[SqlIdentifier]]
        padAttribute <- c.downField("pad_attribute").as[Option[CharacterData]]
      } yield CollationsViewRow(collationCatalog, collationSchema, collationName, padAttribute)
  implicit val encoder: Encoder[CollationsViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "collation_catalog" := row.collationCatalog,
        "collation_schema" := row.collationSchema,
        "collation_name" := row.collationName,
        "pad_attribute" := row.padAttribute
      )}
  implicit val read: Read[CollationsViewRow] =
    new Read[CollationsViewRow](
      gets = List(
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => CollationsViewRow(
        collationCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
        collationSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
        collationName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
        padAttribute = Get[CharacterData].unsafeGetNullable(rs, i + 3)
      )
    )
  

}
