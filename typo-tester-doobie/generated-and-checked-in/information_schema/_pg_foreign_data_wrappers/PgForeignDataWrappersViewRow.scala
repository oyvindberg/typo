/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package `_pg_foreign_data_wrappers`

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PgForeignDataWrappersViewRow(
  oid: Option[/* oid */ Long],
  fdwowner: Option[/* oid */ Long],
  fdwoptions: Option[Array[String]],
  foreignDataWrapperCatalog: Option[SqlIdentifier],
  foreignDataWrapperName: Option[SqlIdentifier],
  authorizationIdentifier: Option[SqlIdentifier],
  foreignDataWrapperLanguage: Option[CharacterData]
)

object PgForeignDataWrappersViewRow {
  implicit val decoder: Decoder[PgForeignDataWrappersViewRow] = Decoder.forProduct7[PgForeignDataWrappersViewRow, Option[/* oid */ Long], Option[/* oid */ Long], Option[Array[String]], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[CharacterData]]("oid", "fdwowner", "fdwoptions", "foreign_data_wrapper_catalog", "foreign_data_wrapper_name", "authorization_identifier", "foreign_data_wrapper_language")(PgForeignDataWrappersViewRow.apply)
  implicit val encoder: Encoder[PgForeignDataWrappersViewRow] = Encoder.forProduct7[PgForeignDataWrappersViewRow, Option[/* oid */ Long], Option[/* oid */ Long], Option[Array[String]], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[CharacterData]]("oid", "fdwowner", "fdwoptions", "foreign_data_wrapper_catalog", "foreign_data_wrapper_name", "authorization_identifier", "foreign_data_wrapper_language")(x => (x.oid, x.fdwowner, x.fdwoptions, x.foreignDataWrapperCatalog, x.foreignDataWrapperName, x.authorizationIdentifier, x.foreignDataWrapperLanguage))
  implicit val read: Read[PgForeignDataWrappersViewRow] = new Read[PgForeignDataWrappersViewRow](
    gets = List(
      (Get[/* oid */ Long], Nullability.Nullable),
      (Get[/* oid */ Long], Nullability.Nullable),
      (Get[Array[String]], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[CharacterData], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PgForeignDataWrappersViewRow(
      oid = Get[/* oid */ Long].unsafeGetNullable(rs, i + 0),
      fdwowner = Get[/* oid */ Long].unsafeGetNullable(rs, i + 1),
      fdwoptions = Get[Array[String]].unsafeGetNullable(rs, i + 2),
      foreignDataWrapperCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 3),
      foreignDataWrapperName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 4),
      authorizationIdentifier = Get[SqlIdentifier].unsafeGetNullable(rs, i + 5),
      foreignDataWrapperLanguage = Get[CharacterData].unsafeGetNullable(rs, i + 6)
    )
  )
}
