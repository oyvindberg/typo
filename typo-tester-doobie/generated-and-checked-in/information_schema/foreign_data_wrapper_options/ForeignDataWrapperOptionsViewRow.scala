/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package foreign_data_wrapper_options

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class ForeignDataWrapperOptionsViewRow(
  /** Points to [[`_pg_foreign_data_wrappers`.PgForeignDataWrappersViewRow.foreignDataWrapperCatalog]] */
  foreignDataWrapperCatalog: Option[SqlIdentifier],
  /** Points to [[`_pg_foreign_data_wrappers`.PgForeignDataWrappersViewRow.foreignDataWrapperName]] */
  foreignDataWrapperName: Option[SqlIdentifier],
  optionName: Option[SqlIdentifier],
  optionValue: Option[CharacterData]
)

object ForeignDataWrapperOptionsViewRow {
  implicit val decoder: Decoder[ForeignDataWrapperOptionsViewRow] =
    (c: HCursor) =>
      for {
        foreignDataWrapperCatalog <- c.downField("foreign_data_wrapper_catalog").as[Option[SqlIdentifier]]
        foreignDataWrapperName <- c.downField("foreign_data_wrapper_name").as[Option[SqlIdentifier]]
        optionName <- c.downField("option_name").as[Option[SqlIdentifier]]
        optionValue <- c.downField("option_value").as[Option[CharacterData]]
      } yield ForeignDataWrapperOptionsViewRow(foreignDataWrapperCatalog, foreignDataWrapperName, optionName, optionValue)
  implicit val encoder: Encoder[ForeignDataWrapperOptionsViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "foreign_data_wrapper_catalog" := row.foreignDataWrapperCatalog,
        "foreign_data_wrapper_name" := row.foreignDataWrapperName,
        "option_name" := row.optionName,
        "option_value" := row.optionValue
      )}
  implicit val read: Read[ForeignDataWrapperOptionsViewRow] =
    new Read[ForeignDataWrapperOptionsViewRow](
      gets = List(
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => ForeignDataWrapperOptionsViewRow(
        foreignDataWrapperCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
        foreignDataWrapperName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
        optionName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
        optionValue = Get[CharacterData].unsafeGetNullable(rs, i + 3)
      )
    )
  

}
