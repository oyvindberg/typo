/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routine_column_usage

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class RoutineColumnUsageViewRow(
  specificCatalog: Option[SqlIdentifier],
  specificSchema: Option[SqlIdentifier],
  specificName: Option[SqlIdentifier],
  routineCatalog: Option[SqlIdentifier],
  routineSchema: Option[SqlIdentifier],
  routineName: Option[SqlIdentifier],
  tableCatalog: Option[SqlIdentifier],
  tableSchema: Option[SqlIdentifier],
  tableName: Option[SqlIdentifier],
  columnName: Option[SqlIdentifier]
)

object RoutineColumnUsageViewRow {
  implicit val decoder: Decoder[RoutineColumnUsageViewRow] = Decoder.forProduct10[RoutineColumnUsageViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("specific_catalog", "specific_schema", "specific_name", "routine_catalog", "routine_schema", "routine_name", "table_catalog", "table_schema", "table_name", "column_name")(RoutineColumnUsageViewRow.apply)
  implicit val encoder: Encoder[RoutineColumnUsageViewRow] = Encoder.forProduct10[RoutineColumnUsageViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("specific_catalog", "specific_schema", "specific_name", "routine_catalog", "routine_schema", "routine_name", "table_catalog", "table_schema", "table_name", "column_name")(x => (x.specificCatalog, x.specificSchema, x.specificName, x.routineCatalog, x.routineSchema, x.routineName, x.tableCatalog, x.tableSchema, x.tableName, x.columnName))
  implicit val read: Read[RoutineColumnUsageViewRow] = new Read[RoutineColumnUsageViewRow](
    gets = List(
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => RoutineColumnUsageViewRow(
      specificCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
      specificSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
      specificName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
      routineCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 3),
      routineSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 4),
      routineName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 5),
      tableCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 6),
      tableSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 7),
      tableName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 8),
      columnName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 9)
    )
  )
}
