/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package sql_parts

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.YesOrNo
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class SqlPartsRow(
  featureId: Option[CharacterData],
  featureName: Option[CharacterData],
  isSupported: Option[YesOrNo],
  isVerifiedBy: Option[CharacterData],
  comments: Option[CharacterData]
)

object SqlPartsRow {
  implicit val decoder: Decoder[SqlPartsRow] =
    (c: HCursor) =>
      for {
        featureId <- c.downField("feature_id").as[Option[CharacterData]]
        featureName <- c.downField("feature_name").as[Option[CharacterData]]
        isSupported <- c.downField("is_supported").as[Option[YesOrNo]]
        isVerifiedBy <- c.downField("is_verified_by").as[Option[CharacterData]]
        comments <- c.downField("comments").as[Option[CharacterData]]
      } yield SqlPartsRow(featureId, featureName, isSupported, isVerifiedBy, comments)
  implicit val encoder: Encoder[SqlPartsRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "feature_id" := row.featureId,
        "feature_name" := row.featureName,
        "is_supported" := row.isSupported,
        "is_verified_by" := row.isVerifiedBy,
        "comments" := row.comments
      )}
  implicit val read: Read[SqlPartsRow] =
    new Read[SqlPartsRow](
      gets = List(
        (Get[CharacterData], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => SqlPartsRow(
        featureId = Get[CharacterData].unsafeGetNullable(rs, i + 0),
        featureName = Get[CharacterData].unsafeGetNullable(rs, i + 1),
        isSupported = Get[YesOrNo].unsafeGetNullable(rs, i + 2),
        isVerifiedBy = Get[CharacterData].unsafeGetNullable(rs, i + 3),
        comments = Get[CharacterData].unsafeGetNullable(rs, i + 4)
      )
    )
  

}
