/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package view_column_usage

import adventureworks.information_schema.SqlIdentifier
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class ViewColumnUsageViewRow(
  viewCatalog: Option[SqlIdentifier],
  viewSchema: Option[SqlIdentifier],
  viewName: Option[SqlIdentifier],
  tableCatalog: Option[SqlIdentifier],
  tableSchema: Option[SqlIdentifier],
  tableName: Option[SqlIdentifier],
  columnName: Option[SqlIdentifier]
)

object ViewColumnUsageViewRow {
  implicit val decoder: Decoder[ViewColumnUsageViewRow] = Decoder.forProduct7[ViewColumnUsageViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("view_catalog", "view_schema", "view_name", "table_catalog", "table_schema", "table_name", "column_name")(ViewColumnUsageViewRow.apply)
  implicit val encoder: Encoder[ViewColumnUsageViewRow] = Encoder.forProduct7[ViewColumnUsageViewRow, Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier], Option[SqlIdentifier]]("view_catalog", "view_schema", "view_name", "table_catalog", "table_schema", "table_name", "column_name")(x => (x.viewCatalog, x.viewSchema, x.viewName, x.tableCatalog, x.tableSchema, x.tableName, x.columnName))
  implicit val read: Read[ViewColumnUsageViewRow] = new Read[ViewColumnUsageViewRow](
    gets = List(
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable),
      (Get[SqlIdentifier], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => ViewColumnUsageViewRow(
      viewCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
      viewSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
      viewName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
      tableCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 3),
      tableSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 4),
      tableName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 5),
      columnName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 6)
    )
  )
}
