/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routines

import adventureworks.information_schema.CardinalNumber
import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.TimeStamp
import adventureworks.information_schema.YesOrNo
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import io.circe.Decoder
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet

case class RoutinesViewRow(
  specificCatalog: Option[SqlIdentifier],
  specificSchema: Option[SqlIdentifier],
  specificName: Option[SqlIdentifier],
  routineCatalog: Option[SqlIdentifier],
  routineSchema: Option[SqlIdentifier],
  routineName: Option[SqlIdentifier],
  routineType: Option[CharacterData],
  moduleCatalog: Option[SqlIdentifier],
  moduleSchema: Option[SqlIdentifier],
  moduleName: Option[SqlIdentifier],
  udtCatalog: Option[SqlIdentifier],
  udtSchema: Option[SqlIdentifier],
  udtName: Option[SqlIdentifier],
  dataType: Option[CharacterData],
  characterMaximumLength: Option[CardinalNumber],
  characterOctetLength: Option[CardinalNumber],
  characterSetCatalog: Option[SqlIdentifier],
  characterSetSchema: Option[SqlIdentifier],
  characterSetName: Option[SqlIdentifier],
  collationCatalog: Option[SqlIdentifier],
  collationSchema: Option[SqlIdentifier],
  collationName: Option[SqlIdentifier],
  numericPrecision: Option[CardinalNumber],
  numericPrecisionRadix: Option[CardinalNumber],
  numericScale: Option[CardinalNumber],
  datetimePrecision: Option[CardinalNumber],
  intervalType: Option[CharacterData],
  intervalPrecision: Option[CardinalNumber],
  typeUdtCatalog: Option[SqlIdentifier],
  typeUdtSchema: Option[SqlIdentifier],
  typeUdtName: Option[SqlIdentifier],
  scopeCatalog: Option[SqlIdentifier],
  scopeSchema: Option[SqlIdentifier],
  scopeName: Option[SqlIdentifier],
  maximumCardinality: Option[CardinalNumber],
  dtdIdentifier: Option[SqlIdentifier],
  routineBody: Option[CharacterData],
  routineDefinition: Option[CharacterData],
  externalName: Option[CharacterData],
  externalLanguage: Option[CharacterData],
  parameterStyle: Option[CharacterData],
  isDeterministic: Option[YesOrNo],
  sqlDataAccess: Option[CharacterData],
  isNullCall: Option[YesOrNo],
  sqlPath: Option[CharacterData],
  schemaLevelRoutine: Option[YesOrNo],
  maxDynamicResultSets: Option[CardinalNumber],
  isUserDefinedCast: Option[YesOrNo],
  isImplicitlyInvocable: Option[YesOrNo],
  securityType: Option[CharacterData],
  toSqlSpecificCatalog: Option[SqlIdentifier],
  toSqlSpecificSchema: Option[SqlIdentifier],
  toSqlSpecificName: Option[SqlIdentifier],
  asLocator: Option[YesOrNo],
  created: Option[TimeStamp],
  lastAltered: Option[TimeStamp],
  newSavepointLevel: Option[YesOrNo],
  isUdtDependent: Option[YesOrNo],
  resultCastFromDataType: Option[CharacterData],
  resultCastAsLocator: Option[YesOrNo],
  resultCastCharMaxLength: Option[CardinalNumber],
  resultCastCharOctetLength: Option[CardinalNumber],
  resultCastCharSetCatalog: Option[SqlIdentifier],
  resultCastCharSetSchema: Option[SqlIdentifier],
  resultCastCharSetName: Option[SqlIdentifier],
  resultCastCollationCatalog: Option[SqlIdentifier],
  resultCastCollationSchema: Option[SqlIdentifier],
  resultCastCollationName: Option[SqlIdentifier],
  resultCastNumericPrecision: Option[CardinalNumber],
  resultCastNumericPrecisionRadix: Option[CardinalNumber],
  resultCastNumericScale: Option[CardinalNumber],
  resultCastDatetimePrecision: Option[CardinalNumber],
  resultCastIntervalType: Option[CharacterData],
  resultCastIntervalPrecision: Option[CardinalNumber],
  resultCastTypeUdtCatalog: Option[SqlIdentifier],
  resultCastTypeUdtSchema: Option[SqlIdentifier],
  resultCastTypeUdtName: Option[SqlIdentifier],
  resultCastScopeCatalog: Option[SqlIdentifier],
  resultCastScopeSchema: Option[SqlIdentifier],
  resultCastScopeName: Option[SqlIdentifier],
  resultCastMaximumCardinality: Option[CardinalNumber],
  resultCastDtdIdentifier: Option[SqlIdentifier]
)

object RoutinesViewRow {
  implicit val decoder: Decoder[RoutinesViewRow] =
    (c: HCursor) =>
      for {
        specificCatalog <- c.downField("specific_catalog").as[Option[SqlIdentifier]]
        specificSchema <- c.downField("specific_schema").as[Option[SqlIdentifier]]
        specificName <- c.downField("specific_name").as[Option[SqlIdentifier]]
        routineCatalog <- c.downField("routine_catalog").as[Option[SqlIdentifier]]
        routineSchema <- c.downField("routine_schema").as[Option[SqlIdentifier]]
        routineName <- c.downField("routine_name").as[Option[SqlIdentifier]]
        routineType <- c.downField("routine_type").as[Option[CharacterData]]
        moduleCatalog <- c.downField("module_catalog").as[Option[SqlIdentifier]]
        moduleSchema <- c.downField("module_schema").as[Option[SqlIdentifier]]
        moduleName <- c.downField("module_name").as[Option[SqlIdentifier]]
        udtCatalog <- c.downField("udt_catalog").as[Option[SqlIdentifier]]
        udtSchema <- c.downField("udt_schema").as[Option[SqlIdentifier]]
        udtName <- c.downField("udt_name").as[Option[SqlIdentifier]]
        dataType <- c.downField("data_type").as[Option[CharacterData]]
        characterMaximumLength <- c.downField("character_maximum_length").as[Option[CardinalNumber]]
        characterOctetLength <- c.downField("character_octet_length").as[Option[CardinalNumber]]
        characterSetCatalog <- c.downField("character_set_catalog").as[Option[SqlIdentifier]]
        characterSetSchema <- c.downField("character_set_schema").as[Option[SqlIdentifier]]
        characterSetName <- c.downField("character_set_name").as[Option[SqlIdentifier]]
        collationCatalog <- c.downField("collation_catalog").as[Option[SqlIdentifier]]
        collationSchema <- c.downField("collation_schema").as[Option[SqlIdentifier]]
        collationName <- c.downField("collation_name").as[Option[SqlIdentifier]]
        numericPrecision <- c.downField("numeric_precision").as[Option[CardinalNumber]]
        numericPrecisionRadix <- c.downField("numeric_precision_radix").as[Option[CardinalNumber]]
        numericScale <- c.downField("numeric_scale").as[Option[CardinalNumber]]
        datetimePrecision <- c.downField("datetime_precision").as[Option[CardinalNumber]]
        intervalType <- c.downField("interval_type").as[Option[CharacterData]]
        intervalPrecision <- c.downField("interval_precision").as[Option[CardinalNumber]]
        typeUdtCatalog <- c.downField("type_udt_catalog").as[Option[SqlIdentifier]]
        typeUdtSchema <- c.downField("type_udt_schema").as[Option[SqlIdentifier]]
        typeUdtName <- c.downField("type_udt_name").as[Option[SqlIdentifier]]
        scopeCatalog <- c.downField("scope_catalog").as[Option[SqlIdentifier]]
        scopeSchema <- c.downField("scope_schema").as[Option[SqlIdentifier]]
        scopeName <- c.downField("scope_name").as[Option[SqlIdentifier]]
        maximumCardinality <- c.downField("maximum_cardinality").as[Option[CardinalNumber]]
        dtdIdentifier <- c.downField("dtd_identifier").as[Option[SqlIdentifier]]
        routineBody <- c.downField("routine_body").as[Option[CharacterData]]
        routineDefinition <- c.downField("routine_definition").as[Option[CharacterData]]
        externalName <- c.downField("external_name").as[Option[CharacterData]]
        externalLanguage <- c.downField("external_language").as[Option[CharacterData]]
        parameterStyle <- c.downField("parameter_style").as[Option[CharacterData]]
        isDeterministic <- c.downField("is_deterministic").as[Option[YesOrNo]]
        sqlDataAccess <- c.downField("sql_data_access").as[Option[CharacterData]]
        isNullCall <- c.downField("is_null_call").as[Option[YesOrNo]]
        sqlPath <- c.downField("sql_path").as[Option[CharacterData]]
        schemaLevelRoutine <- c.downField("schema_level_routine").as[Option[YesOrNo]]
        maxDynamicResultSets <- c.downField("max_dynamic_result_sets").as[Option[CardinalNumber]]
        isUserDefinedCast <- c.downField("is_user_defined_cast").as[Option[YesOrNo]]
        isImplicitlyInvocable <- c.downField("is_implicitly_invocable").as[Option[YesOrNo]]
        securityType <- c.downField("security_type").as[Option[CharacterData]]
        toSqlSpecificCatalog <- c.downField("to_sql_specific_catalog").as[Option[SqlIdentifier]]
        toSqlSpecificSchema <- c.downField("to_sql_specific_schema").as[Option[SqlIdentifier]]
        toSqlSpecificName <- c.downField("to_sql_specific_name").as[Option[SqlIdentifier]]
        asLocator <- c.downField("as_locator").as[Option[YesOrNo]]
        created <- c.downField("created").as[Option[TimeStamp]]
        lastAltered <- c.downField("last_altered").as[Option[TimeStamp]]
        newSavepointLevel <- c.downField("new_savepoint_level").as[Option[YesOrNo]]
        isUdtDependent <- c.downField("is_udt_dependent").as[Option[YesOrNo]]
        resultCastFromDataType <- c.downField("result_cast_from_data_type").as[Option[CharacterData]]
        resultCastAsLocator <- c.downField("result_cast_as_locator").as[Option[YesOrNo]]
        resultCastCharMaxLength <- c.downField("result_cast_char_max_length").as[Option[CardinalNumber]]
        resultCastCharOctetLength <- c.downField("result_cast_char_octet_length").as[Option[CardinalNumber]]
        resultCastCharSetCatalog <- c.downField("result_cast_char_set_catalog").as[Option[SqlIdentifier]]
        resultCastCharSetSchema <- c.downField("result_cast_char_set_schema").as[Option[SqlIdentifier]]
        resultCastCharSetName <- c.downField("result_cast_char_set_name").as[Option[SqlIdentifier]]
        resultCastCollationCatalog <- c.downField("result_cast_collation_catalog").as[Option[SqlIdentifier]]
        resultCastCollationSchema <- c.downField("result_cast_collation_schema").as[Option[SqlIdentifier]]
        resultCastCollationName <- c.downField("result_cast_collation_name").as[Option[SqlIdentifier]]
        resultCastNumericPrecision <- c.downField("result_cast_numeric_precision").as[Option[CardinalNumber]]
        resultCastNumericPrecisionRadix <- c.downField("result_cast_numeric_precision_radix").as[Option[CardinalNumber]]
        resultCastNumericScale <- c.downField("result_cast_numeric_scale").as[Option[CardinalNumber]]
        resultCastDatetimePrecision <- c.downField("result_cast_datetime_precision").as[Option[CardinalNumber]]
        resultCastIntervalType <- c.downField("result_cast_interval_type").as[Option[CharacterData]]
        resultCastIntervalPrecision <- c.downField("result_cast_interval_precision").as[Option[CardinalNumber]]
        resultCastTypeUdtCatalog <- c.downField("result_cast_type_udt_catalog").as[Option[SqlIdentifier]]
        resultCastTypeUdtSchema <- c.downField("result_cast_type_udt_schema").as[Option[SqlIdentifier]]
        resultCastTypeUdtName <- c.downField("result_cast_type_udt_name").as[Option[SqlIdentifier]]
        resultCastScopeCatalog <- c.downField("result_cast_scope_catalog").as[Option[SqlIdentifier]]
        resultCastScopeSchema <- c.downField("result_cast_scope_schema").as[Option[SqlIdentifier]]
        resultCastScopeName <- c.downField("result_cast_scope_name").as[Option[SqlIdentifier]]
        resultCastMaximumCardinality <- c.downField("result_cast_maximum_cardinality").as[Option[CardinalNumber]]
        resultCastDtdIdentifier <- c.downField("result_cast_dtd_identifier").as[Option[SqlIdentifier]]
      } yield RoutinesViewRow(specificCatalog, specificSchema, specificName, routineCatalog, routineSchema, routineName, routineType, moduleCatalog, moduleSchema, moduleName, udtCatalog, udtSchema, udtName, dataType, characterMaximumLength, characterOctetLength, characterSetCatalog, characterSetSchema, characterSetName, collationCatalog, collationSchema, collationName, numericPrecision, numericPrecisionRadix, numericScale, datetimePrecision, intervalType, intervalPrecision, typeUdtCatalog, typeUdtSchema, typeUdtName, scopeCatalog, scopeSchema, scopeName, maximumCardinality, dtdIdentifier, routineBody, routineDefinition, externalName, externalLanguage, parameterStyle, isDeterministic, sqlDataAccess, isNullCall, sqlPath, schemaLevelRoutine, maxDynamicResultSets, isUserDefinedCast, isImplicitlyInvocable, securityType, toSqlSpecificCatalog, toSqlSpecificSchema, toSqlSpecificName, asLocator, created, lastAltered, newSavepointLevel, isUdtDependent, resultCastFromDataType, resultCastAsLocator, resultCastCharMaxLength, resultCastCharOctetLength, resultCastCharSetCatalog, resultCastCharSetSchema, resultCastCharSetName, resultCastCollationCatalog, resultCastCollationSchema, resultCastCollationName, resultCastNumericPrecision, resultCastNumericPrecisionRadix, resultCastNumericScale, resultCastDatetimePrecision, resultCastIntervalType, resultCastIntervalPrecision, resultCastTypeUdtCatalog, resultCastTypeUdtSchema, resultCastTypeUdtName, resultCastScopeCatalog, resultCastScopeSchema, resultCastScopeName, resultCastMaximumCardinality, resultCastDtdIdentifier)
  implicit val encoder: Encoder[RoutinesViewRow] = {
    import io.circe.syntax._
    row =>
      Json.obj(
        "specific_catalog" := row.specificCatalog,
        "specific_schema" := row.specificSchema,
        "specific_name" := row.specificName,
        "routine_catalog" := row.routineCatalog,
        "routine_schema" := row.routineSchema,
        "routine_name" := row.routineName,
        "routine_type" := row.routineType,
        "module_catalog" := row.moduleCatalog,
        "module_schema" := row.moduleSchema,
        "module_name" := row.moduleName,
        "udt_catalog" := row.udtCatalog,
        "udt_schema" := row.udtSchema,
        "udt_name" := row.udtName,
        "data_type" := row.dataType,
        "character_maximum_length" := row.characterMaximumLength,
        "character_octet_length" := row.characterOctetLength,
        "character_set_catalog" := row.characterSetCatalog,
        "character_set_schema" := row.characterSetSchema,
        "character_set_name" := row.characterSetName,
        "collation_catalog" := row.collationCatalog,
        "collation_schema" := row.collationSchema,
        "collation_name" := row.collationName,
        "numeric_precision" := row.numericPrecision,
        "numeric_precision_radix" := row.numericPrecisionRadix,
        "numeric_scale" := row.numericScale,
        "datetime_precision" := row.datetimePrecision,
        "interval_type" := row.intervalType,
        "interval_precision" := row.intervalPrecision,
        "type_udt_catalog" := row.typeUdtCatalog,
        "type_udt_schema" := row.typeUdtSchema,
        "type_udt_name" := row.typeUdtName,
        "scope_catalog" := row.scopeCatalog,
        "scope_schema" := row.scopeSchema,
        "scope_name" := row.scopeName,
        "maximum_cardinality" := row.maximumCardinality,
        "dtd_identifier" := row.dtdIdentifier,
        "routine_body" := row.routineBody,
        "routine_definition" := row.routineDefinition,
        "external_name" := row.externalName,
        "external_language" := row.externalLanguage,
        "parameter_style" := row.parameterStyle,
        "is_deterministic" := row.isDeterministic,
        "sql_data_access" := row.sqlDataAccess,
        "is_null_call" := row.isNullCall,
        "sql_path" := row.sqlPath,
        "schema_level_routine" := row.schemaLevelRoutine,
        "max_dynamic_result_sets" := row.maxDynamicResultSets,
        "is_user_defined_cast" := row.isUserDefinedCast,
        "is_implicitly_invocable" := row.isImplicitlyInvocable,
        "security_type" := row.securityType,
        "to_sql_specific_catalog" := row.toSqlSpecificCatalog,
        "to_sql_specific_schema" := row.toSqlSpecificSchema,
        "to_sql_specific_name" := row.toSqlSpecificName,
        "as_locator" := row.asLocator,
        "created" := row.created,
        "last_altered" := row.lastAltered,
        "new_savepoint_level" := row.newSavepointLevel,
        "is_udt_dependent" := row.isUdtDependent,
        "result_cast_from_data_type" := row.resultCastFromDataType,
        "result_cast_as_locator" := row.resultCastAsLocator,
        "result_cast_char_max_length" := row.resultCastCharMaxLength,
        "result_cast_char_octet_length" := row.resultCastCharOctetLength,
        "result_cast_char_set_catalog" := row.resultCastCharSetCatalog,
        "result_cast_char_set_schema" := row.resultCastCharSetSchema,
        "result_cast_char_set_name" := row.resultCastCharSetName,
        "result_cast_collation_catalog" := row.resultCastCollationCatalog,
        "result_cast_collation_schema" := row.resultCastCollationSchema,
        "result_cast_collation_name" := row.resultCastCollationName,
        "result_cast_numeric_precision" := row.resultCastNumericPrecision,
        "result_cast_numeric_precision_radix" := row.resultCastNumericPrecisionRadix,
        "result_cast_numeric_scale" := row.resultCastNumericScale,
        "result_cast_datetime_precision" := row.resultCastDatetimePrecision,
        "result_cast_interval_type" := row.resultCastIntervalType,
        "result_cast_interval_precision" := row.resultCastIntervalPrecision,
        "result_cast_type_udt_catalog" := row.resultCastTypeUdtCatalog,
        "result_cast_type_udt_schema" := row.resultCastTypeUdtSchema,
        "result_cast_type_udt_name" := row.resultCastTypeUdtName,
        "result_cast_scope_catalog" := row.resultCastScopeCatalog,
        "result_cast_scope_schema" := row.resultCastScopeSchema,
        "result_cast_scope_name" := row.resultCastScopeName,
        "result_cast_maximum_cardinality" := row.resultCastMaximumCardinality,
        "result_cast_dtd_identifier" := row.resultCastDtdIdentifier
      )}
  implicit val read: Read[RoutinesViewRow] =
    new Read[RoutinesViewRow](
      gets = List(
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[TimeStamp], Nullability.Nullable),
        (Get[TimeStamp], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[YesOrNo], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[CharacterData], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable),
        (Get[CardinalNumber], Nullability.Nullable),
        (Get[SqlIdentifier], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => RoutinesViewRow(
        specificCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 0),
        specificSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 1),
        specificName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 2),
        routineCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 3),
        routineSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 4),
        routineName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 5),
        routineType = Get[CharacterData].unsafeGetNullable(rs, i + 6),
        moduleCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 7),
        moduleSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 8),
        moduleName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 9),
        udtCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 10),
        udtSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 11),
        udtName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 12),
        dataType = Get[CharacterData].unsafeGetNullable(rs, i + 13),
        characterMaximumLength = Get[CardinalNumber].unsafeGetNullable(rs, i + 14),
        characterOctetLength = Get[CardinalNumber].unsafeGetNullable(rs, i + 15),
        characterSetCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 16),
        characterSetSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 17),
        characterSetName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 18),
        collationCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 19),
        collationSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 20),
        collationName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 21),
        numericPrecision = Get[CardinalNumber].unsafeGetNullable(rs, i + 22),
        numericPrecisionRadix = Get[CardinalNumber].unsafeGetNullable(rs, i + 23),
        numericScale = Get[CardinalNumber].unsafeGetNullable(rs, i + 24),
        datetimePrecision = Get[CardinalNumber].unsafeGetNullable(rs, i + 25),
        intervalType = Get[CharacterData].unsafeGetNullable(rs, i + 26),
        intervalPrecision = Get[CardinalNumber].unsafeGetNullable(rs, i + 27),
        typeUdtCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 28),
        typeUdtSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 29),
        typeUdtName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 30),
        scopeCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 31),
        scopeSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 32),
        scopeName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 33),
        maximumCardinality = Get[CardinalNumber].unsafeGetNullable(rs, i + 34),
        dtdIdentifier = Get[SqlIdentifier].unsafeGetNullable(rs, i + 35),
        routineBody = Get[CharacterData].unsafeGetNullable(rs, i + 36),
        routineDefinition = Get[CharacterData].unsafeGetNullable(rs, i + 37),
        externalName = Get[CharacterData].unsafeGetNullable(rs, i + 38),
        externalLanguage = Get[CharacterData].unsafeGetNullable(rs, i + 39),
        parameterStyle = Get[CharacterData].unsafeGetNullable(rs, i + 40),
        isDeterministic = Get[YesOrNo].unsafeGetNullable(rs, i + 41),
        sqlDataAccess = Get[CharacterData].unsafeGetNullable(rs, i + 42),
        isNullCall = Get[YesOrNo].unsafeGetNullable(rs, i + 43),
        sqlPath = Get[CharacterData].unsafeGetNullable(rs, i + 44),
        schemaLevelRoutine = Get[YesOrNo].unsafeGetNullable(rs, i + 45),
        maxDynamicResultSets = Get[CardinalNumber].unsafeGetNullable(rs, i + 46),
        isUserDefinedCast = Get[YesOrNo].unsafeGetNullable(rs, i + 47),
        isImplicitlyInvocable = Get[YesOrNo].unsafeGetNullable(rs, i + 48),
        securityType = Get[CharacterData].unsafeGetNullable(rs, i + 49),
        toSqlSpecificCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 50),
        toSqlSpecificSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 51),
        toSqlSpecificName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 52),
        asLocator = Get[YesOrNo].unsafeGetNullable(rs, i + 53),
        created = Get[TimeStamp].unsafeGetNullable(rs, i + 54),
        lastAltered = Get[TimeStamp].unsafeGetNullable(rs, i + 55),
        newSavepointLevel = Get[YesOrNo].unsafeGetNullable(rs, i + 56),
        isUdtDependent = Get[YesOrNo].unsafeGetNullable(rs, i + 57),
        resultCastFromDataType = Get[CharacterData].unsafeGetNullable(rs, i + 58),
        resultCastAsLocator = Get[YesOrNo].unsafeGetNullable(rs, i + 59),
        resultCastCharMaxLength = Get[CardinalNumber].unsafeGetNullable(rs, i + 60),
        resultCastCharOctetLength = Get[CardinalNumber].unsafeGetNullable(rs, i + 61),
        resultCastCharSetCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 62),
        resultCastCharSetSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 63),
        resultCastCharSetName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 64),
        resultCastCollationCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 65),
        resultCastCollationSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 66),
        resultCastCollationName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 67),
        resultCastNumericPrecision = Get[CardinalNumber].unsafeGetNullable(rs, i + 68),
        resultCastNumericPrecisionRadix = Get[CardinalNumber].unsafeGetNullable(rs, i + 69),
        resultCastNumericScale = Get[CardinalNumber].unsafeGetNullable(rs, i + 70),
        resultCastDatetimePrecision = Get[CardinalNumber].unsafeGetNullable(rs, i + 71),
        resultCastIntervalType = Get[CharacterData].unsafeGetNullable(rs, i + 72),
        resultCastIntervalPrecision = Get[CardinalNumber].unsafeGetNullable(rs, i + 73),
        resultCastTypeUdtCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 74),
        resultCastTypeUdtSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 75),
        resultCastTypeUdtName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 76),
        resultCastScopeCatalog = Get[SqlIdentifier].unsafeGetNullable(rs, i + 77),
        resultCastScopeSchema = Get[SqlIdentifier].unsafeGetNullable(rs, i + 78),
        resultCastScopeName = Get[SqlIdentifier].unsafeGetNullable(rs, i + 79),
        resultCastMaximumCardinality = Get[CardinalNumber].unsafeGetNullable(rs, i + 80),
        resultCastDtdIdentifier = Get[SqlIdentifier].unsafeGetNullable(rs, i + 81)
      )
    )
  

}
