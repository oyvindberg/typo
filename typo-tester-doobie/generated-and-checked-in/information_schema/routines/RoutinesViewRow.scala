/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routines

import adventureworks.information_schema.CardinalNumber
import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.SqlIdentifier
import adventureworks.information_schema.TimeStamp
import adventureworks.information_schema.YesOrNo
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.DecodingFailure
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet
import scala.util.Try

case class RoutinesViewRow(
  specificCatalog: Option[SqlIdentifier],
  specificSchema: Option[SqlIdentifier],
  specificName: Option[SqlIdentifier],
  routineCatalog: Option[SqlIdentifier],
  routineSchema: Option[SqlIdentifier],
  routineName: Option[SqlIdentifier],
  routineType: Option[CharacterData],
  moduleCatalog: Option[SqlIdentifier],
  moduleSchema: Option[SqlIdentifier],
  moduleName: Option[SqlIdentifier],
  udtCatalog: Option[SqlIdentifier],
  udtSchema: Option[SqlIdentifier],
  udtName: Option[SqlIdentifier],
  dataType: Option[CharacterData],
  characterMaximumLength: Option[CardinalNumber],
  characterOctetLength: Option[CardinalNumber],
  characterSetCatalog: Option[SqlIdentifier],
  characterSetSchema: Option[SqlIdentifier],
  characterSetName: Option[SqlIdentifier],
  collationCatalog: Option[SqlIdentifier],
  collationSchema: Option[SqlIdentifier],
  collationName: Option[SqlIdentifier],
  numericPrecision: Option[CardinalNumber],
  numericPrecisionRadix: Option[CardinalNumber],
  numericScale: Option[CardinalNumber],
  datetimePrecision: Option[CardinalNumber],
  intervalType: Option[CharacterData],
  intervalPrecision: Option[CardinalNumber],
  typeUdtCatalog: Option[SqlIdentifier],
  typeUdtSchema: Option[SqlIdentifier],
  typeUdtName: Option[SqlIdentifier],
  scopeCatalog: Option[SqlIdentifier],
  scopeSchema: Option[SqlIdentifier],
  scopeName: Option[SqlIdentifier],
  maximumCardinality: Option[CardinalNumber],
  dtdIdentifier: Option[SqlIdentifier],
  routineBody: Option[CharacterData],
  routineDefinition: Option[CharacterData],
  externalName: Option[CharacterData],
  externalLanguage: Option[CharacterData],
  parameterStyle: Option[CharacterData],
  isDeterministic: Option[YesOrNo],
  sqlDataAccess: Option[CharacterData],
  isNullCall: Option[YesOrNo],
  sqlPath: Option[CharacterData],
  schemaLevelRoutine: Option[YesOrNo],
  maxDynamicResultSets: Option[CardinalNumber],
  isUserDefinedCast: Option[YesOrNo],
  isImplicitlyInvocable: Option[YesOrNo],
  securityType: Option[CharacterData],
  toSqlSpecificCatalog: Option[SqlIdentifier],
  toSqlSpecificSchema: Option[SqlIdentifier],
  toSqlSpecificName: Option[SqlIdentifier],
  asLocator: Option[YesOrNo],
  created: Option[TimeStamp],
  lastAltered: Option[TimeStamp],
  newSavepointLevel: Option[YesOrNo],
  isUdtDependent: Option[YesOrNo],
  resultCastFromDataType: Option[CharacterData],
  resultCastAsLocator: Option[YesOrNo],
  resultCastCharMaxLength: Option[CardinalNumber],
  resultCastCharOctetLength: Option[CardinalNumber],
  resultCastCharSetCatalog: Option[SqlIdentifier],
  resultCastCharSetSchema: Option[SqlIdentifier],
  resultCastCharSetName: Option[SqlIdentifier],
  resultCastCollationCatalog: Option[SqlIdentifier],
  resultCastCollationSchema: Option[SqlIdentifier],
  resultCastCollationName: Option[SqlIdentifier],
  resultCastNumericPrecision: Option[CardinalNumber],
  resultCastNumericPrecisionRadix: Option[CardinalNumber],
  resultCastNumericScale: Option[CardinalNumber],
  resultCastDatetimePrecision: Option[CardinalNumber],
  resultCastIntervalType: Option[CharacterData],
  resultCastIntervalPrecision: Option[CardinalNumber],
  resultCastTypeUdtCatalog: Option[SqlIdentifier],
  resultCastTypeUdtSchema: Option[SqlIdentifier],
  resultCastTypeUdtName: Option[SqlIdentifier],
  resultCastScopeCatalog: Option[SqlIdentifier],
  resultCastScopeSchema: Option[SqlIdentifier],
  resultCastScopeName: Option[SqlIdentifier],
  resultCastMaximumCardinality: Option[CardinalNumber],
  resultCastDtdIdentifier: Option[SqlIdentifier]
)

object RoutinesViewRow {
  implicit val decoder: Decoder[RoutinesViewRow] = Decoder.instanceTry[RoutinesViewRow]((c: HCursor) =>
    Try {
      def orThrow[R](either: Either[DecodingFailure, R]): R = either match {
        case Left(err) => throw err
        case Right(r)  => r
      }
      RoutinesViewRow(
        specificCatalog = orThrow(c.get("specific_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        specificSchema = orThrow(c.get("specific_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        specificName = orThrow(c.get("specific_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        routineCatalog = orThrow(c.get("routine_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        routineSchema = orThrow(c.get("routine_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        routineName = orThrow(c.get("routine_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        routineType = orThrow(c.get("routine_type")(Decoder.decodeOption(CharacterData.decoder))),
        moduleCatalog = orThrow(c.get("module_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        moduleSchema = orThrow(c.get("module_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        moduleName = orThrow(c.get("module_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        udtCatalog = orThrow(c.get("udt_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        udtSchema = orThrow(c.get("udt_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        udtName = orThrow(c.get("udt_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        dataType = orThrow(c.get("data_type")(Decoder.decodeOption(CharacterData.decoder))),
        characterMaximumLength = orThrow(c.get("character_maximum_length")(Decoder.decodeOption(CardinalNumber.decoder))),
        characterOctetLength = orThrow(c.get("character_octet_length")(Decoder.decodeOption(CardinalNumber.decoder))),
        characterSetCatalog = orThrow(c.get("character_set_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        characterSetSchema = orThrow(c.get("character_set_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        characterSetName = orThrow(c.get("character_set_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        collationCatalog = orThrow(c.get("collation_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        collationSchema = orThrow(c.get("collation_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        collationName = orThrow(c.get("collation_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        numericPrecision = orThrow(c.get("numeric_precision")(Decoder.decodeOption(CardinalNumber.decoder))),
        numericPrecisionRadix = orThrow(c.get("numeric_precision_radix")(Decoder.decodeOption(CardinalNumber.decoder))),
        numericScale = orThrow(c.get("numeric_scale")(Decoder.decodeOption(CardinalNumber.decoder))),
        datetimePrecision = orThrow(c.get("datetime_precision")(Decoder.decodeOption(CardinalNumber.decoder))),
        intervalType = orThrow(c.get("interval_type")(Decoder.decodeOption(CharacterData.decoder))),
        intervalPrecision = orThrow(c.get("interval_precision")(Decoder.decodeOption(CardinalNumber.decoder))),
        typeUdtCatalog = orThrow(c.get("type_udt_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        typeUdtSchema = orThrow(c.get("type_udt_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        typeUdtName = orThrow(c.get("type_udt_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        scopeCatalog = orThrow(c.get("scope_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        scopeSchema = orThrow(c.get("scope_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        scopeName = orThrow(c.get("scope_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        maximumCardinality = orThrow(c.get("maximum_cardinality")(Decoder.decodeOption(CardinalNumber.decoder))),
        dtdIdentifier = orThrow(c.get("dtd_identifier")(Decoder.decodeOption(SqlIdentifier.decoder))),
        routineBody = orThrow(c.get("routine_body")(Decoder.decodeOption(CharacterData.decoder))),
        routineDefinition = orThrow(c.get("routine_definition")(Decoder.decodeOption(CharacterData.decoder))),
        externalName = orThrow(c.get("external_name")(Decoder.decodeOption(CharacterData.decoder))),
        externalLanguage = orThrow(c.get("external_language")(Decoder.decodeOption(CharacterData.decoder))),
        parameterStyle = orThrow(c.get("parameter_style")(Decoder.decodeOption(CharacterData.decoder))),
        isDeterministic = orThrow(c.get("is_deterministic")(Decoder.decodeOption(YesOrNo.decoder))),
        sqlDataAccess = orThrow(c.get("sql_data_access")(Decoder.decodeOption(CharacterData.decoder))),
        isNullCall = orThrow(c.get("is_null_call")(Decoder.decodeOption(YesOrNo.decoder))),
        sqlPath = orThrow(c.get("sql_path")(Decoder.decodeOption(CharacterData.decoder))),
        schemaLevelRoutine = orThrow(c.get("schema_level_routine")(Decoder.decodeOption(YesOrNo.decoder))),
        maxDynamicResultSets = orThrow(c.get("max_dynamic_result_sets")(Decoder.decodeOption(CardinalNumber.decoder))),
        isUserDefinedCast = orThrow(c.get("is_user_defined_cast")(Decoder.decodeOption(YesOrNo.decoder))),
        isImplicitlyInvocable = orThrow(c.get("is_implicitly_invocable")(Decoder.decodeOption(YesOrNo.decoder))),
        securityType = orThrow(c.get("security_type")(Decoder.decodeOption(CharacterData.decoder))),
        toSqlSpecificCatalog = orThrow(c.get("to_sql_specific_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        toSqlSpecificSchema = orThrow(c.get("to_sql_specific_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        toSqlSpecificName = orThrow(c.get("to_sql_specific_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        asLocator = orThrow(c.get("as_locator")(Decoder.decodeOption(YesOrNo.decoder))),
        created = orThrow(c.get("created")(Decoder.decodeOption(TimeStamp.decoder))),
        lastAltered = orThrow(c.get("last_altered")(Decoder.decodeOption(TimeStamp.decoder))),
        newSavepointLevel = orThrow(c.get("new_savepoint_level")(Decoder.decodeOption(YesOrNo.decoder))),
        isUdtDependent = orThrow(c.get("is_udt_dependent")(Decoder.decodeOption(YesOrNo.decoder))),
        resultCastFromDataType = orThrow(c.get("result_cast_from_data_type")(Decoder.decodeOption(CharacterData.decoder))),
        resultCastAsLocator = orThrow(c.get("result_cast_as_locator")(Decoder.decodeOption(YesOrNo.decoder))),
        resultCastCharMaxLength = orThrow(c.get("result_cast_char_max_length")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastCharOctetLength = orThrow(c.get("result_cast_char_octet_length")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastCharSetCatalog = orThrow(c.get("result_cast_char_set_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastCharSetSchema = orThrow(c.get("result_cast_char_set_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastCharSetName = orThrow(c.get("result_cast_char_set_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastCollationCatalog = orThrow(c.get("result_cast_collation_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastCollationSchema = orThrow(c.get("result_cast_collation_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastCollationName = orThrow(c.get("result_cast_collation_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastNumericPrecision = orThrow(c.get("result_cast_numeric_precision")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastNumericPrecisionRadix = orThrow(c.get("result_cast_numeric_precision_radix")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastNumericScale = orThrow(c.get("result_cast_numeric_scale")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastDatetimePrecision = orThrow(c.get("result_cast_datetime_precision")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastIntervalType = orThrow(c.get("result_cast_interval_type")(Decoder.decodeOption(CharacterData.decoder))),
        resultCastIntervalPrecision = orThrow(c.get("result_cast_interval_precision")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastTypeUdtCatalog = orThrow(c.get("result_cast_type_udt_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastTypeUdtSchema = orThrow(c.get("result_cast_type_udt_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastTypeUdtName = orThrow(c.get("result_cast_type_udt_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastScopeCatalog = orThrow(c.get("result_cast_scope_catalog")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastScopeSchema = orThrow(c.get("result_cast_scope_schema")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastScopeName = orThrow(c.get("result_cast_scope_name")(Decoder.decodeOption(SqlIdentifier.decoder))),
        resultCastMaximumCardinality = orThrow(c.get("result_cast_maximum_cardinality")(Decoder.decodeOption(CardinalNumber.decoder))),
        resultCastDtdIdentifier = orThrow(c.get("result_cast_dtd_identifier")(Decoder.decodeOption(SqlIdentifier.decoder)))
      )
    }
  )
  implicit val encoder: Encoder[RoutinesViewRow] = Encoder[RoutinesViewRow](row =>
    Json.obj(
      "specific_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.specificCatalog),
      "specific_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.specificSchema),
      "specific_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.specificName),
      "routine_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.routineCatalog),
      "routine_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.routineSchema),
      "routine_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.routineName),
      "routine_type" -> Encoder.encodeOption(CharacterData.encoder).apply(row.routineType),
      "module_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.moduleCatalog),
      "module_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.moduleSchema),
      "module_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.moduleName),
      "udt_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.udtCatalog),
      "udt_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.udtSchema),
      "udt_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.udtName),
      "data_type" -> Encoder.encodeOption(CharacterData.encoder).apply(row.dataType),
      "character_maximum_length" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.characterMaximumLength),
      "character_octet_length" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.characterOctetLength),
      "character_set_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.characterSetCatalog),
      "character_set_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.characterSetSchema),
      "character_set_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.characterSetName),
      "collation_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.collationCatalog),
      "collation_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.collationSchema),
      "collation_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.collationName),
      "numeric_precision" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.numericPrecision),
      "numeric_precision_radix" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.numericPrecisionRadix),
      "numeric_scale" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.numericScale),
      "datetime_precision" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.datetimePrecision),
      "interval_type" -> Encoder.encodeOption(CharacterData.encoder).apply(row.intervalType),
      "interval_precision" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.intervalPrecision),
      "type_udt_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.typeUdtCatalog),
      "type_udt_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.typeUdtSchema),
      "type_udt_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.typeUdtName),
      "scope_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.scopeCatalog),
      "scope_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.scopeSchema),
      "scope_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.scopeName),
      "maximum_cardinality" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.maximumCardinality),
      "dtd_identifier" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.dtdIdentifier),
      "routine_body" -> Encoder.encodeOption(CharacterData.encoder).apply(row.routineBody),
      "routine_definition" -> Encoder.encodeOption(CharacterData.encoder).apply(row.routineDefinition),
      "external_name" -> Encoder.encodeOption(CharacterData.encoder).apply(row.externalName),
      "external_language" -> Encoder.encodeOption(CharacterData.encoder).apply(row.externalLanguage),
      "parameter_style" -> Encoder.encodeOption(CharacterData.encoder).apply(row.parameterStyle),
      "is_deterministic" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.isDeterministic),
      "sql_data_access" -> Encoder.encodeOption(CharacterData.encoder).apply(row.sqlDataAccess),
      "is_null_call" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.isNullCall),
      "sql_path" -> Encoder.encodeOption(CharacterData.encoder).apply(row.sqlPath),
      "schema_level_routine" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.schemaLevelRoutine),
      "max_dynamic_result_sets" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.maxDynamicResultSets),
      "is_user_defined_cast" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.isUserDefinedCast),
      "is_implicitly_invocable" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.isImplicitlyInvocable),
      "security_type" -> Encoder.encodeOption(CharacterData.encoder).apply(row.securityType),
      "to_sql_specific_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.toSqlSpecificCatalog),
      "to_sql_specific_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.toSqlSpecificSchema),
      "to_sql_specific_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.toSqlSpecificName),
      "as_locator" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.asLocator),
      "created" -> Encoder.encodeOption(TimeStamp.encoder).apply(row.created),
      "last_altered" -> Encoder.encodeOption(TimeStamp.encoder).apply(row.lastAltered),
      "new_savepoint_level" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.newSavepointLevel),
      "is_udt_dependent" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.isUdtDependent),
      "result_cast_from_data_type" -> Encoder.encodeOption(CharacterData.encoder).apply(row.resultCastFromDataType),
      "result_cast_as_locator" -> Encoder.encodeOption(YesOrNo.encoder).apply(row.resultCastAsLocator),
      "result_cast_char_max_length" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastCharMaxLength),
      "result_cast_char_octet_length" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastCharOctetLength),
      "result_cast_char_set_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastCharSetCatalog),
      "result_cast_char_set_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastCharSetSchema),
      "result_cast_char_set_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastCharSetName),
      "result_cast_collation_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastCollationCatalog),
      "result_cast_collation_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastCollationSchema),
      "result_cast_collation_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastCollationName),
      "result_cast_numeric_precision" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastNumericPrecision),
      "result_cast_numeric_precision_radix" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastNumericPrecisionRadix),
      "result_cast_numeric_scale" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastNumericScale),
      "result_cast_datetime_precision" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastDatetimePrecision),
      "result_cast_interval_type" -> Encoder.encodeOption(CharacterData.encoder).apply(row.resultCastIntervalType),
      "result_cast_interval_precision" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastIntervalPrecision),
      "result_cast_type_udt_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastTypeUdtCatalog),
      "result_cast_type_udt_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastTypeUdtSchema),
      "result_cast_type_udt_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastTypeUdtName),
      "result_cast_scope_catalog" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastScopeCatalog),
      "result_cast_scope_schema" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastScopeSchema),
      "result_cast_scope_name" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastScopeName),
      "result_cast_maximum_cardinality" -> Encoder.encodeOption(CardinalNumber.encoder).apply(row.resultCastMaximumCardinality),
      "result_cast_dtd_identifier" -> Encoder.encodeOption(SqlIdentifier.encoder).apply(row.resultCastDtdIdentifier)
    )
  )
  implicit val read: Read[RoutinesViewRow] = new Read[RoutinesViewRow](
    gets = List(
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (TimeStamp.get, Nullability.Nullable),
      (TimeStamp.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (YesOrNo.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (CharacterData.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable),
      (CardinalNumber.get, Nullability.Nullable),
      (SqlIdentifier.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => RoutinesViewRow(
      specificCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 0),
      specificSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 1),
      specificName = SqlIdentifier.get.unsafeGetNullable(rs, i + 2),
      routineCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 3),
      routineSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 4),
      routineName = SqlIdentifier.get.unsafeGetNullable(rs, i + 5),
      routineType = CharacterData.get.unsafeGetNullable(rs, i + 6),
      moduleCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 7),
      moduleSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 8),
      moduleName = SqlIdentifier.get.unsafeGetNullable(rs, i + 9),
      udtCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 10),
      udtSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 11),
      udtName = SqlIdentifier.get.unsafeGetNullable(rs, i + 12),
      dataType = CharacterData.get.unsafeGetNullable(rs, i + 13),
      characterMaximumLength = CardinalNumber.get.unsafeGetNullable(rs, i + 14),
      characterOctetLength = CardinalNumber.get.unsafeGetNullable(rs, i + 15),
      characterSetCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 16),
      characterSetSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 17),
      characterSetName = SqlIdentifier.get.unsafeGetNullable(rs, i + 18),
      collationCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 19),
      collationSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 20),
      collationName = SqlIdentifier.get.unsafeGetNullable(rs, i + 21),
      numericPrecision = CardinalNumber.get.unsafeGetNullable(rs, i + 22),
      numericPrecisionRadix = CardinalNumber.get.unsafeGetNullable(rs, i + 23),
      numericScale = CardinalNumber.get.unsafeGetNullable(rs, i + 24),
      datetimePrecision = CardinalNumber.get.unsafeGetNullable(rs, i + 25),
      intervalType = CharacterData.get.unsafeGetNullable(rs, i + 26),
      intervalPrecision = CardinalNumber.get.unsafeGetNullable(rs, i + 27),
      typeUdtCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 28),
      typeUdtSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 29),
      typeUdtName = SqlIdentifier.get.unsafeGetNullable(rs, i + 30),
      scopeCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 31),
      scopeSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 32),
      scopeName = SqlIdentifier.get.unsafeGetNullable(rs, i + 33),
      maximumCardinality = CardinalNumber.get.unsafeGetNullable(rs, i + 34),
      dtdIdentifier = SqlIdentifier.get.unsafeGetNullable(rs, i + 35),
      routineBody = CharacterData.get.unsafeGetNullable(rs, i + 36),
      routineDefinition = CharacterData.get.unsafeGetNullable(rs, i + 37),
      externalName = CharacterData.get.unsafeGetNullable(rs, i + 38),
      externalLanguage = CharacterData.get.unsafeGetNullable(rs, i + 39),
      parameterStyle = CharacterData.get.unsafeGetNullable(rs, i + 40),
      isDeterministic = YesOrNo.get.unsafeGetNullable(rs, i + 41),
      sqlDataAccess = CharacterData.get.unsafeGetNullable(rs, i + 42),
      isNullCall = YesOrNo.get.unsafeGetNullable(rs, i + 43),
      sqlPath = CharacterData.get.unsafeGetNullable(rs, i + 44),
      schemaLevelRoutine = YesOrNo.get.unsafeGetNullable(rs, i + 45),
      maxDynamicResultSets = CardinalNumber.get.unsafeGetNullable(rs, i + 46),
      isUserDefinedCast = YesOrNo.get.unsafeGetNullable(rs, i + 47),
      isImplicitlyInvocable = YesOrNo.get.unsafeGetNullable(rs, i + 48),
      securityType = CharacterData.get.unsafeGetNullable(rs, i + 49),
      toSqlSpecificCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 50),
      toSqlSpecificSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 51),
      toSqlSpecificName = SqlIdentifier.get.unsafeGetNullable(rs, i + 52),
      asLocator = YesOrNo.get.unsafeGetNullable(rs, i + 53),
      created = TimeStamp.get.unsafeGetNullable(rs, i + 54),
      lastAltered = TimeStamp.get.unsafeGetNullable(rs, i + 55),
      newSavepointLevel = YesOrNo.get.unsafeGetNullable(rs, i + 56),
      isUdtDependent = YesOrNo.get.unsafeGetNullable(rs, i + 57),
      resultCastFromDataType = CharacterData.get.unsafeGetNullable(rs, i + 58),
      resultCastAsLocator = YesOrNo.get.unsafeGetNullable(rs, i + 59),
      resultCastCharMaxLength = CardinalNumber.get.unsafeGetNullable(rs, i + 60),
      resultCastCharOctetLength = CardinalNumber.get.unsafeGetNullable(rs, i + 61),
      resultCastCharSetCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 62),
      resultCastCharSetSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 63),
      resultCastCharSetName = SqlIdentifier.get.unsafeGetNullable(rs, i + 64),
      resultCastCollationCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 65),
      resultCastCollationSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 66),
      resultCastCollationName = SqlIdentifier.get.unsafeGetNullable(rs, i + 67),
      resultCastNumericPrecision = CardinalNumber.get.unsafeGetNullable(rs, i + 68),
      resultCastNumericPrecisionRadix = CardinalNumber.get.unsafeGetNullable(rs, i + 69),
      resultCastNumericScale = CardinalNumber.get.unsafeGetNullable(rs, i + 70),
      resultCastDatetimePrecision = CardinalNumber.get.unsafeGetNullable(rs, i + 71),
      resultCastIntervalType = CharacterData.get.unsafeGetNullable(rs, i + 72),
      resultCastIntervalPrecision = CardinalNumber.get.unsafeGetNullable(rs, i + 73),
      resultCastTypeUdtCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 74),
      resultCastTypeUdtSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 75),
      resultCastTypeUdtName = SqlIdentifier.get.unsafeGetNullable(rs, i + 76),
      resultCastScopeCatalog = SqlIdentifier.get.unsafeGetNullable(rs, i + 77),
      resultCastScopeSchema = SqlIdentifier.get.unsafeGetNullable(rs, i + 78),
      resultCastScopeName = SqlIdentifier.get.unsafeGetNullable(rs, i + 79),
      resultCastMaximumCardinality = CardinalNumber.get.unsafeGetNullable(rs, i + 80),
      resultCastDtdIdentifier = SqlIdentifier.get.unsafeGetNullable(rs, i + 81)
    )
  )
}
