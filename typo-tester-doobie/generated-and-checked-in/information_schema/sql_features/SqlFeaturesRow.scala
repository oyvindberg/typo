/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package sql_features

import adventureworks.information_schema.CharacterData
import adventureworks.information_schema.YesOrNo
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class SqlFeaturesRow(
  featureId: Option[CharacterData],
  featureName: Option[CharacterData],
  subFeatureId: Option[CharacterData],
  subFeatureName: Option[CharacterData],
  isSupported: Option[YesOrNo],
  isVerifiedBy: Option[CharacterData],
  comments: Option[CharacterData]
)

object SqlFeaturesRow {
  implicit val decoder: Decoder[SqlFeaturesRow] = Decoder.forProduct7[SqlFeaturesRow, Option[CharacterData], Option[CharacterData], Option[CharacterData], Option[CharacterData], Option[YesOrNo], Option[CharacterData], Option[CharacterData]]("feature_id", "feature_name", "sub_feature_id", "sub_feature_name", "is_supported", "is_verified_by", "comments")(SqlFeaturesRow.apply)
  implicit val encoder: Encoder[SqlFeaturesRow] = Encoder.forProduct7[SqlFeaturesRow, Option[CharacterData], Option[CharacterData], Option[CharacterData], Option[CharacterData], Option[YesOrNo], Option[CharacterData], Option[CharacterData]]("feature_id", "feature_name", "sub_feature_id", "sub_feature_name", "is_supported", "is_verified_by", "comments")(x => (x.featureId, x.featureName, x.subFeatureId, x.subFeatureName, x.isSupported, x.isVerifiedBy, x.comments))
  implicit val read: Read[SqlFeaturesRow] = new Read[SqlFeaturesRow](
    gets = List(
      (Get[CharacterData], Nullability.Nullable),
      (Get[CharacterData], Nullability.Nullable),
      (Get[CharacterData], Nullability.Nullable),
      (Get[CharacterData], Nullability.Nullable),
      (Get[YesOrNo], Nullability.Nullable),
      (Get[CharacterData], Nullability.Nullable),
      (Get[CharacterData], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => SqlFeaturesRow(
      featureId = Get[CharacterData].unsafeGetNullable(rs, i + 0),
      featureName = Get[CharacterData].unsafeGetNullable(rs, i + 1),
      subFeatureId = Get[CharacterData].unsafeGetNullable(rs, i + 2),
      subFeatureName = Get[CharacterData].unsafeGetNullable(rs, i + 3),
      isSupported = Get[YesOrNo].unsafeGetNullable(rs, i + 4),
      isVerifiedBy = Get[CharacterData].unsafeGetNullable(rs, i + 5),
      comments = Get[CharacterData].unsafeGetNullable(rs, i + 6)
    )
  )
}
