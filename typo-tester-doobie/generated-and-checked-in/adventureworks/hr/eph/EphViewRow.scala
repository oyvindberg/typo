/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package eph

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.person.businessentity.BusinessentityId
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder

/** View: hr.eph */
case class EphViewRow(
  /** Points to [[humanresources.employeepayhistory.EmployeepayhistoryRow.businessentityid]] */
  id: BusinessentityId,
  /** Points to [[humanresources.employeepayhistory.EmployeepayhistoryRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Points to [[humanresources.employeepayhistory.EmployeepayhistoryRow.ratechangedate]] */
  ratechangedate: TypoLocalDateTime,
  /** Points to [[humanresources.employeepayhistory.EmployeepayhistoryRow.rate]] */
  rate: BigDecimal,
  /** Points to [[humanresources.employeepayhistory.EmployeepayhistoryRow.payfrequency]] */
  payfrequency: TypoShort,
  /** Points to [[humanresources.employeepayhistory.EmployeepayhistoryRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object EphViewRow {
  implicit lazy val decoder: Decoder[EphViewRow] = Decoder.forProduct6[EphViewRow, BusinessentityId, BusinessentityId, TypoLocalDateTime, BigDecimal, TypoShort, TypoLocalDateTime]("id", "businessentityid", "ratechangedate", "rate", "payfrequency", "modifieddate")(EphViewRow.apply)(BusinessentityId.decoder, BusinessentityId.decoder, TypoLocalDateTime.decoder, Decoder.decodeBigDecimal, TypoShort.decoder, TypoLocalDateTime.decoder)
  implicit lazy val encoder: Encoder[EphViewRow] = Encoder.forProduct6[EphViewRow, BusinessentityId, BusinessentityId, TypoLocalDateTime, BigDecimal, TypoShort, TypoLocalDateTime]("id", "businessentityid", "ratechangedate", "rate", "payfrequency", "modifieddate")(x => (x.id, x.businessentityid, x.ratechangedate, x.rate, x.payfrequency, x.modifieddate))(BusinessentityId.encoder, BusinessentityId.encoder, TypoLocalDateTime.encoder, Encoder.encodeBigDecimal, TypoShort.encoder, TypoLocalDateTime.encoder)
  implicit lazy val read: Read[EphViewRow] = new Read.CompositeOfInstances(Array(
    new Read.Single(BusinessentityId.get).asInstanceOf[Read[Any]],
      new Read.Single(BusinessentityId.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoLocalDateTime.get).asInstanceOf[Read[Any]],
      new Read.Single(Meta.ScalaBigDecimalMeta.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoShort.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoLocalDateTime.get).asInstanceOf[Read[Any]]
  ))(using scala.reflect.ClassTag.Any).map { arr =>
    EphViewRow(
      id = arr(0).asInstanceOf[BusinessentityId],
          businessentityid = arr(1).asInstanceOf[BusinessentityId],
          ratechangedate = arr(2).asInstanceOf[TypoLocalDateTime],
          rate = arr(3).asInstanceOf[BigDecimal],
          payfrequency = arr(4).asInstanceOf[TypoShort],
          modifieddate = arr(5).asInstanceOf[TypoLocalDateTime]
    )
  }
}
