/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package billofmaterials

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.production.product.ProductId
import adventureworks.production.unitmeasure.UnitmeasureId
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait BillofmaterialsFields {
  def billofmaterialsid: IdField[Int, BillofmaterialsRow]
  def productassemblyid: OptField[ProductId, BillofmaterialsRow]
  def componentid: Field[ProductId, BillofmaterialsRow]
  def startdate: Field[TypoLocalDateTime, BillofmaterialsRow]
  def enddate: OptField[TypoLocalDateTime, BillofmaterialsRow]
  def unitmeasurecode: Field[UnitmeasureId, BillofmaterialsRow]
  def bomlevel: Field[TypoShort, BillofmaterialsRow]
  def perassemblyqty: Field[BigDecimal, BillofmaterialsRow]
  def modifieddate: Field[TypoLocalDateTime, BillofmaterialsRow]
}

object BillofmaterialsFields {
  lazy val structure: Relation[BillofmaterialsFields, BillofmaterialsRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[BillofmaterialsFields, BillofmaterialsRow] {
  
    override lazy val fields: BillofmaterialsFields = new BillofmaterialsFields {
      override def billofmaterialsid = IdField[Int, BillofmaterialsRow](_path, "billofmaterialsid", None, Some("int4"), x => x.billofmaterialsid, (row, value) => row.copy(billofmaterialsid = value))
      override def productassemblyid = OptField[ProductId, BillofmaterialsRow](_path, "productassemblyid", None, Some("int4"), x => x.productassemblyid, (row, value) => row.copy(productassemblyid = value))
      override def componentid = Field[ProductId, BillofmaterialsRow](_path, "componentid", None, Some("int4"), x => x.componentid, (row, value) => row.copy(componentid = value))
      override def startdate = Field[TypoLocalDateTime, BillofmaterialsRow](_path, "startdate", Some("text"), Some("timestamp"), x => x.startdate, (row, value) => row.copy(startdate = value))
      override def enddate = OptField[TypoLocalDateTime, BillofmaterialsRow](_path, "enddate", Some("text"), Some("timestamp"), x => x.enddate, (row, value) => row.copy(enddate = value))
      override def unitmeasurecode = Field[UnitmeasureId, BillofmaterialsRow](_path, "unitmeasurecode", None, Some("bpchar"), x => x.unitmeasurecode, (row, value) => row.copy(unitmeasurecode = value))
      override def bomlevel = Field[TypoShort, BillofmaterialsRow](_path, "bomlevel", None, Some("int2"), x => x.bomlevel, (row, value) => row.copy(bomlevel = value))
      override def perassemblyqty = Field[BigDecimal, BillofmaterialsRow](_path, "perassemblyqty", None, Some("numeric"), x => x.perassemblyqty, (row, value) => row.copy(perassemblyqty = value))
      override def modifieddate = Field[TypoLocalDateTime, BillofmaterialsRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, BillofmaterialsRow]] =
      List[FieldLikeNoHkt[?, BillofmaterialsRow]](fields.billofmaterialsid, fields.productassemblyid, fields.componentid, fields.startdate, fields.enddate, fields.unitmeasurecode, fields.bomlevel, fields.perassemblyqty, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
