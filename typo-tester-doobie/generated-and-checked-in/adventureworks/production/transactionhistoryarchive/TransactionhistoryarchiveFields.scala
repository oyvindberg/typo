/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package transactionhistoryarchive

import adventureworks.customtypes.TypoLocalDateTime
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

trait TransactionhistoryarchiveFields {
  def transactionid: IdField[TransactionhistoryarchiveId, TransactionhistoryarchiveRow]
  def productid: Field[Int, TransactionhistoryarchiveRow]
  def referenceorderid: Field[Int, TransactionhistoryarchiveRow]
  def referenceorderlineid: Field[Int, TransactionhistoryarchiveRow]
  def transactiondate: Field[TypoLocalDateTime, TransactionhistoryarchiveRow]
  def transactiontype: Field[/* bpchar, max 1 chars */ String, TransactionhistoryarchiveRow]
  def quantity: Field[Int, TransactionhistoryarchiveRow]
  def actualcost: Field[BigDecimal, TransactionhistoryarchiveRow]
  def modifieddate: Field[TypoLocalDateTime, TransactionhistoryarchiveRow]
}

object TransactionhistoryarchiveFields {
  lazy val structure: Relation[TransactionhistoryarchiveFields, TransactionhistoryarchiveRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[TransactionhistoryarchiveFields, TransactionhistoryarchiveRow] {
  
    override lazy val fields: TransactionhistoryarchiveFields = new TransactionhistoryarchiveFields {
      override def transactionid = IdField[TransactionhistoryarchiveId, TransactionhistoryarchiveRow](_path, "transactionid", None, Some("int4"), x => x.transactionid, (row, value) => row.copy(transactionid = value))
      override def productid = Field[Int, TransactionhistoryarchiveRow](_path, "productid", None, Some("int4"), x => x.productid, (row, value) => row.copy(productid = value))
      override def referenceorderid = Field[Int, TransactionhistoryarchiveRow](_path, "referenceorderid", None, Some("int4"), x => x.referenceorderid, (row, value) => row.copy(referenceorderid = value))
      override def referenceorderlineid = Field[Int, TransactionhistoryarchiveRow](_path, "referenceorderlineid", None, Some("int4"), x => x.referenceorderlineid, (row, value) => row.copy(referenceorderlineid = value))
      override def transactiondate = Field[TypoLocalDateTime, TransactionhistoryarchiveRow](_path, "transactiondate", Some("text"), Some("timestamp"), x => x.transactiondate, (row, value) => row.copy(transactiondate = value))
      override def transactiontype = Field[/* bpchar, max 1 chars */ String, TransactionhistoryarchiveRow](_path, "transactiontype", None, Some("bpchar"), x => x.transactiontype, (row, value) => row.copy(transactiontype = value))
      override def quantity = Field[Int, TransactionhistoryarchiveRow](_path, "quantity", None, Some("int4"), x => x.quantity, (row, value) => row.copy(quantity = value))
      override def actualcost = Field[BigDecimal, TransactionhistoryarchiveRow](_path, "actualcost", None, Some("numeric"), x => x.actualcost, (row, value) => row.copy(actualcost = value))
      override def modifieddate = Field[TypoLocalDateTime, TransactionhistoryarchiveRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, TransactionhistoryarchiveRow]] =
      List[FieldLikeNoHkt[?, TransactionhistoryarchiveRow]](fields.transactionid, fields.productid, fields.referenceorderid, fields.referenceorderlineid, fields.transactiondate, fields.transactiontype, fields.quantity, fields.actualcost, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
