/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vemployeedepartmenthistory

import adventureworks.customtypes.TypoLocalDate
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.public.Name
import adventureworks.userdefined.FirstName
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder

/** View: humanresources.vemployeedepartmenthistory */
case class VemployeedepartmenthistoryViewRow(
  /** Points to [[employee.EmployeeRow.businessentityid]] */
  businessentityid: BusinessentityId,
  /** Points to [[person.person.PersonRow.title]] */
  title: Option[/* max 8 chars */ String],
  /** Points to [[person.person.PersonRow.firstname]] */
  firstname: /* user-picked */ FirstName,
  /** Points to [[person.person.PersonRow.middlename]] */
  middlename: Option[Name],
  /** Points to [[person.person.PersonRow.lastname]] */
  lastname: Name,
  /** Points to [[person.person.PersonRow.suffix]] */
  suffix: Option[/* max 10 chars */ String],
  /** Points to [[shift.ShiftRow.name]] */
  shift: Name,
  /** Points to [[department.DepartmentRow.name]] */
  department: Name,
  /** Points to [[department.DepartmentRow.groupname]] */
  groupname: Name,
  /** Points to [[employeedepartmenthistory.EmployeedepartmenthistoryRow.startdate]] */
  startdate: TypoLocalDate,
  /** Points to [[employeedepartmenthistory.EmployeedepartmenthistoryRow.enddate]] */
  enddate: Option[TypoLocalDate]
)

object VemployeedepartmenthistoryViewRow {
  implicit lazy val decoder: Decoder[VemployeedepartmenthistoryViewRow] = Decoder.forProduct11[VemployeedepartmenthistoryViewRow, BusinessentityId, Option[/* max 8 chars */ String], /* user-picked */ FirstName, Option[Name], Name, Option[/* max 10 chars */ String], Name, Name, Name, TypoLocalDate, Option[TypoLocalDate]]("businessentityid", "title", "firstname", "middlename", "lastname", "suffix", "shift", "department", "groupname", "startdate", "enddate")(VemployeedepartmenthistoryViewRow.apply)(BusinessentityId.decoder, Decoder.decodeOption(Decoder.decodeString), FirstName.decoder, Decoder.decodeOption(Name.decoder), Name.decoder, Decoder.decodeOption(Decoder.decodeString), Name.decoder, Name.decoder, Name.decoder, TypoLocalDate.decoder, Decoder.decodeOption(TypoLocalDate.decoder))
  implicit lazy val encoder: Encoder[VemployeedepartmenthistoryViewRow] = Encoder.forProduct11[VemployeedepartmenthistoryViewRow, BusinessentityId, Option[/* max 8 chars */ String], /* user-picked */ FirstName, Option[Name], Name, Option[/* max 10 chars */ String], Name, Name, Name, TypoLocalDate, Option[TypoLocalDate]]("businessentityid", "title", "firstname", "middlename", "lastname", "suffix", "shift", "department", "groupname", "startdate", "enddate")(x => (x.businessentityid, x.title, x.firstname, x.middlename, x.lastname, x.suffix, x.shift, x.department, x.groupname, x.startdate, x.enddate))(BusinessentityId.encoder, Encoder.encodeOption(Encoder.encodeString), FirstName.encoder, Encoder.encodeOption(Name.encoder), Name.encoder, Encoder.encodeOption(Encoder.encodeString), Name.encoder, Name.encoder, Name.encoder, TypoLocalDate.encoder, Encoder.encodeOption(TypoLocalDate.encoder))
  implicit lazy val read: Read[VemployeedepartmenthistoryViewRow] = new Read.CompositeOfInstances(Array(
    new Read.Single(BusinessentityId.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.Single(/* user-picked */ FirstName.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Name.get).asInstanceOf[Read[Any]],
      new Read.Single(Name.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.Single(Name.get).asInstanceOf[Read[Any]],
      new Read.Single(Name.get).asInstanceOf[Read[Any]],
      new Read.Single(Name.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoLocalDate.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(TypoLocalDate.get).asInstanceOf[Read[Any]]
  ))(using scala.reflect.ClassTag.Any).map { arr =>
    VemployeedepartmenthistoryViewRow(
      businessentityid = arr(0).asInstanceOf[BusinessentityId],
          title = arr(1).asInstanceOf[Option[/* max 8 chars */ String]],
          firstname = arr(2).asInstanceOf[/* user-picked */ FirstName],
          middlename = arr(3).asInstanceOf[Option[Name]],
          lastname = arr(4).asInstanceOf[Name],
          suffix = arr(5).asInstanceOf[Option[/* max 10 chars */ String]],
          shift = arr(6).asInstanceOf[Name],
          department = arr(7).asInstanceOf[Name],
          groupname = arr(8).asInstanceOf[Name],
          startdate = arr(9).asInstanceOf[TypoLocalDate],
          enddate = arr(10).asInstanceOf[Option[TypoLocalDate]]
    )
  }
}
