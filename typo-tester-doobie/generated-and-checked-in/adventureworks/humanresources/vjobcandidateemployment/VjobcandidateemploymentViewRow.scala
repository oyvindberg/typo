/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vjobcandidateemployment

import adventureworks.customtypes.TypoLocalDate
import adventureworks.humanresources.jobcandidate.JobcandidateId
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder

/** View: humanresources.vjobcandidateemployment */
case class VjobcandidateemploymentViewRow(
  /** Points to [[jobcandidate.JobcandidateRow.jobcandidateid]] */
  jobcandidateid: JobcandidateId,
  empStartDate: /* nullability unknown */ Option[TypoLocalDate],
  empEndDate: /* nullability unknown */ Option[TypoLocalDate],
  empOrgName: /* nullability unknown */ Option[/* max 100 chars */ String],
  empJobTitle: /* nullability unknown */ Option[/* max 100 chars */ String],
  empResponsibility: /* nullability unknown */ Option[String],
  empFunctionCategory: /* nullability unknown */ Option[String],
  empIndustryCategory: /* nullability unknown */ Option[String],
  empLocCountryRegion: /* nullability unknown */ Option[String],
  empLocState: /* nullability unknown */ Option[String],
  empLocCity: /* nullability unknown */ Option[String]
)

object VjobcandidateemploymentViewRow {
  implicit lazy val decoder: Decoder[VjobcandidateemploymentViewRow] = Decoder.forProduct11[VjobcandidateemploymentViewRow, JobcandidateId, /* nullability unknown */ Option[TypoLocalDate], /* nullability unknown */ Option[TypoLocalDate], /* nullability unknown */ Option[/* max 100 chars */ String], /* nullability unknown */ Option[/* max 100 chars */ String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String]]("jobcandidateid", "Emp.StartDate", "Emp.EndDate", "Emp.OrgName", "Emp.JobTitle", "Emp.Responsibility", "Emp.FunctionCategory", "Emp.IndustryCategory", "Emp.Loc.CountryRegion", "Emp.Loc.State", "Emp.Loc.City")(VjobcandidateemploymentViewRow.apply)(JobcandidateId.decoder, Decoder.decodeOption(TypoLocalDate.decoder), Decoder.decodeOption(TypoLocalDate.decoder), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString), Decoder.decodeOption(Decoder.decodeString))
  implicit lazy val encoder: Encoder[VjobcandidateemploymentViewRow] = Encoder.forProduct11[VjobcandidateemploymentViewRow, JobcandidateId, /* nullability unknown */ Option[TypoLocalDate], /* nullability unknown */ Option[TypoLocalDate], /* nullability unknown */ Option[/* max 100 chars */ String], /* nullability unknown */ Option[/* max 100 chars */ String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String], /* nullability unknown */ Option[String]]("jobcandidateid", "Emp.StartDate", "Emp.EndDate", "Emp.OrgName", "Emp.JobTitle", "Emp.Responsibility", "Emp.FunctionCategory", "Emp.IndustryCategory", "Emp.Loc.CountryRegion", "Emp.Loc.State", "Emp.Loc.City")(x => (x.jobcandidateid, x.empStartDate, x.empEndDate, x.empOrgName, x.empJobTitle, x.empResponsibility, x.empFunctionCategory, x.empIndustryCategory, x.empLocCountryRegion, x.empLocState, x.empLocCity))(JobcandidateId.encoder, Encoder.encodeOption(TypoLocalDate.encoder), Encoder.encodeOption(TypoLocalDate.encoder), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString), Encoder.encodeOption(Encoder.encodeString))
  implicit lazy val read: Read[VjobcandidateemploymentViewRow] = new Read.CompositeOfInstances(Array(
    new Read.Single(JobcandidateId.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(TypoLocalDate.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(TypoLocalDate.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(Meta.StringMeta.get).asInstanceOf[Read[Any]]
  ))(using scala.reflect.ClassTag.Any).map { arr =>
    VjobcandidateemploymentViewRow(
      jobcandidateid = arr(0).asInstanceOf[JobcandidateId],
          empStartDate = arr(1).asInstanceOf[/* nullability unknown */ Option[TypoLocalDate]],
          empEndDate = arr(2).asInstanceOf[/* nullability unknown */ Option[TypoLocalDate]],
          empOrgName = arr(3).asInstanceOf[/* nullability unknown */ Option[/* max 100 chars */ String]],
          empJobTitle = arr(4).asInstanceOf[/* nullability unknown */ Option[/* max 100 chars */ String]],
          empResponsibility = arr(5).asInstanceOf[/* nullability unknown */ Option[String]],
          empFunctionCategory = arr(6).asInstanceOf[/* nullability unknown */ Option[String]],
          empIndustryCategory = arr(7).asInstanceOf[/* nullability unknown */ Option[String]],
          empLocCountryRegion = arr(8).asInstanceOf[/* nullability unknown */ Option[String]],
          empLocState = arr(9).asInstanceOf[/* nullability unknown */ Option[String]],
          empLocCity = arr(10).asInstanceOf[/* nullability unknown */ Option[String]]
    )
  }
}
