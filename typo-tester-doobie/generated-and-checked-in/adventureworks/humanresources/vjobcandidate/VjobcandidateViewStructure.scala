/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package humanresources
package vjobcandidate

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.humanresources.jobcandidate.JobcandidateId
import adventureworks.person.businessentity.BusinessentityId
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

class VjobcandidateViewStructure[Row](val prefix: Option[String], val extract: Row => VjobcandidateViewRow, val merge: (Row, VjobcandidateViewRow) => Row)
  extends Relation[VjobcandidateViewFields, VjobcandidateViewRow, Row]
    with VjobcandidateViewFields[Row] { outer =>

  override val jobcandidateid = new Field[JobcandidateId, Row](prefix, "jobcandidateid", None, None)(x => extract(x).jobcandidateid, (row, value) => merge(row, extract(row).copy(jobcandidateid = value)))
  override val businessentityid = new OptField[BusinessentityId, Row](prefix, "businessentityid", None, None)(x => extract(x).businessentityid, (row, value) => merge(row, extract(row).copy(businessentityid = value)))
  override val NamePrefix = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Prefix", None, None)(x => extract(x).NamePrefix, (row, value) => merge(row, extract(row).copy(NamePrefix = value)))
  override val NameFirst = new OptField[/* max 30 chars */ String, Row](prefix, "Name.First", None, None)(x => extract(x).NameFirst, (row, value) => merge(row, extract(row).copy(NameFirst = value)))
  override val NameMiddle = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Middle", None, None)(x => extract(x).NameMiddle, (row, value) => merge(row, extract(row).copy(NameMiddle = value)))
  override val NameLast = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Last", None, None)(x => extract(x).NameLast, (row, value) => merge(row, extract(row).copy(NameLast = value)))
  override val NameSuffix = new OptField[/* max 30 chars */ String, Row](prefix, "Name.Suffix", None, None)(x => extract(x).NameSuffix, (row, value) => merge(row, extract(row).copy(NameSuffix = value)))
  override val Skills = new OptField[String, Row](prefix, "Skills", None, None)(x => extract(x).Skills, (row, value) => merge(row, extract(row).copy(Skills = value)))
  override val AddrType = new OptField[/* max 30 chars */ String, Row](prefix, "Addr.Type", None, None)(x => extract(x).AddrType, (row, value) => merge(row, extract(row).copy(AddrType = value)))
  override val AddrLocCountryRegion = new OptField[/* max 100 chars */ String, Row](prefix, "Addr.Loc.CountryRegion", None, None)(x => extract(x).AddrLocCountryRegion, (row, value) => merge(row, extract(row).copy(AddrLocCountryRegion = value)))
  override val AddrLocState = new OptField[/* max 100 chars */ String, Row](prefix, "Addr.Loc.State", None, None)(x => extract(x).AddrLocState, (row, value) => merge(row, extract(row).copy(AddrLocState = value)))
  override val AddrLocCity = new OptField[/* max 100 chars */ String, Row](prefix, "Addr.Loc.City", None, None)(x => extract(x).AddrLocCity, (row, value) => merge(row, extract(row).copy(AddrLocCity = value)))
  override val AddrPostalCode = new OptField[/* max 20 chars */ String, Row](prefix, "Addr.PostalCode", None, None)(x => extract(x).AddrPostalCode, (row, value) => merge(row, extract(row).copy(AddrPostalCode = value)))
  override val EMail = new OptField[String, Row](prefix, "EMail", None, None)(x => extract(x).EMail, (row, value) => merge(row, extract(row).copy(EMail = value)))
  override val WebSite = new OptField[String, Row](prefix, "WebSite", None, None)(x => extract(x).WebSite, (row, value) => merge(row, extract(row).copy(WebSite = value)))
  override val modifieddate = new Field[TypoLocalDateTime, Row](prefix, "modifieddate", Some("text"), None)(x => extract(x).modifieddate, (row, value) => merge(row, extract(row).copy(modifieddate = value)))

  override val columns: List[FieldLikeNoHkt[?, Row]] =
    List[FieldLikeNoHkt[?, Row]](jobcandidateid, businessentityid, NamePrefix, NameFirst, NameMiddle, NameLast, NameSuffix, Skills, AddrType, AddrLocCountryRegion, AddrLocState, AddrLocCity, AddrPostalCode, EMail, WebSite, modifieddate)

  override def copy[NewRow](prefix: Option[String], extract: NewRow => VjobcandidateViewRow, merge: (NewRow, VjobcandidateViewRow) => NewRow): VjobcandidateViewStructure[NewRow] =
    new VjobcandidateViewStructure(prefix, extract, merge)
}
