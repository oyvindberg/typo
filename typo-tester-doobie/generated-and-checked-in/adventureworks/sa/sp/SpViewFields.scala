/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package sp

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.sales.salesterritory.SalesterritoryId
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait SpViewFields {
  def id: Field[BusinessentityId, SpViewRow]
  def businessentityid: Field[BusinessentityId, SpViewRow]
  def territoryid: OptField[SalesterritoryId, SpViewRow]
  def salesquota: OptField[BigDecimal, SpViewRow]
  def bonus: Field[BigDecimal, SpViewRow]
  def commissionpct: Field[BigDecimal, SpViewRow]
  def salesytd: Field[BigDecimal, SpViewRow]
  def saleslastyear: Field[BigDecimal, SpViewRow]
  def rowguid: Field[TypoUUID, SpViewRow]
  def modifieddate: Field[TypoLocalDateTime, SpViewRow]
}

object SpViewFields {
  lazy val structure: Relation[SpViewFields, SpViewRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[SpViewFields, SpViewRow] {
  
    override lazy val fields: SpViewFields = new SpViewFields {
      override def id = Field[BusinessentityId, SpViewRow](_path, "id", None, None, x => x.id, (row, value) => row.copy(id = value))
      override def businessentityid = Field[BusinessentityId, SpViewRow](_path, "businessentityid", None, None, x => x.businessentityid, (row, value) => row.copy(businessentityid = value))
      override def territoryid = OptField[SalesterritoryId, SpViewRow](_path, "territoryid", None, None, x => x.territoryid, (row, value) => row.copy(territoryid = value))
      override def salesquota = OptField[BigDecimal, SpViewRow](_path, "salesquota", None, None, x => x.salesquota, (row, value) => row.copy(salesquota = value))
      override def bonus = Field[BigDecimal, SpViewRow](_path, "bonus", None, None, x => x.bonus, (row, value) => row.copy(bonus = value))
      override def commissionpct = Field[BigDecimal, SpViewRow](_path, "commissionpct", None, None, x => x.commissionpct, (row, value) => row.copy(commissionpct = value))
      override def salesytd = Field[BigDecimal, SpViewRow](_path, "salesytd", None, None, x => x.salesytd, (row, value) => row.copy(salesytd = value))
      override def saleslastyear = Field[BigDecimal, SpViewRow](_path, "saleslastyear", None, None, x => x.saleslastyear, (row, value) => row.copy(saleslastyear = value))
      override def rowguid = Field[TypoUUID, SpViewRow](_path, "rowguid", None, None, x => x.rowguid, (row, value) => row.copy(rowguid = value))
      override def modifieddate = Field[TypoLocalDateTime, SpViewRow](_path, "modifieddate", Some("text"), None, x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, SpViewRow]] =
      List[FieldLikeNoHkt[?, SpViewRow]](fields.id, fields.businessentityid, fields.territoryid, fields.salesquota, fields.bonus, fields.commissionpct, fields.salesytd, fields.saleslastyear, fields.rowguid, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
