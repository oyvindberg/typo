/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sa
package cc

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoShort
import adventureworks.userdefined.CustomCreditcardId
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder

/** View: sa.cc */
case class CcViewRow(
  /** Points to [[sales.creditcard.CreditcardRow.creditcardid]] */
  id: /* user-picked */ CustomCreditcardId,
  /** Points to [[sales.creditcard.CreditcardRow.creditcardid]] */
  creditcardid: /* user-picked */ CustomCreditcardId,
  /** Points to [[sales.creditcard.CreditcardRow.cardtype]] */
  cardtype: /* max 50 chars */ String,
  /** Points to [[sales.creditcard.CreditcardRow.cardnumber]] */
  cardnumber: /* max 25 chars */ String,
  /** Points to [[sales.creditcard.CreditcardRow.expmonth]] */
  expmonth: TypoShort,
  /** Points to [[sales.creditcard.CreditcardRow.expyear]] */
  expyear: TypoShort,
  /** Points to [[sales.creditcard.CreditcardRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object CcViewRow {
  implicit lazy val decoder: Decoder[CcViewRow] = Decoder.forProduct7[CcViewRow, /* user-picked */ CustomCreditcardId, /* user-picked */ CustomCreditcardId, /* max 50 chars */ String, /* max 25 chars */ String, TypoShort, TypoShort, TypoLocalDateTime]("id", "creditcardid", "cardtype", "cardnumber", "expmonth", "expyear", "modifieddate")(CcViewRow.apply)(CustomCreditcardId.decoder, CustomCreditcardId.decoder, Decoder.decodeString, Decoder.decodeString, TypoShort.decoder, TypoShort.decoder, TypoLocalDateTime.decoder)
  implicit lazy val encoder: Encoder[CcViewRow] = Encoder.forProduct7[CcViewRow, /* user-picked */ CustomCreditcardId, /* user-picked */ CustomCreditcardId, /* max 50 chars */ String, /* max 25 chars */ String, TypoShort, TypoShort, TypoLocalDateTime]("id", "creditcardid", "cardtype", "cardnumber", "expmonth", "expyear", "modifieddate")(x => (x.id, x.creditcardid, x.cardtype, x.cardnumber, x.expmonth, x.expyear, x.modifieddate))(CustomCreditcardId.encoder, CustomCreditcardId.encoder, Encoder.encodeString, Encoder.encodeString, TypoShort.encoder, TypoShort.encoder, TypoLocalDateTime.encoder)
  implicit lazy val read: Read[CcViewRow] = new Read.CompositeOfInstances(Array(
    new Read.Single(/* user-picked */ CustomCreditcardId.get).asInstanceOf[Read[Any]],
      new Read.Single(/* user-picked */ CustomCreditcardId.get).asInstanceOf[Read[Any]],
      new Read.Single(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.Single(Meta.StringMeta.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoShort.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoShort.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoLocalDateTime.get).asInstanceOf[Read[Any]]
  ))(using scala.reflect.ClassTag.Any).map { arr =>
    CcViewRow(
      id = arr(0).asInstanceOf[/* user-picked */ CustomCreditcardId],
          creditcardid = arr(1).asInstanceOf[/* user-picked */ CustomCreditcardId],
          cardtype = arr(2).asInstanceOf[/* max 50 chars */ String],
          cardnumber = arr(3).asInstanceOf[/* max 25 chars */ String],
          expmonth = arr(4).asInstanceOf[TypoShort],
          expyear = arr(5).asInstanceOf[TypoShort],
          modifieddate = arr(6).asInstanceOf[TypoLocalDateTime]
    )
  }
}
