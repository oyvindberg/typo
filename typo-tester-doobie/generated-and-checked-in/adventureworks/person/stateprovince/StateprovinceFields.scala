/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package stateprovince

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.person.countryregion.CountryregionId
import adventureworks.public.Flag
import adventureworks.public.Name
import adventureworks.sales.salesterritory.SalesterritoryId
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.Structure.Relation

trait StateprovinceFields {
  def stateprovinceid: IdField[StateprovinceId, StateprovinceRow]
  def stateprovincecode: Field[/* bpchar, max 3 chars */ String, StateprovinceRow]
  def countryregioncode: Field[CountryregionId, StateprovinceRow]
  def isonlystateprovinceflag: Field[Flag, StateprovinceRow]
  def name: Field[Name, StateprovinceRow]
  def territoryid: Field[SalesterritoryId, StateprovinceRow]
  def rowguid: Field[TypoUUID, StateprovinceRow]
  def modifieddate: Field[TypoLocalDateTime, StateprovinceRow]
}

object StateprovinceFields {
  lazy val structure: Relation[StateprovinceFields, StateprovinceRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[StateprovinceFields, StateprovinceRow] {
  
    override lazy val fields: StateprovinceFields = new StateprovinceFields {
      override def stateprovinceid = IdField[StateprovinceId, StateprovinceRow](_path, "stateprovinceid", None, Some("int4"), x => x.stateprovinceid, (row, value) => row.copy(stateprovinceid = value))
      override def stateprovincecode = Field[/* bpchar, max 3 chars */ String, StateprovinceRow](_path, "stateprovincecode", None, Some("bpchar"), x => x.stateprovincecode, (row, value) => row.copy(stateprovincecode = value))
      override def countryregioncode = Field[CountryregionId, StateprovinceRow](_path, "countryregioncode", None, None, x => x.countryregioncode, (row, value) => row.copy(countryregioncode = value))
      override def isonlystateprovinceflag = Field[Flag, StateprovinceRow](_path, "isonlystateprovinceflag", None, Some("bool"), x => x.isonlystateprovinceflag, (row, value) => row.copy(isonlystateprovinceflag = value))
      override def name = Field[Name, StateprovinceRow](_path, "name", None, Some("varchar"), x => x.name, (row, value) => row.copy(name = value))
      override def territoryid = Field[SalesterritoryId, StateprovinceRow](_path, "territoryid", None, Some("int4"), x => x.territoryid, (row, value) => row.copy(territoryid = value))
      override def rowguid = Field[TypoUUID, StateprovinceRow](_path, "rowguid", None, Some("uuid"), x => x.rowguid, (row, value) => row.copy(rowguid = value))
      override def modifieddate = Field[TypoLocalDateTime, StateprovinceRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, StateprovinceRow]] =
      List[FieldLikeNoHkt[?, StateprovinceRow]](fields.stateprovinceid, fields.stateprovincecode, fields.countryregioncode, fields.isonlystateprovinceflag, fields.name, fields.territoryid, fields.rowguid, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
