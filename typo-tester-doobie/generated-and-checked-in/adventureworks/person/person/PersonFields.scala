/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package person

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.customtypes.TypoUUID
import adventureworks.customtypes.TypoXml
import adventureworks.person.businessentity.BusinessentityFields
import adventureworks.person.businessentity.BusinessentityId
import adventureworks.person.businessentity.BusinessentityRow
import adventureworks.public.Name
import adventureworks.public.NameStyle
import adventureworks.userdefined.FirstName
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait PersonFields {
  def businessentityid: IdField[BusinessentityId, PersonRow]
  def persontype: Field[/* bpchar, max 2 chars */ String, PersonRow]
  def namestyle: Field[NameStyle, PersonRow]
  def title: OptField[/* max 8 chars */ String, PersonRow]
  def firstname: Field[/* user-picked */ FirstName, PersonRow]
  def middlename: OptField[Name, PersonRow]
  def lastname: Field[Name, PersonRow]
  def suffix: OptField[/* max 10 chars */ String, PersonRow]
  def emailpromotion: Field[Int, PersonRow]
  def additionalcontactinfo: OptField[TypoXml, PersonRow]
  def demographics: OptField[TypoXml, PersonRow]
  def rowguid: Field[TypoUUID, PersonRow]
  def modifieddate: Field[TypoLocalDateTime, PersonRow]
  def fkBusinessentity: ForeignKey[BusinessentityFields, BusinessentityRow] =
    ForeignKey[BusinessentityFields, BusinessentityRow]("person.FK_Person_BusinessEntity_BusinessEntityID", Nil)
      .withColumnPair(businessentityid, _.businessentityid)
}

object PersonFields {
  lazy val structure: Relation[PersonFields, PersonRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[PersonFields, PersonRow] {
  
    override lazy val fields: PersonFields = new PersonFields {
      override def businessentityid = IdField[BusinessentityId, PersonRow](_path, "businessentityid", None, Some("int4"), x => x.businessentityid, (row, value) => row.copy(businessentityid = value))
      override def persontype = Field[/* bpchar, max 2 chars */ String, PersonRow](_path, "persontype", None, Some("bpchar"), x => x.persontype, (row, value) => row.copy(persontype = value))
      override def namestyle = Field[NameStyle, PersonRow](_path, "namestyle", None, Some("bool"), x => x.namestyle, (row, value) => row.copy(namestyle = value))
      override def title = OptField[/* max 8 chars */ String, PersonRow](_path, "title", None, None, x => x.title, (row, value) => row.copy(title = value))
      override def firstname = Field[/* user-picked */ FirstName, PersonRow](_path, "firstname", None, Some("varchar"), x => x.firstname, (row, value) => row.copy(firstname = value))
      override def middlename = OptField[Name, PersonRow](_path, "middlename", None, Some("varchar"), x => x.middlename, (row, value) => row.copy(middlename = value))
      override def lastname = Field[Name, PersonRow](_path, "lastname", None, Some("varchar"), x => x.lastname, (row, value) => row.copy(lastname = value))
      override def suffix = OptField[/* max 10 chars */ String, PersonRow](_path, "suffix", None, None, x => x.suffix, (row, value) => row.copy(suffix = value))
      override def emailpromotion = Field[Int, PersonRow](_path, "emailpromotion", None, Some("int4"), x => x.emailpromotion, (row, value) => row.copy(emailpromotion = value))
      override def additionalcontactinfo = OptField[TypoXml, PersonRow](_path, "additionalcontactinfo", None, Some("xml"), x => x.additionalcontactinfo, (row, value) => row.copy(additionalcontactinfo = value))
      override def demographics = OptField[TypoXml, PersonRow](_path, "demographics", None, Some("xml"), x => x.demographics, (row, value) => row.copy(demographics = value))
      override def rowguid = Field[TypoUUID, PersonRow](_path, "rowguid", None, Some("uuid"), x => x.rowguid, (row, value) => row.copy(rowguid = value))
      override def modifieddate = Field[TypoLocalDateTime, PersonRow](_path, "modifieddate", Some("text"), Some("timestamp"), x => x.modifieddate, (row, value) => row.copy(modifieddate = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, PersonRow]] =
      List[FieldLikeNoHkt[?, PersonRow]](fields.businessentityid, fields.persontype, fields.namestyle, fields.title, fields.firstname, fields.middlename, fields.lastname, fields.suffix, fields.emailpromotion, fields.additionalcontactinfo, fields.demographics, fields.rowguid, fields.modifieddate)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
