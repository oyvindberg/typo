/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package ct

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.person.contacttype.ContacttypeId
import adventureworks.public.Name
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder

/** View: pe.ct */
case class CtViewRow(
  /** Points to [[person.contacttype.ContacttypeRow.contacttypeid]] */
  id: ContacttypeId,
  /** Points to [[person.contacttype.ContacttypeRow.contacttypeid]] */
  contacttypeid: ContacttypeId,
  /** Points to [[person.contacttype.ContacttypeRow.name]] */
  name: Name,
  /** Points to [[person.contacttype.ContacttypeRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object CtViewRow {
  implicit lazy val decoder: Decoder[CtViewRow] = Decoder.forProduct4[CtViewRow, ContacttypeId, ContacttypeId, Name, TypoLocalDateTime]("id", "contacttypeid", "name", "modifieddate")(CtViewRow.apply)(ContacttypeId.decoder, ContacttypeId.decoder, Name.decoder, TypoLocalDateTime.decoder)
  implicit lazy val encoder: Encoder[CtViewRow] = Encoder.forProduct4[CtViewRow, ContacttypeId, ContacttypeId, Name, TypoLocalDateTime]("id", "contacttypeid", "name", "modifieddate")(x => (x.id, x.contacttypeid, x.name, x.modifieddate))(ContacttypeId.encoder, ContacttypeId.encoder, Name.encoder, TypoLocalDateTime.encoder)
  implicit lazy val read: Read[CtViewRow] = new Read.CompositeOfInstances(Array(
    new Read.Single(ContacttypeId.get).asInstanceOf[Read[Any]],
      new Read.Single(ContacttypeId.get).asInstanceOf[Read[Any]],
      new Read.Single(Name.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoLocalDateTime.get).asInstanceOf[Read[Any]]
  ))(using scala.reflect.ClassTag.Any).map { arr =>
    CtViewRow(
      id = arr(0).asInstanceOf[ContacttypeId],
          contacttypeid = arr(1).asInstanceOf[ContacttypeId],
          name = arr(2).asInstanceOf[Name],
          modifieddate = arr(3).asInstanceOf[TypoLocalDateTime]
    )
  }
}
