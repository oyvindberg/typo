/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package information_schema
package routines

import adventureworks.customtypes.TypoInstant
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.DecodingFailure
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet
import scala.util.Try

case class RoutinesViewRow(
  specificCatalog: /* nullability unknown */ Option[String],
  specificSchema: /* nullability unknown */ Option[String],
  specificName: /* nullability unknown */ Option[String],
  routineCatalog: /* nullability unknown */ Option[String],
  routineSchema: /* nullability unknown */ Option[String],
  routineName: /* nullability unknown */ Option[String],
  routineType: /* nullability unknown */ Option[String],
  moduleCatalog: /* nullability unknown */ Option[String],
  moduleSchema: /* nullability unknown */ Option[String],
  moduleName: /* nullability unknown */ Option[String],
  udtCatalog: /* nullability unknown */ Option[String],
  udtSchema: /* nullability unknown */ Option[String],
  udtName: /* nullability unknown */ Option[String],
  dataType: /* nullability unknown */ Option[String],
  characterMaximumLength: /* nullability unknown */ Option[Int],
  characterOctetLength: /* nullability unknown */ Option[Int],
  characterSetCatalog: /* nullability unknown */ Option[String],
  characterSetSchema: /* nullability unknown */ Option[String],
  characterSetName: /* nullability unknown */ Option[String],
  collationCatalog: /* nullability unknown */ Option[String],
  collationSchema: /* nullability unknown */ Option[String],
  collationName: /* nullability unknown */ Option[String],
  numericPrecision: /* nullability unknown */ Option[Int],
  numericPrecisionRadix: /* nullability unknown */ Option[Int],
  numericScale: /* nullability unknown */ Option[Int],
  datetimePrecision: /* nullability unknown */ Option[Int],
  intervalType: /* nullability unknown */ Option[String],
  intervalPrecision: /* nullability unknown */ Option[Int],
  typeUdtCatalog: /* nullability unknown */ Option[String],
  typeUdtSchema: /* nullability unknown */ Option[String],
  typeUdtName: /* nullability unknown */ Option[String],
  scopeCatalog: /* nullability unknown */ Option[String],
  scopeSchema: /* nullability unknown */ Option[String],
  scopeName: /* nullability unknown */ Option[String],
  maximumCardinality: /* nullability unknown */ Option[Int],
  dtdIdentifier: /* nullability unknown */ Option[String],
  routineBody: /* nullability unknown */ Option[String],
  routineDefinition: /* nullability unknown */ Option[String],
  externalName: /* nullability unknown */ Option[String],
  externalLanguage: /* nullability unknown */ Option[String],
  parameterStyle: /* nullability unknown */ Option[String],
  isDeterministic: /* nullability unknown */ Option[/* max 3 chars */ String],
  sqlDataAccess: /* nullability unknown */ Option[String],
  isNullCall: /* nullability unknown */ Option[/* max 3 chars */ String],
  sqlPath: /* nullability unknown */ Option[String],
  schemaLevelRoutine: /* nullability unknown */ Option[/* max 3 chars */ String],
  maxDynamicResultSets: /* nullability unknown */ Option[Int],
  isUserDefinedCast: /* nullability unknown */ Option[/* max 3 chars */ String],
  isImplicitlyInvocable: /* nullability unknown */ Option[/* max 3 chars */ String],
  securityType: /* nullability unknown */ Option[String],
  toSqlSpecificCatalog: /* nullability unknown */ Option[String],
  toSqlSpecificSchema: /* nullability unknown */ Option[String],
  toSqlSpecificName: /* nullability unknown */ Option[String],
  asLocator: /* nullability unknown */ Option[/* max 3 chars */ String],
  created: /* nullability unknown */ Option[TypoInstant],
  lastAltered: /* nullability unknown */ Option[TypoInstant],
  newSavepointLevel: /* nullability unknown */ Option[/* max 3 chars */ String],
  isUdtDependent: /* nullability unknown */ Option[/* max 3 chars */ String],
  resultCastFromDataType: /* nullability unknown */ Option[String],
  resultCastAsLocator: /* nullability unknown */ Option[/* max 3 chars */ String],
  resultCastCharMaxLength: /* nullability unknown */ Option[Int],
  resultCastCharOctetLength: /* nullability unknown */ Option[Int],
  resultCastCharSetCatalog: /* nullability unknown */ Option[String],
  resultCastCharSetSchema: /* nullability unknown */ Option[String],
  resultCastCharSetName: /* nullability unknown */ Option[String],
  resultCastCollationCatalog: /* nullability unknown */ Option[String],
  resultCastCollationSchema: /* nullability unknown */ Option[String],
  resultCastCollationName: /* nullability unknown */ Option[String],
  resultCastNumericPrecision: /* nullability unknown */ Option[Int],
  resultCastNumericPrecisionRadix: /* nullability unknown */ Option[Int],
  resultCastNumericScale: /* nullability unknown */ Option[Int],
  resultCastDatetimePrecision: /* nullability unknown */ Option[Int],
  resultCastIntervalType: /* nullability unknown */ Option[String],
  resultCastIntervalPrecision: /* nullability unknown */ Option[Int],
  resultCastTypeUdtCatalog: /* nullability unknown */ Option[String],
  resultCastTypeUdtSchema: /* nullability unknown */ Option[String],
  resultCastTypeUdtName: /* nullability unknown */ Option[String],
  resultCastScopeCatalog: /* nullability unknown */ Option[String],
  resultCastScopeSchema: /* nullability unknown */ Option[String],
  resultCastScopeName: /* nullability unknown */ Option[String],
  resultCastMaximumCardinality: /* nullability unknown */ Option[Int],
  resultCastDtdIdentifier: /* nullability unknown */ Option[String]
)

object RoutinesViewRow {
  implicit lazy val decoder: Decoder[RoutinesViewRow] = Decoder.instanceTry[RoutinesViewRow]((c: HCursor) =>
    Try {
      def orThrow[R](either: Either[DecodingFailure, R]): R = either match {
        case Left(err) => throw err
        case Right(r)  => r
      }
      RoutinesViewRow(
        specificCatalog = orThrow(c.get("specific_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        specificSchema = orThrow(c.get("specific_schema")(Decoder.decodeOption(Decoder.decodeString))),
        specificName = orThrow(c.get("specific_name")(Decoder.decodeOption(Decoder.decodeString))),
        routineCatalog = orThrow(c.get("routine_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        routineSchema = orThrow(c.get("routine_schema")(Decoder.decodeOption(Decoder.decodeString))),
        routineName = orThrow(c.get("routine_name")(Decoder.decodeOption(Decoder.decodeString))),
        routineType = orThrow(c.get("routine_type")(Decoder.decodeOption(Decoder.decodeString))),
        moduleCatalog = orThrow(c.get("module_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        moduleSchema = orThrow(c.get("module_schema")(Decoder.decodeOption(Decoder.decodeString))),
        moduleName = orThrow(c.get("module_name")(Decoder.decodeOption(Decoder.decodeString))),
        udtCatalog = orThrow(c.get("udt_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        udtSchema = orThrow(c.get("udt_schema")(Decoder.decodeOption(Decoder.decodeString))),
        udtName = orThrow(c.get("udt_name")(Decoder.decodeOption(Decoder.decodeString))),
        dataType = orThrow(c.get("data_type")(Decoder.decodeOption(Decoder.decodeString))),
        characterMaximumLength = orThrow(c.get("character_maximum_length")(Decoder.decodeOption(Decoder.decodeInt))),
        characterOctetLength = orThrow(c.get("character_octet_length")(Decoder.decodeOption(Decoder.decodeInt))),
        characterSetCatalog = orThrow(c.get("character_set_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        characterSetSchema = orThrow(c.get("character_set_schema")(Decoder.decodeOption(Decoder.decodeString))),
        characterSetName = orThrow(c.get("character_set_name")(Decoder.decodeOption(Decoder.decodeString))),
        collationCatalog = orThrow(c.get("collation_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        collationSchema = orThrow(c.get("collation_schema")(Decoder.decodeOption(Decoder.decodeString))),
        collationName = orThrow(c.get("collation_name")(Decoder.decodeOption(Decoder.decodeString))),
        numericPrecision = orThrow(c.get("numeric_precision")(Decoder.decodeOption(Decoder.decodeInt))),
        numericPrecisionRadix = orThrow(c.get("numeric_precision_radix")(Decoder.decodeOption(Decoder.decodeInt))),
        numericScale = orThrow(c.get("numeric_scale")(Decoder.decodeOption(Decoder.decodeInt))),
        datetimePrecision = orThrow(c.get("datetime_precision")(Decoder.decodeOption(Decoder.decodeInt))),
        intervalType = orThrow(c.get("interval_type")(Decoder.decodeOption(Decoder.decodeString))),
        intervalPrecision = orThrow(c.get("interval_precision")(Decoder.decodeOption(Decoder.decodeInt))),
        typeUdtCatalog = orThrow(c.get("type_udt_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        typeUdtSchema = orThrow(c.get("type_udt_schema")(Decoder.decodeOption(Decoder.decodeString))),
        typeUdtName = orThrow(c.get("type_udt_name")(Decoder.decodeOption(Decoder.decodeString))),
        scopeCatalog = orThrow(c.get("scope_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        scopeSchema = orThrow(c.get("scope_schema")(Decoder.decodeOption(Decoder.decodeString))),
        scopeName = orThrow(c.get("scope_name")(Decoder.decodeOption(Decoder.decodeString))),
        maximumCardinality = orThrow(c.get("maximum_cardinality")(Decoder.decodeOption(Decoder.decodeInt))),
        dtdIdentifier = orThrow(c.get("dtd_identifier")(Decoder.decodeOption(Decoder.decodeString))),
        routineBody = orThrow(c.get("routine_body")(Decoder.decodeOption(Decoder.decodeString))),
        routineDefinition = orThrow(c.get("routine_definition")(Decoder.decodeOption(Decoder.decodeString))),
        externalName = orThrow(c.get("external_name")(Decoder.decodeOption(Decoder.decodeString))),
        externalLanguage = orThrow(c.get("external_language")(Decoder.decodeOption(Decoder.decodeString))),
        parameterStyle = orThrow(c.get("parameter_style")(Decoder.decodeOption(Decoder.decodeString))),
        isDeterministic = orThrow(c.get("is_deterministic")(Decoder.decodeOption(Decoder.decodeString))),
        sqlDataAccess = orThrow(c.get("sql_data_access")(Decoder.decodeOption(Decoder.decodeString))),
        isNullCall = orThrow(c.get("is_null_call")(Decoder.decodeOption(Decoder.decodeString))),
        sqlPath = orThrow(c.get("sql_path")(Decoder.decodeOption(Decoder.decodeString))),
        schemaLevelRoutine = orThrow(c.get("schema_level_routine")(Decoder.decodeOption(Decoder.decodeString))),
        maxDynamicResultSets = orThrow(c.get("max_dynamic_result_sets")(Decoder.decodeOption(Decoder.decodeInt))),
        isUserDefinedCast = orThrow(c.get("is_user_defined_cast")(Decoder.decodeOption(Decoder.decodeString))),
        isImplicitlyInvocable = orThrow(c.get("is_implicitly_invocable")(Decoder.decodeOption(Decoder.decodeString))),
        securityType = orThrow(c.get("security_type")(Decoder.decodeOption(Decoder.decodeString))),
        toSqlSpecificCatalog = orThrow(c.get("to_sql_specific_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        toSqlSpecificSchema = orThrow(c.get("to_sql_specific_schema")(Decoder.decodeOption(Decoder.decodeString))),
        toSqlSpecificName = orThrow(c.get("to_sql_specific_name")(Decoder.decodeOption(Decoder.decodeString))),
        asLocator = orThrow(c.get("as_locator")(Decoder.decodeOption(Decoder.decodeString))),
        created = orThrow(c.get("created")(Decoder.decodeOption(TypoInstant.decoder))),
        lastAltered = orThrow(c.get("last_altered")(Decoder.decodeOption(TypoInstant.decoder))),
        newSavepointLevel = orThrow(c.get("new_savepoint_level")(Decoder.decodeOption(Decoder.decodeString))),
        isUdtDependent = orThrow(c.get("is_udt_dependent")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastFromDataType = orThrow(c.get("result_cast_from_data_type")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastAsLocator = orThrow(c.get("result_cast_as_locator")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastCharMaxLength = orThrow(c.get("result_cast_char_max_length")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastCharOctetLength = orThrow(c.get("result_cast_char_octet_length")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastCharSetCatalog = orThrow(c.get("result_cast_char_set_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastCharSetSchema = orThrow(c.get("result_cast_char_set_schema")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastCharSetName = orThrow(c.get("result_cast_char_set_name")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastCollationCatalog = orThrow(c.get("result_cast_collation_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastCollationSchema = orThrow(c.get("result_cast_collation_schema")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastCollationName = orThrow(c.get("result_cast_collation_name")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastNumericPrecision = orThrow(c.get("result_cast_numeric_precision")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastNumericPrecisionRadix = orThrow(c.get("result_cast_numeric_precision_radix")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastNumericScale = orThrow(c.get("result_cast_numeric_scale")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastDatetimePrecision = orThrow(c.get("result_cast_datetime_precision")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastIntervalType = orThrow(c.get("result_cast_interval_type")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastIntervalPrecision = orThrow(c.get("result_cast_interval_precision")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastTypeUdtCatalog = orThrow(c.get("result_cast_type_udt_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastTypeUdtSchema = orThrow(c.get("result_cast_type_udt_schema")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastTypeUdtName = orThrow(c.get("result_cast_type_udt_name")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastScopeCatalog = orThrow(c.get("result_cast_scope_catalog")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastScopeSchema = orThrow(c.get("result_cast_scope_schema")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastScopeName = orThrow(c.get("result_cast_scope_name")(Decoder.decodeOption(Decoder.decodeString))),
        resultCastMaximumCardinality = orThrow(c.get("result_cast_maximum_cardinality")(Decoder.decodeOption(Decoder.decodeInt))),
        resultCastDtdIdentifier = orThrow(c.get("result_cast_dtd_identifier")(Decoder.decodeOption(Decoder.decodeString)))
      )
    }
  )
  implicit lazy val encoder: Encoder[RoutinesViewRow] = Encoder[RoutinesViewRow](row =>
    Json.obj(
      "specific_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.specificCatalog),
      "specific_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.specificSchema),
      "specific_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.specificName),
      "routine_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.routineCatalog),
      "routine_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.routineSchema),
      "routine_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.routineName),
      "routine_type" -> Encoder.encodeOption(Encoder.encodeString).apply(row.routineType),
      "module_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.moduleCatalog),
      "module_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.moduleSchema),
      "module_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.moduleName),
      "udt_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.udtCatalog),
      "udt_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.udtSchema),
      "udt_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.udtName),
      "data_type" -> Encoder.encodeOption(Encoder.encodeString).apply(row.dataType),
      "character_maximum_length" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.characterMaximumLength),
      "character_octet_length" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.characterOctetLength),
      "character_set_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.characterSetCatalog),
      "character_set_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.characterSetSchema),
      "character_set_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.characterSetName),
      "collation_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.collationCatalog),
      "collation_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.collationSchema),
      "collation_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.collationName),
      "numeric_precision" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.numericPrecision),
      "numeric_precision_radix" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.numericPrecisionRadix),
      "numeric_scale" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.numericScale),
      "datetime_precision" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.datetimePrecision),
      "interval_type" -> Encoder.encodeOption(Encoder.encodeString).apply(row.intervalType),
      "interval_precision" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.intervalPrecision),
      "type_udt_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.typeUdtCatalog),
      "type_udt_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.typeUdtSchema),
      "type_udt_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.typeUdtName),
      "scope_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.scopeCatalog),
      "scope_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.scopeSchema),
      "scope_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.scopeName),
      "maximum_cardinality" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.maximumCardinality),
      "dtd_identifier" -> Encoder.encodeOption(Encoder.encodeString).apply(row.dtdIdentifier),
      "routine_body" -> Encoder.encodeOption(Encoder.encodeString).apply(row.routineBody),
      "routine_definition" -> Encoder.encodeOption(Encoder.encodeString).apply(row.routineDefinition),
      "external_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.externalName),
      "external_language" -> Encoder.encodeOption(Encoder.encodeString).apply(row.externalLanguage),
      "parameter_style" -> Encoder.encodeOption(Encoder.encodeString).apply(row.parameterStyle),
      "is_deterministic" -> Encoder.encodeOption(Encoder.encodeString).apply(row.isDeterministic),
      "sql_data_access" -> Encoder.encodeOption(Encoder.encodeString).apply(row.sqlDataAccess),
      "is_null_call" -> Encoder.encodeOption(Encoder.encodeString).apply(row.isNullCall),
      "sql_path" -> Encoder.encodeOption(Encoder.encodeString).apply(row.sqlPath),
      "schema_level_routine" -> Encoder.encodeOption(Encoder.encodeString).apply(row.schemaLevelRoutine),
      "max_dynamic_result_sets" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.maxDynamicResultSets),
      "is_user_defined_cast" -> Encoder.encodeOption(Encoder.encodeString).apply(row.isUserDefinedCast),
      "is_implicitly_invocable" -> Encoder.encodeOption(Encoder.encodeString).apply(row.isImplicitlyInvocable),
      "security_type" -> Encoder.encodeOption(Encoder.encodeString).apply(row.securityType),
      "to_sql_specific_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.toSqlSpecificCatalog),
      "to_sql_specific_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.toSqlSpecificSchema),
      "to_sql_specific_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.toSqlSpecificName),
      "as_locator" -> Encoder.encodeOption(Encoder.encodeString).apply(row.asLocator),
      "created" -> Encoder.encodeOption(TypoInstant.encoder).apply(row.created),
      "last_altered" -> Encoder.encodeOption(TypoInstant.encoder).apply(row.lastAltered),
      "new_savepoint_level" -> Encoder.encodeOption(Encoder.encodeString).apply(row.newSavepointLevel),
      "is_udt_dependent" -> Encoder.encodeOption(Encoder.encodeString).apply(row.isUdtDependent),
      "result_cast_from_data_type" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastFromDataType),
      "result_cast_as_locator" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastAsLocator),
      "result_cast_char_max_length" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastCharMaxLength),
      "result_cast_char_octet_length" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastCharOctetLength),
      "result_cast_char_set_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastCharSetCatalog),
      "result_cast_char_set_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastCharSetSchema),
      "result_cast_char_set_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastCharSetName),
      "result_cast_collation_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastCollationCatalog),
      "result_cast_collation_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastCollationSchema),
      "result_cast_collation_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastCollationName),
      "result_cast_numeric_precision" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastNumericPrecision),
      "result_cast_numeric_precision_radix" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastNumericPrecisionRadix),
      "result_cast_numeric_scale" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastNumericScale),
      "result_cast_datetime_precision" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastDatetimePrecision),
      "result_cast_interval_type" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastIntervalType),
      "result_cast_interval_precision" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastIntervalPrecision),
      "result_cast_type_udt_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastTypeUdtCatalog),
      "result_cast_type_udt_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastTypeUdtSchema),
      "result_cast_type_udt_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastTypeUdtName),
      "result_cast_scope_catalog" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastScopeCatalog),
      "result_cast_scope_schema" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastScopeSchema),
      "result_cast_scope_name" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastScopeName),
      "result_cast_maximum_cardinality" -> Encoder.encodeOption(Encoder.encodeInt).apply(row.resultCastMaximumCardinality),
      "result_cast_dtd_identifier" -> Encoder.encodeOption(Encoder.encodeString).apply(row.resultCastDtdIdentifier)
    )
  )
  implicit lazy val read: Read[RoutinesViewRow] = new Read[RoutinesViewRow](
    gets = List(
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (TypoInstant.get, Nullability.Nullable),
      (TypoInstant.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.StringMeta.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => RoutinesViewRow(
      specificCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 0),
      specificSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 1),
      specificName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 2),
      routineCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 3),
      routineSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 4),
      routineName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 5),
      routineType = Meta.StringMeta.get.unsafeGetNullable(rs, i + 6),
      moduleCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 7),
      moduleSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 8),
      moduleName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 9),
      udtCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 10),
      udtSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 11),
      udtName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 12),
      dataType = Meta.StringMeta.get.unsafeGetNullable(rs, i + 13),
      characterMaximumLength = Meta.IntMeta.get.unsafeGetNullable(rs, i + 14),
      characterOctetLength = Meta.IntMeta.get.unsafeGetNullable(rs, i + 15),
      characterSetCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 16),
      characterSetSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 17),
      characterSetName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 18),
      collationCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 19),
      collationSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 20),
      collationName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 21),
      numericPrecision = Meta.IntMeta.get.unsafeGetNullable(rs, i + 22),
      numericPrecisionRadix = Meta.IntMeta.get.unsafeGetNullable(rs, i + 23),
      numericScale = Meta.IntMeta.get.unsafeGetNullable(rs, i + 24),
      datetimePrecision = Meta.IntMeta.get.unsafeGetNullable(rs, i + 25),
      intervalType = Meta.StringMeta.get.unsafeGetNullable(rs, i + 26),
      intervalPrecision = Meta.IntMeta.get.unsafeGetNullable(rs, i + 27),
      typeUdtCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 28),
      typeUdtSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 29),
      typeUdtName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 30),
      scopeCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 31),
      scopeSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 32),
      scopeName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 33),
      maximumCardinality = Meta.IntMeta.get.unsafeGetNullable(rs, i + 34),
      dtdIdentifier = Meta.StringMeta.get.unsafeGetNullable(rs, i + 35),
      routineBody = Meta.StringMeta.get.unsafeGetNullable(rs, i + 36),
      routineDefinition = Meta.StringMeta.get.unsafeGetNullable(rs, i + 37),
      externalName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 38),
      externalLanguage = Meta.StringMeta.get.unsafeGetNullable(rs, i + 39),
      parameterStyle = Meta.StringMeta.get.unsafeGetNullable(rs, i + 40),
      isDeterministic = Meta.StringMeta.get.unsafeGetNullable(rs, i + 41),
      sqlDataAccess = Meta.StringMeta.get.unsafeGetNullable(rs, i + 42),
      isNullCall = Meta.StringMeta.get.unsafeGetNullable(rs, i + 43),
      sqlPath = Meta.StringMeta.get.unsafeGetNullable(rs, i + 44),
      schemaLevelRoutine = Meta.StringMeta.get.unsafeGetNullable(rs, i + 45),
      maxDynamicResultSets = Meta.IntMeta.get.unsafeGetNullable(rs, i + 46),
      isUserDefinedCast = Meta.StringMeta.get.unsafeGetNullable(rs, i + 47),
      isImplicitlyInvocable = Meta.StringMeta.get.unsafeGetNullable(rs, i + 48),
      securityType = Meta.StringMeta.get.unsafeGetNullable(rs, i + 49),
      toSqlSpecificCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 50),
      toSqlSpecificSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 51),
      toSqlSpecificName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 52),
      asLocator = Meta.StringMeta.get.unsafeGetNullable(rs, i + 53),
      created = TypoInstant.get.unsafeGetNullable(rs, i + 54),
      lastAltered = TypoInstant.get.unsafeGetNullable(rs, i + 55),
      newSavepointLevel = Meta.StringMeta.get.unsafeGetNullable(rs, i + 56),
      isUdtDependent = Meta.StringMeta.get.unsafeGetNullable(rs, i + 57),
      resultCastFromDataType = Meta.StringMeta.get.unsafeGetNullable(rs, i + 58),
      resultCastAsLocator = Meta.StringMeta.get.unsafeGetNullable(rs, i + 59),
      resultCastCharMaxLength = Meta.IntMeta.get.unsafeGetNullable(rs, i + 60),
      resultCastCharOctetLength = Meta.IntMeta.get.unsafeGetNullable(rs, i + 61),
      resultCastCharSetCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 62),
      resultCastCharSetSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 63),
      resultCastCharSetName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 64),
      resultCastCollationCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 65),
      resultCastCollationSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 66),
      resultCastCollationName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 67),
      resultCastNumericPrecision = Meta.IntMeta.get.unsafeGetNullable(rs, i + 68),
      resultCastNumericPrecisionRadix = Meta.IntMeta.get.unsafeGetNullable(rs, i + 69),
      resultCastNumericScale = Meta.IntMeta.get.unsafeGetNullable(rs, i + 70),
      resultCastDatetimePrecision = Meta.IntMeta.get.unsafeGetNullable(rs, i + 71),
      resultCastIntervalType = Meta.StringMeta.get.unsafeGetNullable(rs, i + 72),
      resultCastIntervalPrecision = Meta.IntMeta.get.unsafeGetNullable(rs, i + 73),
      resultCastTypeUdtCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 74),
      resultCastTypeUdtSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 75),
      resultCastTypeUdtName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 76),
      resultCastScopeCatalog = Meta.StringMeta.get.unsafeGetNullable(rs, i + 77),
      resultCastScopeSchema = Meta.StringMeta.get.unsafeGetNullable(rs, i + 78),
      resultCastScopeName = Meta.StringMeta.get.unsafeGetNullable(rs, i + 79),
      resultCastMaximumCardinality = Meta.IntMeta.get.unsafeGetNullable(rs, i + 80),
      resultCastDtdIdentifier = Meta.StringMeta.get.unsafeGetNullable(rs, i + 81)
    )
  )
}
