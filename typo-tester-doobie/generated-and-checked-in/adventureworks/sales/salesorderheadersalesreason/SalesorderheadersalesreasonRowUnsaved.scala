/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package salesorderheadersalesreason

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.sales.salesorderheader.SalesorderheaderId
import adventureworks.sales.salesreason.SalesreasonId
import doobie.postgres.Text
import io.circe.Decoder
import io.circe.Encoder

/** This class corresponds to a row in table `sales.salesorderheadersalesreason` which has not been persisted yet */
case class SalesorderheadersalesreasonRowUnsaved(
  /** Primary key. Foreign key to SalesOrderHeader.SalesOrderID.
      Points to [[salesorderheader.SalesorderheaderRow.salesorderid]] */
  salesorderid: SalesorderheaderId,
  /** Primary key. Foreign key to SalesReason.SalesReasonID.
      Points to [[salesreason.SalesreasonRow.salesreasonid]] */
  salesreasonid: SalesreasonId,
  /** Default: now() */
  modifieddate: Defaulted[TypoLocalDateTime] = Defaulted.UseDefault
) {
  def toRow(modifieddateDefault: => TypoLocalDateTime): SalesorderheadersalesreasonRow =
    SalesorderheadersalesreasonRow(
      salesorderid = salesorderid,
      salesreasonid = salesreasonid,
      modifieddate = modifieddate match {
                       case Defaulted.UseDefault => modifieddateDefault
                       case Defaulted.Provided(value) => value
                     }
    )
}
object SalesorderheadersalesreasonRowUnsaved {
  implicit lazy val decoder: Decoder[SalesorderheadersalesreasonRowUnsaved] = Decoder.forProduct3[SalesorderheadersalesreasonRowUnsaved, SalesorderheaderId, SalesreasonId, Defaulted[TypoLocalDateTime]]("salesorderid", "salesreasonid", "modifieddate")(SalesorderheadersalesreasonRowUnsaved.apply)(SalesorderheaderId.decoder, SalesreasonId.decoder, Defaulted.decoder(TypoLocalDateTime.decoder))
  implicit lazy val encoder: Encoder[SalesorderheadersalesreasonRowUnsaved] = Encoder.forProduct3[SalesorderheadersalesreasonRowUnsaved, SalesorderheaderId, SalesreasonId, Defaulted[TypoLocalDateTime]]("salesorderid", "salesreasonid", "modifieddate")(x => (x.salesorderid, x.salesreasonid, x.modifieddate))(SalesorderheaderId.encoder, SalesreasonId.encoder, Defaulted.encoder(TypoLocalDateTime.encoder))
  implicit lazy val text: Text[SalesorderheadersalesreasonRowUnsaved] = Text.instance[SalesorderheadersalesreasonRowUnsaved]{ (row, sb) =>
    SalesorderheaderId.text.unsafeEncode(row.salesorderid, sb)
    sb.append(Text.DELIMETER)
    SalesreasonId.text.unsafeEncode(row.salesreasonid, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(TypoLocalDateTime.text).unsafeEncode(row.modifieddate, sb)
  }
}
