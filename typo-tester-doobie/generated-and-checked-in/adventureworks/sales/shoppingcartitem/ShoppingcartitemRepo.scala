/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package sales
package shoppingcartitem

import doobie.free.connection.ConnectionIO
import fs2.Stream
import typo.dsl.DeleteBuilder
import typo.dsl.SelectBuilder
import typo.dsl.UpdateBuilder

trait ShoppingcartitemRepo {
  def delete: DeleteBuilder[ShoppingcartitemFields, ShoppingcartitemRow]
  def deleteById(shoppingcartitemid: ShoppingcartitemId): ConnectionIO[Boolean]
  def deleteByIds(shoppingcartitemids: Array[ShoppingcartitemId]): ConnectionIO[Int]
  def insert(unsaved: ShoppingcartitemRow): ConnectionIO[ShoppingcartitemRow]
  def insert(unsaved: ShoppingcartitemRowUnsaved): ConnectionIO[ShoppingcartitemRow]
  def insertStreaming(unsaved: Stream[ConnectionIO, ShoppingcartitemRow], batchSize: Int = 10000): ConnectionIO[Long]
  /* NOTE: this functionality requires PostgreSQL 16 or later! */
  def insertUnsavedStreaming(unsaved: Stream[ConnectionIO, ShoppingcartitemRowUnsaved], batchSize: Int = 10000): ConnectionIO[Long]
  def select: SelectBuilder[ShoppingcartitemFields, ShoppingcartitemRow]
  def selectAll: Stream[ConnectionIO, ShoppingcartitemRow]
  def selectById(shoppingcartitemid: ShoppingcartitemId): ConnectionIO[Option[ShoppingcartitemRow]]
  def selectByIds(shoppingcartitemids: Array[ShoppingcartitemId]): Stream[ConnectionIO, ShoppingcartitemRow]
  def selectByIdsTracked(shoppingcartitemids: Array[ShoppingcartitemId]): ConnectionIO[Map[ShoppingcartitemId, ShoppingcartitemRow]]
  def update: UpdateBuilder[ShoppingcartitemFields, ShoppingcartitemRow]
  def update(row: ShoppingcartitemRow): ConnectionIO[Boolean]
  def upsert(unsaved: ShoppingcartitemRow): ConnectionIO[ShoppingcartitemRow]
  def upsertBatch(unsaved: List[ShoppingcartitemRow]): Stream[ConnectionIO, ShoppingcartitemRow]
  /* NOTE: this functionality is not safe if you use auto-commit mode! it runs 3 SQL statements */
  def upsertStreaming(unsaved: Stream[ConnectionIO, ShoppingcartitemRow], batchSize: Int = 10000): ConnectionIO[Int]
}
