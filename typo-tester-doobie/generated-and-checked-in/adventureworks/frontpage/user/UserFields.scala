/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package user

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.frontpage.department.DepartmentFields
import adventureworks.frontpage.department.DepartmentId
import adventureworks.frontpage.department.DepartmentRow
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait UserFields {
  def id: IdField[UserId, UserRow]
  def email: Field[Email, UserRow]
  def name: Field[String, UserRow]
  def createdAt: OptField[TypoLocalDateTime, UserRow]
  def departmentId: OptField[DepartmentId, UserRow]
  def status: OptField[UserStatus, UserRow]
  def verified: OptField[Boolean, UserRow]
  def managerId: OptField[UserId, UserRow]
  def role: OptField[UserRole, UserRow]
  def fkDepartment: ForeignKey[DepartmentFields, DepartmentRow] =
    ForeignKey[DepartmentFields, DepartmentRow]("frontpage.user_department_id_fkey", Nil)
      .withColumnPair(departmentId, _.id)
  def fkUser: ForeignKey[UserFields, UserRow] =
    ForeignKey[UserFields, UserRow]("frontpage.user_manager_id_fkey", Nil)
      .withColumnPair(managerId, _.id)
}

object UserFields {
  lazy val structure: Relation[UserFields, UserRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[UserFields, UserRow] {
  
    override lazy val fields: UserFields = new UserFields {
      override def id = IdField[UserId, UserRow](_path, "id", None, Some("uuid"), x => x.id, (row, value) => row.copy(id = value))
      override def email = Field[Email, UserRow](_path, "email", None, Some("text"), x => x.email, (row, value) => row.copy(email = value))
      override def name = Field[String, UserRow](_path, "name", None, None, x => x.name, (row, value) => row.copy(name = value))
      override def createdAt = OptField[TypoLocalDateTime, UserRow](_path, "created_at", Some("text"), Some("timestamp"), x => x.createdAt, (row, value) => row.copy(createdAt = value))
      override def departmentId = OptField[DepartmentId, UserRow](_path, "department_id", None, Some("uuid"), x => x.departmentId, (row, value) => row.copy(departmentId = value))
      override def status = OptField[UserStatus, UserRow](_path, "status", None, Some("frontpage.user_status"), x => x.status, (row, value) => row.copy(status = value))
      override def verified = OptField[Boolean, UserRow](_path, "verified", None, None, x => x.verified, (row, value) => row.copy(verified = value))
      override def managerId = OptField[UserId, UserRow](_path, "manager_id", None, Some("uuid"), x => x.managerId, (row, value) => row.copy(managerId = value))
      override def role = OptField[UserRole, UserRow](_path, "role", None, Some("frontpage.user_role"), x => x.role, (row, value) => row.copy(role = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, UserRow]] =
      List[FieldLikeNoHkt[?, UserRow]](fields.id, fields.email, fields.name, fields.createdAt, fields.departmentId, fields.status, fields.verified, fields.managerId, fields.role)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
