/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package order_item

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.frontpage.order.OrderId
import adventureworks.frontpage.product.ProductId
import doobie.postgres.Text
import io.circe.Decoder
import io.circe.Encoder

/** This class corresponds to a row in table `frontpage.order_item` which has not been persisted yet */
case class OrderItemRowUnsaved(
  /** Points to [[order.OrderRow.id]] */
  orderId: Option[OrderId],
  /** Points to [[product.ProductRow.id]] */
  productId: Option[ProductId],
  quantity: Int,
  price: BigDecimal,
  shippedAt: Option[TypoLocalDateTime],
  /** Default: gen_random_uuid() */
  id: Defaulted[OrderItemId] = Defaulted.UseDefault
) {
  def toRow(idDefault: => OrderItemId): OrderItemRow =
    OrderItemRow(
      orderId = orderId,
      productId = productId,
      quantity = quantity,
      price = price,
      shippedAt = shippedAt,
      id = id match {
             case Defaulted.UseDefault => idDefault
             case Defaulted.Provided(value) => value
           }
    )
}
object OrderItemRowUnsaved {
  implicit lazy val decoder: Decoder[OrderItemRowUnsaved] = Decoder.forProduct6[OrderItemRowUnsaved, Option[OrderId], Option[ProductId], Int, BigDecimal, Option[TypoLocalDateTime], Defaulted[OrderItemId]]("order_id", "product_id", "quantity", "price", "shipped_at", "id")(OrderItemRowUnsaved.apply)(Decoder.decodeOption(OrderId.decoder), Decoder.decodeOption(ProductId.decoder), Decoder.decodeInt, Decoder.decodeBigDecimal, Decoder.decodeOption(TypoLocalDateTime.decoder), Defaulted.decoder(OrderItemId.decoder))
  implicit lazy val encoder: Encoder[OrderItemRowUnsaved] = Encoder.forProduct6[OrderItemRowUnsaved, Option[OrderId], Option[ProductId], Int, BigDecimal, Option[TypoLocalDateTime], Defaulted[OrderItemId]]("order_id", "product_id", "quantity", "price", "shipped_at", "id")(x => (x.orderId, x.productId, x.quantity, x.price, x.shippedAt, x.id))(Encoder.encodeOption(OrderId.encoder), Encoder.encodeOption(ProductId.encoder), Encoder.encodeInt, Encoder.encodeBigDecimal, Encoder.encodeOption(TypoLocalDateTime.encoder), Defaulted.encoder(OrderItemId.encoder))
  implicit lazy val text: Text[OrderItemRowUnsaved] = Text.instance[OrderItemRowUnsaved]{ (row, sb) =>
    Text.option(OrderId.text).unsafeEncode(row.orderId, sb)
    sb.append(Text.DELIMETER)
    Text.option(ProductId.text).unsafeEncode(row.productId, sb)
    sb.append(Text.DELIMETER)
    Text.intInstance.unsafeEncode(row.quantity, sb)
    sb.append(Text.DELIMETER)
    Text.bigDecimalInstance.unsafeEncode(row.price, sb)
    sb.append(Text.DELIMETER)
    Text.option(TypoLocalDateTime.text).unsafeEncode(row.shippedAt, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(OrderItemId.text).unsafeEncode(row.id, sb)
  }
}
