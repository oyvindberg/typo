/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package location

import adventureworks.customtypes.Defaulted
import adventureworks.customtypes.TypoInet
import adventureworks.customtypes.TypoJsonb
import adventureworks.customtypes.TypoPoint
import adventureworks.customtypes.TypoPolygon
import doobie.postgres.Text
import io.circe.Decoder
import io.circe.Encoder

/** This class corresponds to a row in table `frontpage.location` which has not been persisted yet */
case class LocationRowUnsaved(
  name: String,
  position: Option[TypoPoint],
  area: Option[TypoPolygon],
  ipRange: Option[TypoInet],
  /** Default: gen_random_uuid() */
  id: Defaulted[LocationId] = Defaulted.UseDefault,
  /** Default: '{}'::jsonb */
  metadata: Defaulted[Option[TypoJsonb]] = Defaulted.UseDefault
) {
  def toRow(idDefault: => LocationId, metadataDefault: => Option[TypoJsonb]): LocationRow =
    LocationRow(
      name = name,
      position = position,
      area = area,
      ipRange = ipRange,
      id = id match {
             case Defaulted.UseDefault => idDefault
             case Defaulted.Provided(value) => value
           },
      metadata = metadata match {
                   case Defaulted.UseDefault => metadataDefault
                   case Defaulted.Provided(value) => value
                 }
    )
}
object LocationRowUnsaved {
  implicit lazy val decoder: Decoder[LocationRowUnsaved] = Decoder.forProduct6[LocationRowUnsaved, String, Option[TypoPoint], Option[TypoPolygon], Option[TypoInet], Defaulted[LocationId], Defaulted[Option[TypoJsonb]]]("name", "position", "area", "ip_range", "id", "metadata")(LocationRowUnsaved.apply)(Decoder.decodeString, Decoder.decodeOption(TypoPoint.decoder), Decoder.decodeOption(TypoPolygon.decoder), Decoder.decodeOption(TypoInet.decoder), Defaulted.decoder(LocationId.decoder), Defaulted.decoder(Decoder.decodeOption(TypoJsonb.decoder)))
  implicit lazy val encoder: Encoder[LocationRowUnsaved] = Encoder.forProduct6[LocationRowUnsaved, String, Option[TypoPoint], Option[TypoPolygon], Option[TypoInet], Defaulted[LocationId], Defaulted[Option[TypoJsonb]]]("name", "position", "area", "ip_range", "id", "metadata")(x => (x.name, x.position, x.area, x.ipRange, x.id, x.metadata))(Encoder.encodeString, Encoder.encodeOption(TypoPoint.encoder), Encoder.encodeOption(TypoPolygon.encoder), Encoder.encodeOption(TypoInet.encoder), Defaulted.encoder(LocationId.encoder), Defaulted.encoder(Encoder.encodeOption(TypoJsonb.encoder)))
  implicit lazy val text: Text[LocationRowUnsaved] = Text.instance[LocationRowUnsaved]{ (row, sb) =>
    Text.stringInstance.unsafeEncode(row.name, sb)
    sb.append(Text.DELIMETER)
    Text.option(TypoPoint.text).unsafeEncode(row.position, sb)
    sb.append(Text.DELIMETER)
    Text.option(TypoPolygon.text).unsafeEncode(row.area, sb)
    sb.append(Text.DELIMETER)
    Text.option(TypoInet.text).unsafeEncode(row.ipRange, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(LocationId.text).unsafeEncode(row.id, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(Text.option(TypoJsonb.text)).unsafeEncode(row.metadata, sb)
  }
}
