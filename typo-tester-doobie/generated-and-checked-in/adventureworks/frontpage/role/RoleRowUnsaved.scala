/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package role

import adventureworks.customtypes.Defaulted
import doobie.postgres.Text
import io.circe.Decoder
import io.circe.Encoder

/** This class corresponds to a row in table `frontpage.role` which has not been persisted yet */
case class RoleRowUnsaved(
  name: String,
  /** Default: gen_random_uuid() */
  id: Defaulted[RoleId] = Defaulted.UseDefault
) {
  def toRow(idDefault: => RoleId): RoleRow =
    RoleRow(
      name = name,
      id = id match {
             case Defaulted.UseDefault => idDefault
             case Defaulted.Provided(value) => value
           }
    )
}
object RoleRowUnsaved {
  implicit lazy val decoder: Decoder[RoleRowUnsaved] = Decoder.forProduct2[RoleRowUnsaved, String, Defaulted[RoleId]]("name", "id")(RoleRowUnsaved.apply)(Decoder.decodeString, Defaulted.decoder(RoleId.decoder))
  implicit lazy val encoder: Encoder[RoleRowUnsaved] = Encoder.forProduct2[RoleRowUnsaved, String, Defaulted[RoleId]]("name", "id")(x => (x.name, x.id))(Encoder.encodeString, Defaulted.encoder(RoleId.encoder))
  implicit lazy val text: Text[RoleRowUnsaved] = Text.instance[RoleRowUnsaved]{ (row, sb) =>
    Text.stringInstance.unsafeEncode(row.name, sb)
    sb.append(Text.DELIMETER)
    Defaulted.text(RoleId.text).unsafeEncode(row.id, sb)
  }
}
