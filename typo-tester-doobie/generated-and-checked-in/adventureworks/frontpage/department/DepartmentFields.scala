/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package frontpage
package department

import adventureworks.frontpage.company.CompanyFields
import adventureworks.frontpage.company.CompanyId
import adventureworks.frontpage.company.CompanyRow
import typo.dsl.ForeignKey
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait DepartmentFields {
  def id: IdField[DepartmentId, DepartmentRow]
  def name: Field[String, DepartmentRow]
  def budget: OptField[BigDecimal, DepartmentRow]
  def companyId: OptField[CompanyId, DepartmentRow]
  def fkCompany: ForeignKey[CompanyFields, CompanyRow] =
    ForeignKey[CompanyFields, CompanyRow]("frontpage.department_company_id_fkey", Nil)
      .withColumnPair(companyId, _.id)
}

object DepartmentFields {
  lazy val structure: Relation[DepartmentFields, DepartmentRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[DepartmentFields, DepartmentRow] {
  
    override lazy val fields: DepartmentFields = new DepartmentFields {
      override def id = IdField[DepartmentId, DepartmentRow](_path, "id", None, Some("uuid"), x => x.id, (row, value) => row.copy(id = value))
      override def name = Field[String, DepartmentRow](_path, "name", None, None, x => x.name, (row, value) => row.copy(name = value))
      override def budget = OptField[BigDecimal, DepartmentRow](_path, "budget", None, Some("numeric"), x => x.budget, (row, value) => row.copy(budget = value))
      override def companyId = OptField[CompanyId, DepartmentRow](_path, "company_id", None, Some("uuid"), x => x.companyId, (row, value) => row.copy(companyId = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, DepartmentRow]] =
      List[FieldLikeNoHkt[?, DepartmentRow]](fields.id, fields.name, fields.budget, fields.companyId)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
