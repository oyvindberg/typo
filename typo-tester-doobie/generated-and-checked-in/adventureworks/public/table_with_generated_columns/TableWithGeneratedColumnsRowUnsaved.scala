/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package public
package table_with_generated_columns

import doobie.postgres.Text
import io.circe.Decoder
import io.circe.Encoder

/** This class corresponds to a row in table `public.table-with-generated-columns` which has not been persisted yet */
case class TableWithGeneratedColumnsRowUnsaved(
  name: TableWithGeneratedColumnsId
) {
  def toRow(nameTypeAlwaysDefault: => String): TableWithGeneratedColumnsRow =
    TableWithGeneratedColumnsRow(
      name = name,
      nameTypeAlways = nameTypeAlwaysDefault
    )
}
object TableWithGeneratedColumnsRowUnsaved {
  implicit lazy val decoder: Decoder[TableWithGeneratedColumnsRowUnsaved] = Decoder.forProduct1[TableWithGeneratedColumnsRowUnsaved, TableWithGeneratedColumnsId]("name")(TableWithGeneratedColumnsRowUnsaved.apply)(TableWithGeneratedColumnsId.decoder)
  implicit lazy val encoder: Encoder[TableWithGeneratedColumnsRowUnsaved] = Encoder.forProduct1[TableWithGeneratedColumnsRowUnsaved, TableWithGeneratedColumnsId]("name")(x => (x.name))(TableWithGeneratedColumnsId.encoder)
  implicit lazy val text: Text[TableWithGeneratedColumnsRowUnsaved] = Text.instance[TableWithGeneratedColumnsRowUnsaved]{ (row, sb) =>
    TableWithGeneratedColumnsId.text.unsafeEncode(row.name, sb)
  }
}
