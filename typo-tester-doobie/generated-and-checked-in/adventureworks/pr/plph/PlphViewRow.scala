/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package plph

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.production.product.ProductId
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder

/** View: pr.plph */
case class PlphViewRow(
  /** Points to [[production.productlistpricehistory.ProductlistpricehistoryRow.productid]] */
  id: ProductId,
  /** Points to [[production.productlistpricehistory.ProductlistpricehistoryRow.productid]] */
  productid: ProductId,
  /** Points to [[production.productlistpricehistory.ProductlistpricehistoryRow.startdate]] */
  startdate: TypoLocalDateTime,
  /** Points to [[production.productlistpricehistory.ProductlistpricehistoryRow.enddate]] */
  enddate: Option[TypoLocalDateTime],
  /** Points to [[production.productlistpricehistory.ProductlistpricehistoryRow.listprice]] */
  listprice: BigDecimal,
  /** Points to [[production.productlistpricehistory.ProductlistpricehistoryRow.modifieddate]] */
  modifieddate: TypoLocalDateTime
)

object PlphViewRow {
  implicit lazy val decoder: Decoder[PlphViewRow] = Decoder.forProduct6[PlphViewRow, ProductId, ProductId, TypoLocalDateTime, Option[TypoLocalDateTime], BigDecimal, TypoLocalDateTime]("id", "productid", "startdate", "enddate", "listprice", "modifieddate")(PlphViewRow.apply)(ProductId.decoder, ProductId.decoder, TypoLocalDateTime.decoder, Decoder.decodeOption(TypoLocalDateTime.decoder), Decoder.decodeBigDecimal, TypoLocalDateTime.decoder)
  implicit lazy val encoder: Encoder[PlphViewRow] = Encoder.forProduct6[PlphViewRow, ProductId, ProductId, TypoLocalDateTime, Option[TypoLocalDateTime], BigDecimal, TypoLocalDateTime]("id", "productid", "startdate", "enddate", "listprice", "modifieddate")(x => (x.id, x.productid, x.startdate, x.enddate, x.listprice, x.modifieddate))(ProductId.encoder, ProductId.encoder, TypoLocalDateTime.encoder, Encoder.encodeOption(TypoLocalDateTime.encoder), Encoder.encodeBigDecimal, TypoLocalDateTime.encoder)
  implicit lazy val read: Read[PlphViewRow] = new Read.CompositeOfInstances(Array(
    new Read.Single(ProductId.get).asInstanceOf[Read[Any]],
      new Read.Single(ProductId.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoLocalDateTime.get).asInstanceOf[Read[Any]],
      new Read.SingleOpt(TypoLocalDateTime.get).asInstanceOf[Read[Any]],
      new Read.Single(Meta.ScalaBigDecimalMeta.get).asInstanceOf[Read[Any]],
      new Read.Single(TypoLocalDateTime.get).asInstanceOf[Read[Any]]
  ))(using scala.reflect.ClassTag.Any).map { arr =>
    PlphViewRow(
      id = arr(0).asInstanceOf[ProductId],
          productid = arr(1).asInstanceOf[ProductId],
          startdate = arr(2).asInstanceOf[TypoLocalDateTime],
          enddate = arr(3).asInstanceOf[Option[TypoLocalDateTime]],
          listprice = arr(4).asInstanceOf[BigDecimal],
          modifieddate = arr(5).asInstanceOf[TypoLocalDateTime]
    )
  }
}
