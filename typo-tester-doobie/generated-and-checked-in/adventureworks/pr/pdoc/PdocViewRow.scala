/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pdoc

import adventureworks.customtypes.TypoLocalDateTime
import adventureworks.production.document.DocumentId
import adventureworks.production.product.ProductId
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

/** View: pr.pdoc */
case class PdocViewRow(
  /** Points to [[production.productdocument.ProductdocumentRow.productid]] */
  id: ProductId,
  /** Points to [[production.productdocument.ProductdocumentRow.productid]] */
  productid: ProductId,
  /** Points to [[production.productdocument.ProductdocumentRow.modifieddate]] */
  modifieddate: TypoLocalDateTime,
  /** Points to [[production.productdocument.ProductdocumentRow.documentnode]] */
  documentnode: DocumentId
)

object PdocViewRow {
  implicit lazy val decoder: Decoder[PdocViewRow] = Decoder.forProduct4[PdocViewRow, ProductId, ProductId, TypoLocalDateTime, DocumentId]("id", "productid", "modifieddate", "documentnode")(PdocViewRow.apply)(ProductId.decoder, ProductId.decoder, TypoLocalDateTime.decoder, DocumentId.decoder)
  implicit lazy val encoder: Encoder[PdocViewRow] = Encoder.forProduct4[PdocViewRow, ProductId, ProductId, TypoLocalDateTime, DocumentId]("id", "productid", "modifieddate", "documentnode")(x => (x.id, x.productid, x.modifieddate, x.documentnode))(ProductId.encoder, ProductId.encoder, TypoLocalDateTime.encoder, DocumentId.encoder)
  implicit lazy val read: Read[PdocViewRow] = new Read[PdocViewRow](
    gets = List(
      (ProductId.get, Nullability.NoNulls),
      (ProductId.get, Nullability.NoNulls),
      (TypoLocalDateTime.get, Nullability.NoNulls),
      (DocumentId.get, Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PdocViewRow(
      id = ProductId.get.unsafeGetNonNullable(rs, i + 0),
      productid = ProductId.get.unsafeGetNonNullable(rs, i + 1),
      modifieddate = TypoLocalDateTime.get.unsafeGetNonNullable(rs, i + 2),
      documentnode = DocumentId.get.unsafeGetNonNullable(rs, i + 3)
    )
  )
}
