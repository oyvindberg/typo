/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pr

import adventureworks.production.product.ProductId
import adventureworks.production.productreview.ProductreviewId
import adventureworks.public.Name
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object PrViewRepoImpl extends PrViewRepo {
  override def selectAll: Stream[ConnectionIO, PrViewRow] = {
    sql"""select "id", productreviewid, productid, reviewername, reviewdate, emailaddress, rating, "comments", modifieddate from pr.pr""".query[PrViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[PrViewFieldOrIdValue[_]]): Stream[ConnectionIO, PrViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case PrViewFieldValue.id(value) => fr""""id" = $value"""
        case PrViewFieldValue.productreviewid(value) => fr"productreviewid = $value"
        case PrViewFieldValue.productid(value) => fr"productid = $value"
        case PrViewFieldValue.reviewername(value) => fr"reviewername = $value"
        case PrViewFieldValue.reviewdate(value) => fr"reviewdate = $value"
        case PrViewFieldValue.emailaddress(value) => fr"emailaddress = $value"
        case PrViewFieldValue.rating(value) => fr"rating = $value"
        case PrViewFieldValue.comments(value) => fr""""comments" = $value"""
        case PrViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from pr.pr $where".query[PrViewRow].stream
  
  }
  implicit val read: Read[PrViewRow] =
    new Read[PrViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[ProductreviewId], Nullability.Nullable),
        (Get[ProductId], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PrViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        productreviewid = Get[ProductreviewId].unsafeGetNullable(rs, i + 1),
        productid = Get[ProductId].unsafeGetNullable(rs, i + 2),
        reviewername = Get[Name].unsafeGetNullable(rs, i + 3),
        reviewdate = Get[LocalDateTime].unsafeGetNullable(rs, i + 4),
        emailaddress = Get[String].unsafeGetNullable(rs, i + 5),
        rating = Get[Int].unsafeGetNullable(rs, i + 6),
        comments = Get[String].unsafeGetNullable(rs, i + 7),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 8)
      )
    )
  

}
