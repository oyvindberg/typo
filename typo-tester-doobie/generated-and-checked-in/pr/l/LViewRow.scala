/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package l

import adventureworks.TypoLocalDateTime
import adventureworks.production.location.LocationId
import adventureworks.public.Name
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class LViewRow(
  id: Option[Int],
  /** Points to [[production.location.LocationRow.locationid]] */
  locationid: Option[LocationId],
  /** Points to [[production.location.LocationRow.name]] */
  name: Option[Name],
  /** Points to [[production.location.LocationRow.costrate]] */
  costrate: Option[BigDecimal],
  /** Points to [[production.location.LocationRow.availability]] */
  availability: Option[BigDecimal],
  /** Points to [[production.location.LocationRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object LViewRow {
  implicit val decoder: Decoder[LViewRow] = Decoder.forProduct6[LViewRow, Option[Int], Option[LocationId], Option[Name], Option[BigDecimal], Option[BigDecimal], Option[TypoLocalDateTime]]("id", "locationid", "name", "costrate", "availability", "modifieddate")(LViewRow.apply)
  implicit val encoder: Encoder[LViewRow] = Encoder.forProduct6[LViewRow, Option[Int], Option[LocationId], Option[Name], Option[BigDecimal], Option[BigDecimal], Option[TypoLocalDateTime]]("id", "locationid", "name", "costrate", "availability", "modifieddate")(x => (x.id, x.locationid, x.name, x.costrate, x.availability, x.modifieddate))
  implicit val read: Read[LViewRow] = new Read[LViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[LocationId], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[BigDecimal], Nullability.Nullable),
      (Get[BigDecimal], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => LViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      locationid = Get[LocationId].unsafeGetNullable(rs, i + 1),
      name = Get[Name].unsafeGetNullable(rs, i + 2),
      costrate = Get[BigDecimal].unsafeGetNullable(rs, i + 3),
      availability = Get[BigDecimal].unsafeGetNullable(rs, i + 4),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 5)
    )
  )
}
