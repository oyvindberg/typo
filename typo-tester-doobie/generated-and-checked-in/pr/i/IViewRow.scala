/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package i

import adventureworks.TypoLocalDateTime
import adventureworks.TypoXml
import adventureworks.production.illustration.IllustrationId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class IViewRow(
  id: Option[Int],
  /** Points to [[production.illustration.IllustrationRow.illustrationid]] */
  illustrationid: Option[IllustrationId],
  /** Points to [[production.illustration.IllustrationRow.diagram]] */
  diagram: Option[TypoXml],
  /** Points to [[production.illustration.IllustrationRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object IViewRow {
  implicit val decoder: Decoder[IViewRow] = Decoder.forProduct4[IViewRow, Option[Int], Option[IllustrationId], Option[TypoXml], Option[TypoLocalDateTime]]("id", "illustrationid", "diagram", "modifieddate")(IViewRow.apply)
  implicit val encoder: Encoder[IViewRow] = Encoder.forProduct4[IViewRow, Option[Int], Option[IllustrationId], Option[TypoXml], Option[TypoLocalDateTime]]("id", "illustrationid", "diagram", "modifieddate")(x => (x.id, x.illustrationid, x.diagram, x.modifieddate))
  implicit val read: Read[IViewRow] = new Read[IViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[IllustrationId], Nullability.Nullable),
      (Get[TypoXml], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => IViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      illustrationid = Get[IllustrationId].unsafeGetNullable(rs, i + 1),
      diagram = Get[TypoXml].unsafeGetNullable(rs, i + 2),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 3)
    )
  )
}
