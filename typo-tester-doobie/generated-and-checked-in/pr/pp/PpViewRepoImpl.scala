/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pp

import adventureworks.production.productphoto.ProductphotoId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object PpViewRepoImpl extends PpViewRepo {
  override def selectAll: Stream[ConnectionIO, PpViewRow] = {
    sql"""select "id", productphotoid, thumbnailphoto, thumbnailphotofilename, largephoto, largephotofilename, modifieddate from pr.pp""".query[PpViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[PpViewFieldOrIdValue[_]]): Stream[ConnectionIO, PpViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case PpViewFieldValue.id(value) => fr""""id" = $value"""
        case PpViewFieldValue.productphotoid(value) => fr"productphotoid = $value"
        case PpViewFieldValue.thumbnailphoto(value) => fr"thumbnailphoto = $value"
        case PpViewFieldValue.thumbnailphotofilename(value) => fr"thumbnailphotofilename = $value"
        case PpViewFieldValue.largephoto(value) => fr"largephoto = $value"
        case PpViewFieldValue.largephotofilename(value) => fr"largephotofilename = $value"
        case PpViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from pr.pp $where".query[PpViewRow].stream
  
  }
  implicit val read: Read[PpViewRow] =
    new Read[PpViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[ProductphotoId], Nullability.Nullable),
        (Get[Byte], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[Byte], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => PpViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        productphotoid = Get[ProductphotoId].unsafeGetNullable(rs, i + 1),
        thumbnailphoto = Get[Byte].unsafeGetNullable(rs, i + 2),
        thumbnailphotofilename = Get[String].unsafeGetNullable(rs, i + 3),
        largephoto = Get[Byte].unsafeGetNullable(rs, i + 4),
        largephotofilename = Get[String].unsafeGetNullable(rs, i + 5),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 6)
      )
    )
  

}
