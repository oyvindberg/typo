/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package bom

import adventureworks.production.billofmaterials.BillofmaterialsId
import adventureworks.production.product.ProductId
import adventureworks.production.unitmeasure.UnitmeasureId
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime

object BomViewRepoImpl extends BomViewRepo {
  override def selectAll: Stream[ConnectionIO, BomViewRow] = {
    sql"""select "id", billofmaterialsid, productassemblyid, componentid, startdate, enddate, unitmeasurecode, bomlevel, perassemblyqty, modifieddate from pr."bom"""".query[BomViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[BomViewFieldOrIdValue[_]]): Stream[ConnectionIO, BomViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case BomViewFieldValue.id(value) => fr""""id" = $value"""
        case BomViewFieldValue.billofmaterialsid(value) => fr"billofmaterialsid = $value"
        case BomViewFieldValue.productassemblyid(value) => fr"productassemblyid = $value"
        case BomViewFieldValue.componentid(value) => fr"componentid = $value"
        case BomViewFieldValue.startdate(value) => fr"startdate = $value"
        case BomViewFieldValue.enddate(value) => fr"enddate = $value"
        case BomViewFieldValue.unitmeasurecode(value) => fr"unitmeasurecode = $value"
        case BomViewFieldValue.bomlevel(value) => fr"bomlevel = $value"
        case BomViewFieldValue.perassemblyqty(value) => fr"perassemblyqty = $value"
        case BomViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"""select * from pr."bom" $where""".query[BomViewRow].stream
  
  }
  implicit val read: Read[BomViewRow] =
    new Read[BomViewRow](
      gets = List(
        (Get[Int], Nullability.Nullable),
        (Get[BillofmaterialsId], Nullability.Nullable),
        (Get[ProductId], Nullability.Nullable),
        (Get[ProductId], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable),
        (Get[UnitmeasureId], Nullability.Nullable),
        (Get[Int], Nullability.Nullable),
        (Get[BigDecimal], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => BomViewRow(
        id = Get[Int].unsafeGetNullable(rs, i + 0),
        billofmaterialsid = Get[BillofmaterialsId].unsafeGetNullable(rs, i + 1),
        productassemblyid = Get[ProductId].unsafeGetNullable(rs, i + 2),
        componentid = Get[ProductId].unsafeGetNullable(rs, i + 3),
        startdate = Get[LocalDateTime].unsafeGetNullable(rs, i + 4),
        enddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 5),
        unitmeasurecode = Get[UnitmeasureId].unsafeGetNullable(rs, i + 6),
        bomlevel = Get[Int].unsafeGetNullable(rs, i + 7),
        perassemblyqty = Get[BigDecimal].unsafeGetNullable(rs, i + 8),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 9)
      )
    )
  

}
