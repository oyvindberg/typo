/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package w

import adventureworks.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.production.scrapreason.ScrapreasonId
import adventureworks.production.workorder.WorkorderId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class WViewRow(
  id: Option[Int],
  /** Points to [[production.workorder.WorkorderRow.workorderid]] */
  workorderid: Option[WorkorderId],
  /** Points to [[production.workorder.WorkorderRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[production.workorder.WorkorderRow.orderqty]] */
  orderqty: Option[Int],
  /** Points to [[production.workorder.WorkorderRow.scrappedqty]] */
  scrappedqty: Option[Int],
  /** Points to [[production.workorder.WorkorderRow.startdate]] */
  startdate: Option[TypoLocalDateTime],
  /** Points to [[production.workorder.WorkorderRow.enddate]] */
  enddate: Option[TypoLocalDateTime],
  /** Points to [[production.workorder.WorkorderRow.duedate]] */
  duedate: Option[TypoLocalDateTime],
  /** Points to [[production.workorder.WorkorderRow.scrapreasonid]] */
  scrapreasonid: Option[ScrapreasonId],
  /** Points to [[production.workorder.WorkorderRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object WViewRow {
  implicit val decoder: Decoder[WViewRow] = Decoder.forProduct10[WViewRow, Option[Int], Option[WorkorderId], Option[ProductId], Option[Int], Option[Int], Option[TypoLocalDateTime], Option[TypoLocalDateTime], Option[TypoLocalDateTime], Option[ScrapreasonId], Option[TypoLocalDateTime]]("id", "workorderid", "productid", "orderqty", "scrappedqty", "startdate", "enddate", "duedate", "scrapreasonid", "modifieddate")(WViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(WorkorderId.decoder), Decoder.decodeOption(ProductId.decoder), Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(TypoLocalDateTime.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder), Decoder.decodeOption(ScrapreasonId.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[WViewRow] = Encoder.forProduct10[WViewRow, Option[Int], Option[WorkorderId], Option[ProductId], Option[Int], Option[Int], Option[TypoLocalDateTime], Option[TypoLocalDateTime], Option[TypoLocalDateTime], Option[ScrapreasonId], Option[TypoLocalDateTime]]("id", "workorderid", "productid", "orderqty", "scrappedqty", "startdate", "enddate", "duedate", "scrapreasonid", "modifieddate")(x => (x.id, x.workorderid, x.productid, x.orderqty, x.scrappedqty, x.startdate, x.enddate, x.duedate, x.scrapreasonid, x.modifieddate))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(WorkorderId.encoder), Encoder.encodeOption(ProductId.encoder), Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(TypoLocalDateTime.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder), Encoder.encodeOption(ScrapreasonId.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[WViewRow] = new Read[WViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (WorkorderId.get, Nullability.Nullable),
      (ProductId.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (Meta.IntMeta.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable),
      (ScrapreasonId.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => WViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      workorderid = WorkorderId.get.unsafeGetNullable(rs, i + 1),
      productid = ProductId.get.unsafeGetNullable(rs, i + 2),
      orderqty = Meta.IntMeta.get.unsafeGetNullable(rs, i + 3),
      scrappedqty = Meta.IntMeta.get.unsafeGetNullable(rs, i + 4),
      startdate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 5),
      enddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 6),
      duedate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 7),
      scrapreasonid = ScrapreasonId.get.unsafeGetNullable(rs, i + 8),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 9)
    )
  )
}
