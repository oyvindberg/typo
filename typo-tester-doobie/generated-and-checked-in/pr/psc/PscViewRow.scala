/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package psc

import adventureworks.TypoLocalDateTime
import adventureworks.production.productcategory.ProductcategoryId
import adventureworks.production.productsubcategory.ProductsubcategoryId
import adventureworks.public.Name
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet
import java.util.UUID

case class PscViewRow(
  id: Option[Int],
  /** Points to [[production.productsubcategory.ProductsubcategoryRow.productsubcategoryid]] */
  productsubcategoryid: Option[ProductsubcategoryId],
  /** Points to [[production.productsubcategory.ProductsubcategoryRow.productcategoryid]] */
  productcategoryid: Option[ProductcategoryId],
  /** Points to [[production.productsubcategory.ProductsubcategoryRow.name]] */
  name: Option[Name],
  /** Points to [[production.productsubcategory.ProductsubcategoryRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[production.productsubcategory.ProductsubcategoryRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object PscViewRow {
  implicit val decoder: Decoder[PscViewRow] = Decoder.forProduct6[PscViewRow, Option[Int], Option[ProductsubcategoryId], Option[ProductcategoryId], Option[Name], Option[UUID], Option[TypoLocalDateTime]]("id", "productsubcategoryid", "productcategoryid", "name", "rowguid", "modifieddate")(PscViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(ProductsubcategoryId.decoder), Decoder.decodeOption(ProductcategoryId.decoder), Decoder.decodeOption(Name.decoder), Decoder.decodeOption(Decoder.decodeUUID), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[PscViewRow] = Encoder.forProduct6[PscViewRow, Option[Int], Option[ProductsubcategoryId], Option[ProductcategoryId], Option[Name], Option[UUID], Option[TypoLocalDateTime]]("id", "productsubcategoryid", "productcategoryid", "name", "rowguid", "modifieddate")(x => (x.id, x.productsubcategoryid, x.productcategoryid, x.name, x.rowguid, x.modifieddate))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(ProductsubcategoryId.encoder), Encoder.encodeOption(ProductcategoryId.encoder), Encoder.encodeOption(Name.encoder), Encoder.encodeOption(Encoder.encodeUUID), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[PscViewRow] = new Read[PscViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (ProductsubcategoryId.get, Nullability.Nullable),
      (ProductcategoryId.get, Nullability.Nullable),
      (Name.get, Nullability.Nullable),
      (adventureworks.UUIDMeta.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PscViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      productsubcategoryid = ProductsubcategoryId.get.unsafeGetNullable(rs, i + 1),
      productcategoryid = ProductcategoryId.get.unsafeGetNullable(rs, i + 2),
      name = Name.get.unsafeGetNullable(rs, i + 3),
      rowguid = adventureworks.UUIDMeta.get.unsafeGetNullable(rs, i + 4),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 5)
    )
  )
}
