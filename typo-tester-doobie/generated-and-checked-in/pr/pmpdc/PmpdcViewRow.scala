/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pmpdc

import adventureworks.TypoLocalDateTime
import adventureworks.production.culture.CultureId
import adventureworks.production.productdescription.ProductdescriptionId
import adventureworks.production.productmodel.ProductmodelId
import doobie.enumerated.Nullability
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PmpdcViewRow(
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.productmodelid]] */
  productmodelid: Option[ProductmodelId],
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.productdescriptionid]] */
  productdescriptionid: Option[ProductdescriptionId],
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.cultureid]] */
  cultureid: Option[CultureId],
  /** Points to [[production.productmodelproductdescriptionculture.ProductmodelproductdescriptioncultureRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object PmpdcViewRow {
  implicit val decoder: Decoder[PmpdcViewRow] = Decoder.forProduct4[PmpdcViewRow, Option[ProductmodelId], Option[ProductdescriptionId], Option[CultureId], Option[TypoLocalDateTime]]("productmodelid", "productdescriptionid", "cultureid", "modifieddate")(PmpdcViewRow.apply)(Decoder.decodeOption(ProductmodelId.decoder), Decoder.decodeOption(ProductdescriptionId.decoder), Decoder.decodeOption(CultureId.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder))
  implicit val encoder: Encoder[PmpdcViewRow] = Encoder.forProduct4[PmpdcViewRow, Option[ProductmodelId], Option[ProductdescriptionId], Option[CultureId], Option[TypoLocalDateTime]]("productmodelid", "productdescriptionid", "cultureid", "modifieddate")(x => (x.productmodelid, x.productdescriptionid, x.cultureid, x.modifieddate))(Encoder.encodeOption(ProductmodelId.encoder), Encoder.encodeOption(ProductdescriptionId.encoder), Encoder.encodeOption(CultureId.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder))
  implicit val read: Read[PmpdcViewRow] = new Read[PmpdcViewRow](
    gets = List(
      (ProductmodelId.get, Nullability.Nullable),
      (ProductdescriptionId.get, Nullability.Nullable),
      (CultureId.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PmpdcViewRow(
      productmodelid = ProductmodelId.get.unsafeGetNullable(rs, i + 0),
      productdescriptionid = ProductdescriptionId.get.unsafeGetNullable(rs, i + 1),
      cultureid = CultureId.get.unsafeGetNullable(rs, i + 2),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 3)
    )
  )
}
