/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package tha

import adventureworks.TypoLocalDateTime
import adventureworks.production.transactionhistoryarchive.TransactionhistoryarchiveId
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class ThaViewRow(
  id: Option[Int],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.transactionid]] */
  transactionid: Option[TransactionhistoryarchiveId],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.productid]] */
  productid: Option[Int],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.referenceorderid]] */
  referenceorderid: Option[Int],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.referenceorderlineid]] */
  referenceorderlineid: Option[Int],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.transactiondate]] */
  transactiondate: Option[TypoLocalDateTime],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.transactiontype]] */
  transactiontype: Option[/* bpchar */ String],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.quantity]] */
  quantity: Option[Int],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.actualcost]] */
  actualcost: Option[BigDecimal],
  /** Points to [[production.transactionhistoryarchive.TransactionhistoryarchiveRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object ThaViewRow {
  implicit val decoder: Decoder[ThaViewRow] = Decoder.forProduct10[ThaViewRow, Option[Int], Option[TransactionhistoryarchiveId], Option[Int], Option[Int], Option[Int], Option[TypoLocalDateTime], Option[/* bpchar */ String], Option[Int], Option[BigDecimal], Option[TypoLocalDateTime]]("id", "transactionid", "productid", "referenceorderid", "referenceorderlineid", "transactiondate", "transactiontype", "quantity", "actualcost", "modifieddate")(ThaViewRow.apply)
  implicit val encoder: Encoder[ThaViewRow] = Encoder.forProduct10[ThaViewRow, Option[Int], Option[TransactionhistoryarchiveId], Option[Int], Option[Int], Option[Int], Option[TypoLocalDateTime], Option[/* bpchar */ String], Option[Int], Option[BigDecimal], Option[TypoLocalDateTime]]("id", "transactionid", "productid", "referenceorderid", "referenceorderlineid", "transactiondate", "transactiontype", "quantity", "actualcost", "modifieddate")(x => (x.id, x.transactionid, x.productid, x.referenceorderid, x.referenceorderlineid, x.transactiondate, x.transactiontype, x.quantity, x.actualcost, x.modifieddate))
  implicit val read: Read[ThaViewRow] = new Read[ThaViewRow](
    gets = List(
      (Get[Int], Nullability.Nullable),
      (Get[TransactionhistoryarchiveId], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable),
      (Get[/* bpchar */ String], Nullability.Nullable),
      (Get[Int], Nullability.Nullable),
      (Get[BigDecimal], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => ThaViewRow(
      id = Get[Int].unsafeGetNullable(rs, i + 0),
      transactionid = Get[TransactionhistoryarchiveId].unsafeGetNullable(rs, i + 1),
      productid = Get[Int].unsafeGetNullable(rs, i + 2),
      referenceorderid = Get[Int].unsafeGetNullable(rs, i + 3),
      referenceorderlineid = Get[Int].unsafeGetNullable(rs, i + 4),
      transactiondate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 5),
      transactiontype = Get[/* bpchar */ String].unsafeGetNullable(rs, i + 6),
      quantity = Get[Int].unsafeGetNullable(rs, i + 7),
      actualcost = Get[BigDecimal].unsafeGetNullable(rs, i + 8),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 9)
    )
  )
}
