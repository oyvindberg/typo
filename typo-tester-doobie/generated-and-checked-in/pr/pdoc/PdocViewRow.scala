/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pr
package pdoc

import adventureworks.TypoLocalDateTime
import adventureworks.production.document.DocumentId
import adventureworks.production.product.ProductId
import doobie.enumerated.Nullability
import doobie.util.Read
import doobie.util.meta.Meta
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class PdocViewRow(
  id: Option[Int],
  /** Points to [[production.productdocument.ProductdocumentRow.productid]] */
  productid: Option[ProductId],
  /** Points to [[production.productdocument.ProductdocumentRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime],
  /** Points to [[production.productdocument.ProductdocumentRow.documentnode]] */
  documentnode: Option[DocumentId]
)

object PdocViewRow {
  implicit val decoder: Decoder[PdocViewRow] = Decoder.forProduct4[PdocViewRow, Option[Int], Option[ProductId], Option[TypoLocalDateTime], Option[DocumentId]]("id", "productid", "modifieddate", "documentnode")(PdocViewRow.apply)(Decoder.decodeOption(Decoder.decodeInt), Decoder.decodeOption(ProductId.decoder), Decoder.decodeOption(TypoLocalDateTime.decoder), Decoder.decodeOption(DocumentId.decoder))
  implicit val encoder: Encoder[PdocViewRow] = Encoder.forProduct4[PdocViewRow, Option[Int], Option[ProductId], Option[TypoLocalDateTime], Option[DocumentId]]("id", "productid", "modifieddate", "documentnode")(x => (x.id, x.productid, x.modifieddate, x.documentnode))(Encoder.encodeOption(Encoder.encodeInt), Encoder.encodeOption(ProductId.encoder), Encoder.encodeOption(TypoLocalDateTime.encoder), Encoder.encodeOption(DocumentId.encoder))
  implicit val read: Read[PdocViewRow] = new Read[PdocViewRow](
    gets = List(
      (Meta.IntMeta.get, Nullability.Nullable),
      (ProductId.get, Nullability.Nullable),
      (TypoLocalDateTime.get, Nullability.Nullable),
      (DocumentId.get, Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => PdocViewRow(
      id = Meta.IntMeta.get.unsafeGetNullable(rs, i + 0),
      productid = ProductId.get.unsafeGetNullable(rs, i + 1),
      modifieddate = TypoLocalDateTime.get.unsafeGetNullable(rs, i + 2),
      documentnode = DocumentId.get.unsafeGetNullable(rs, i + 3)
    )
  )
}
