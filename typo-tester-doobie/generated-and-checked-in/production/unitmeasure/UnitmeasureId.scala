/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package unitmeasure

import doobie.Meta

/** Type for the primary key of table `production.unitmeasure` */
case class UnitmeasureId(value: /* bpchar */ String) extends AnyVal
object UnitmeasureId {
  implicit val ordering: Ordering[UnitmeasureId] = Ordering.by(_.value)
  
  implicit val metaArray: Meta[Array[UnitmeasureId]] = Meta[Array[/* bpchar */ String]].imap(_.map(UnitmeasureId.apply))(_.map(_.value))
  implicit val meta: Meta[UnitmeasureId] = Meta[/* bpchar */ String].imap(UnitmeasureId.apply)(_.value)
}
