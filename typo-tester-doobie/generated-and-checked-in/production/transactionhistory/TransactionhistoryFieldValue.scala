/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package transactionhistory

import adventureworks.production.product.ProductId
import java.time.LocalDateTime

sealed abstract class TransactionhistoryFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class TransactionhistoryFieldValue[T](name: String, value: T) extends TransactionhistoryFieldOrIdValue(name, value)

object TransactionhistoryFieldValue {
  case class transactionid(override val value: TransactionhistoryId) extends TransactionhistoryFieldOrIdValue("transactionid", value)
  case class productid(override val value: ProductId) extends TransactionhistoryFieldValue("productid", value)
  case class referenceorderid(override val value: Int) extends TransactionhistoryFieldValue("referenceorderid", value)
  case class referenceorderlineid(override val value: Int) extends TransactionhistoryFieldValue("referenceorderlineid", value)
  case class transactiondate(override val value: LocalDateTime) extends TransactionhistoryFieldValue("transactiondate", value)
  case class transactiontype(override val value: /* bpchar */ String) extends TransactionhistoryFieldValue("transactiontype", value)
  case class quantity(override val value: Int) extends TransactionhistoryFieldValue("quantity", value)
  case class actualcost(override val value: BigDecimal) extends TransactionhistoryFieldValue("actualcost", value)
  case class modifieddate(override val value: LocalDateTime) extends TransactionhistoryFieldValue("modifieddate", value)
}
