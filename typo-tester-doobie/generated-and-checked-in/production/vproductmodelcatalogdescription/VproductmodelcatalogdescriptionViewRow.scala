/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductmodelcatalogdescription

import adventureworks.TypoLocalDateTime
import adventureworks.production.productmodel.ProductmodelId
import adventureworks.public.Name
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.DecodingFailure
import io.circe.Encoder
import io.circe.HCursor
import io.circe.Json
import java.sql.ResultSet
import java.util.UUID
import scala.util.Try

case class VproductmodelcatalogdescriptionViewRow(
  /** Points to [[productmodel.ProductmodelRow.productmodelid]] */
  productmodelid: Option[ProductmodelId],
  /** Points to [[productmodel.ProductmodelRow.name]] */
  name: Option[Name],
  Summary: Option[String],
  manufacturer: Option[String],
  copyright: Option[/* max 30 chars */ String],
  producturl: Option[/* max 256 chars */ String],
  warrantyperiod: Option[/* max 256 chars */ String],
  warrantydescription: Option[/* max 256 chars */ String],
  noofyears: Option[/* max 256 chars */ String],
  maintenancedescription: Option[/* max 256 chars */ String],
  wheel: Option[/* max 256 chars */ String],
  saddle: Option[/* max 256 chars */ String],
  pedal: Option[/* max 256 chars */ String],
  bikeframe: Option[String],
  crankset: Option[/* max 256 chars */ String],
  pictureangle: Option[/* max 256 chars */ String],
  picturesize: Option[/* max 256 chars */ String],
  productphotoid: Option[/* max 256 chars */ String],
  material: Option[/* max 256 chars */ String],
  color: Option[/* max 256 chars */ String],
  productline: Option[/* max 256 chars */ String],
  style: Option[/* max 256 chars */ String],
  riderexperience: Option[/* max 1024 chars */ String],
  /** Points to [[productmodel.ProductmodelRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[productmodel.ProductmodelRow.modifieddate]] */
  modifieddate: Option[TypoLocalDateTime]
)

object VproductmodelcatalogdescriptionViewRow {
  implicit val decoder: Decoder[VproductmodelcatalogdescriptionViewRow] = Decoder.instanceTry[VproductmodelcatalogdescriptionViewRow]((c: HCursor) =>
    Try {
      def orThrow[R](either: Either[DecodingFailure, R]): R = either match {
        case Left(err) => throw err
        case Right(r)  => r
      }
      VproductmodelcatalogdescriptionViewRow(
        productmodelid = orThrow(c.get("productmodelid")(Decoder[Option[ProductmodelId]])),
        name = orThrow(c.get("name")(Decoder[Option[Name]])),
        Summary = orThrow(c.get("Summary")(Decoder[Option[String]])),
        manufacturer = orThrow(c.get("manufacturer")(Decoder[Option[String]])),
        copyright = orThrow(c.get("copyright")(Decoder[Option[/* max 30 chars */ String]])),
        producturl = orThrow(c.get("producturl")(Decoder[Option[/* max 256 chars */ String]])),
        warrantyperiod = orThrow(c.get("warrantyperiod")(Decoder[Option[/* max 256 chars */ String]])),
        warrantydescription = orThrow(c.get("warrantydescription")(Decoder[Option[/* max 256 chars */ String]])),
        noofyears = orThrow(c.get("noofyears")(Decoder[Option[/* max 256 chars */ String]])),
        maintenancedescription = orThrow(c.get("maintenancedescription")(Decoder[Option[/* max 256 chars */ String]])),
        wheel = orThrow(c.get("wheel")(Decoder[Option[/* max 256 chars */ String]])),
        saddle = orThrow(c.get("saddle")(Decoder[Option[/* max 256 chars */ String]])),
        pedal = orThrow(c.get("pedal")(Decoder[Option[/* max 256 chars */ String]])),
        bikeframe = orThrow(c.get("bikeframe")(Decoder[Option[String]])),
        crankset = orThrow(c.get("crankset")(Decoder[Option[/* max 256 chars */ String]])),
        pictureangle = orThrow(c.get("pictureangle")(Decoder[Option[/* max 256 chars */ String]])),
        picturesize = orThrow(c.get("picturesize")(Decoder[Option[/* max 256 chars */ String]])),
        productphotoid = orThrow(c.get("productphotoid")(Decoder[Option[/* max 256 chars */ String]])),
        material = orThrow(c.get("material")(Decoder[Option[/* max 256 chars */ String]])),
        color = orThrow(c.get("color")(Decoder[Option[/* max 256 chars */ String]])),
        productline = orThrow(c.get("productline")(Decoder[Option[/* max 256 chars */ String]])),
        style = orThrow(c.get("style")(Decoder[Option[/* max 256 chars */ String]])),
        riderexperience = orThrow(c.get("riderexperience")(Decoder[Option[/* max 1024 chars */ String]])),
        rowguid = orThrow(c.get("rowguid")(Decoder[Option[UUID]])),
        modifieddate = orThrow(c.get("modifieddate")(Decoder[Option[TypoLocalDateTime]]))
      )
    }
  )
  implicit val encoder: Encoder[VproductmodelcatalogdescriptionViewRow] = Encoder[VproductmodelcatalogdescriptionViewRow](row =>
    Json.obj(
      "productmodelid" -> Encoder[Option[ProductmodelId]].apply(row.productmodelid),
      "name" -> Encoder[Option[Name]].apply(row.name),
      "Summary" -> Encoder[Option[String]].apply(row.Summary),
      "manufacturer" -> Encoder[Option[String]].apply(row.manufacturer),
      "copyright" -> Encoder[Option[/* max 30 chars */ String]].apply(row.copyright),
      "producturl" -> Encoder[Option[/* max 256 chars */ String]].apply(row.producturl),
      "warrantyperiod" -> Encoder[Option[/* max 256 chars */ String]].apply(row.warrantyperiod),
      "warrantydescription" -> Encoder[Option[/* max 256 chars */ String]].apply(row.warrantydescription),
      "noofyears" -> Encoder[Option[/* max 256 chars */ String]].apply(row.noofyears),
      "maintenancedescription" -> Encoder[Option[/* max 256 chars */ String]].apply(row.maintenancedescription),
      "wheel" -> Encoder[Option[/* max 256 chars */ String]].apply(row.wheel),
      "saddle" -> Encoder[Option[/* max 256 chars */ String]].apply(row.saddle),
      "pedal" -> Encoder[Option[/* max 256 chars */ String]].apply(row.pedal),
      "bikeframe" -> Encoder[Option[String]].apply(row.bikeframe),
      "crankset" -> Encoder[Option[/* max 256 chars */ String]].apply(row.crankset),
      "pictureangle" -> Encoder[Option[/* max 256 chars */ String]].apply(row.pictureangle),
      "picturesize" -> Encoder[Option[/* max 256 chars */ String]].apply(row.picturesize),
      "productphotoid" -> Encoder[Option[/* max 256 chars */ String]].apply(row.productphotoid),
      "material" -> Encoder[Option[/* max 256 chars */ String]].apply(row.material),
      "color" -> Encoder[Option[/* max 256 chars */ String]].apply(row.color),
      "productline" -> Encoder[Option[/* max 256 chars */ String]].apply(row.productline),
      "style" -> Encoder[Option[/* max 256 chars */ String]].apply(row.style),
      "riderexperience" -> Encoder[Option[/* max 1024 chars */ String]].apply(row.riderexperience),
      "rowguid" -> Encoder[Option[UUID]].apply(row.rowguid),
      "modifieddate" -> Encoder[Option[TypoLocalDateTime]].apply(row.modifieddate)
    )
  )
  implicit val read: Read[VproductmodelcatalogdescriptionViewRow] = new Read[VproductmodelcatalogdescriptionViewRow](
    gets = List(
      (Get[ProductmodelId], Nullability.Nullable),
      (Get[Name], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[/* max 30 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 256 chars */ String], Nullability.Nullable),
      (Get[/* max 1024 chars */ String], Nullability.Nullable),
      (Get[UUID], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.Nullable)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => VproductmodelcatalogdescriptionViewRow(
      productmodelid = Get[ProductmodelId].unsafeGetNullable(rs, i + 0),
      name = Get[Name].unsafeGetNullable(rs, i + 1),
      Summary = Get[String].unsafeGetNullable(rs, i + 2),
      manufacturer = Get[String].unsafeGetNullable(rs, i + 3),
      copyright = Get[/* max 30 chars */ String].unsafeGetNullable(rs, i + 4),
      producturl = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 5),
      warrantyperiod = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 6),
      warrantydescription = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 7),
      noofyears = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 8),
      maintenancedescription = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 9),
      wheel = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 10),
      saddle = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 11),
      pedal = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 12),
      bikeframe = Get[String].unsafeGetNullable(rs, i + 13),
      crankset = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 14),
      pictureangle = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 15),
      picturesize = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 16),
      productphotoid = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 17),
      material = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 18),
      color = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 19),
      productline = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 20),
      style = Get[/* max 256 chars */ String].unsafeGetNullable(rs, i + 21),
      riderexperience = Get[/* max 1024 chars */ String].unsafeGetNullable(rs, i + 22),
      rowguid = Get[UUID].unsafeGetNullable(rs, i + 23),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNullable(rs, i + 24)
    )
  )
}
