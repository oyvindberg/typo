/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package vproductmodelcatalogdescription

import adventureworks.production.productmodel.ProductmodelId
import adventureworks.public.Name
import doobie.Get
import doobie.Read
import doobie.enumerated.Nullability
import doobie.free.connection.ConnectionIO
import doobie.syntax.string.toSqlInterpolator
import doobie.util.fragments
import fs2.Stream
import java.sql.ResultSet
import java.time.LocalDateTime
import java.util.UUID

object VproductmodelcatalogdescriptionViewRepoImpl extends VproductmodelcatalogdescriptionViewRepo {
  override def selectAll: Stream[ConnectionIO, VproductmodelcatalogdescriptionViewRow] = {
    sql"""select productmodelid, "name", Summary, manufacturer, copyright, producturl, warrantyperiod, warrantydescription, noofyears, maintenancedescription, wheel, saddle, pedal, bikeframe, crankset, pictureangle, picturesize, productphotoid, material, color, productline, "style", riderexperience, rowguid, modifieddate from production.vproductmodelcatalogdescription""".query[VproductmodelcatalogdescriptionViewRow].stream
  }
  override def selectByFieldValues(fieldValues: List[VproductmodelcatalogdescriptionViewFieldOrIdValue[_]]): Stream[ConnectionIO, VproductmodelcatalogdescriptionViewRow] = {
    val where = fragments.whereAnd(
      fieldValues.map {
        case VproductmodelcatalogdescriptionViewFieldValue.productmodelid(value) => fr"productmodelid = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.name(value) => fr""""name" = $value"""
        case VproductmodelcatalogdescriptionViewFieldValue.Summary(value) => fr"Summary = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.manufacturer(value) => fr"manufacturer = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.copyright(value) => fr"copyright = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.producturl(value) => fr"producturl = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.warrantyperiod(value) => fr"warrantyperiod = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.warrantydescription(value) => fr"warrantydescription = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.noofyears(value) => fr"noofyears = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.maintenancedescription(value) => fr"maintenancedescription = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.wheel(value) => fr"wheel = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.saddle(value) => fr"saddle = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.pedal(value) => fr"pedal = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.bikeframe(value) => fr"bikeframe = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.crankset(value) => fr"crankset = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.pictureangle(value) => fr"pictureangle = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.picturesize(value) => fr"picturesize = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.productphotoid(value) => fr"productphotoid = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.material(value) => fr"material = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.color(value) => fr"color = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.productline(value) => fr"productline = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.style(value) => fr""""style" = $value"""
        case VproductmodelcatalogdescriptionViewFieldValue.riderexperience(value) => fr"riderexperience = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.rowguid(value) => fr"rowguid = $value"
        case VproductmodelcatalogdescriptionViewFieldValue.modifieddate(value) => fr"modifieddate = $value"
      } :_*
    )
    sql"select * from production.vproductmodelcatalogdescription $where".query[VproductmodelcatalogdescriptionViewRow].stream
  
  }
  implicit val read: Read[VproductmodelcatalogdescriptionViewRow] =
    new Read[VproductmodelcatalogdescriptionViewRow](
      gets = List(
        (Get[ProductmodelId], Nullability.Nullable),
        (Get[Name], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[String], Nullability.Nullable),
        (Get[UUID], Nullability.Nullable),
        (Get[LocalDateTime], Nullability.Nullable)
      ),
      unsafeGet = (rs: ResultSet, i: Int) => VproductmodelcatalogdescriptionViewRow(
        productmodelid = Get[ProductmodelId].unsafeGetNullable(rs, i + 0),
        name = Get[Name].unsafeGetNullable(rs, i + 1),
        Summary = Get[String].unsafeGetNullable(rs, i + 2),
        manufacturer = Get[String].unsafeGetNullable(rs, i + 3),
        copyright = Get[String].unsafeGetNullable(rs, i + 4),
        producturl = Get[String].unsafeGetNullable(rs, i + 5),
        warrantyperiod = Get[String].unsafeGetNullable(rs, i + 6),
        warrantydescription = Get[String].unsafeGetNullable(rs, i + 7),
        noofyears = Get[String].unsafeGetNullable(rs, i + 8),
        maintenancedescription = Get[String].unsafeGetNullable(rs, i + 9),
        wheel = Get[String].unsafeGetNullable(rs, i + 10),
        saddle = Get[String].unsafeGetNullable(rs, i + 11),
        pedal = Get[String].unsafeGetNullable(rs, i + 12),
        bikeframe = Get[String].unsafeGetNullable(rs, i + 13),
        crankset = Get[String].unsafeGetNullable(rs, i + 14),
        pictureangle = Get[String].unsafeGetNullable(rs, i + 15),
        picturesize = Get[String].unsafeGetNullable(rs, i + 16),
        productphotoid = Get[String].unsafeGetNullable(rs, i + 17),
        material = Get[String].unsafeGetNullable(rs, i + 18),
        color = Get[String].unsafeGetNullable(rs, i + 19),
        productline = Get[String].unsafeGetNullable(rs, i + 20),
        style = Get[String].unsafeGetNullable(rs, i + 21),
        riderexperience = Get[String].unsafeGetNullable(rs, i + 22),
        rowguid = Get[UUID].unsafeGetNullable(rs, i + 23),
        modifieddate = Get[LocalDateTime].unsafeGetNullable(rs, i + 24)
      )
    )
  

}
