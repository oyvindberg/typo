/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package billofmaterials

import doobie.free.connection.ConnectionIO
import doobie.free.connection.delay
import fs2.Stream

class BillofmaterialsRepoMock(toRow: Function1[BillofmaterialsRowUnsaved, BillofmaterialsRow],
                              map: scala.collection.mutable.Map[BillofmaterialsId, BillofmaterialsRow] = scala.collection.mutable.Map.empty) extends BillofmaterialsRepo {
  override def delete(billofmaterialsid: BillofmaterialsId): ConnectionIO[Boolean] = {
    delay(map.remove(billofmaterialsid).isDefined)
  }
  override def insert(unsaved: BillofmaterialsRow): ConnectionIO[BillofmaterialsRow] = {
    delay {
      if (map.contains(unsaved.billofmaterialsid))
        sys.error(s"id ${unsaved.billofmaterialsid} already exists")
      else
        map.put(unsaved.billofmaterialsid, unsaved)
      unsaved
    }
  }
  override def insert(unsaved: BillofmaterialsRowUnsaved): ConnectionIO[BillofmaterialsRow] = {
    insert(toRow(unsaved))
  }
  override def selectAll: Stream[ConnectionIO, BillofmaterialsRow] = {
    Stream.emits(map.values.toList)
  }
  override def selectById(billofmaterialsid: BillofmaterialsId): ConnectionIO[Option[BillofmaterialsRow]] = {
    delay(map.get(billofmaterialsid))
  }
  override def selectByIds(billofmaterialsids: Array[BillofmaterialsId]): Stream[ConnectionIO, BillofmaterialsRow] = {
    Stream.emits(billofmaterialsids.flatMap(map.get).toList)
  }
  override def update(row: BillofmaterialsRow): ConnectionIO[Boolean] = {
    delay {
      map.get(row.billofmaterialsid) match {
        case Some(`row`) => false
        case Some(_) =>
          map.put(row.billofmaterialsid, row)
          true
        case None => false
      }
    }
  }
  override def upsert(unsaved: BillofmaterialsRow): ConnectionIO[BillofmaterialsRow] = {
    delay {
      map.put(unsaved.billofmaterialsid, unsaved)
      unsaved
    }
  }
}
