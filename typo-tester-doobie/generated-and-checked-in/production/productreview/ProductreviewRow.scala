/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package production
package productreview

import adventureworks.TypoLocalDateTime
import adventureworks.production.product.ProductId
import adventureworks.public.Name
import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class ProductreviewRow(
  /** Primary key for ProductReview records. */
  productreviewid: ProductreviewId,
  /** Product identification number. Foreign key to Product.ProductID.
      Points to [[product.ProductRow.productid]] */
  productid: ProductId,
  /** Name of the reviewer. */
  reviewername: Name,
  /** Date review was submitted. */
  reviewdate: TypoLocalDateTime,
  /** Reviewer's e-mail address. */
  emailaddress: /* max 50 chars */ String,
  /** Product rating given by the reviewer. Scale is 1 to 5 with 5 as the highest rating. */
  rating: Int,
  /** Reviewer's comments */
  comments: Option[/* max 3850 chars */ String],
  modifieddate: TypoLocalDateTime
)

object ProductreviewRow {
  implicit val decoder: Decoder[ProductreviewRow] = Decoder.forProduct8[ProductreviewRow, ProductreviewId, ProductId, Name, TypoLocalDateTime, /* max 50 chars */ String, Int, Option[/* max 3850 chars */ String], TypoLocalDateTime]("productreviewid", "productid", "reviewername", "reviewdate", "emailaddress", "rating", "comments", "modifieddate")(ProductreviewRow.apply)
  implicit val encoder: Encoder[ProductreviewRow] = Encoder.forProduct8[ProductreviewRow, ProductreviewId, ProductId, Name, TypoLocalDateTime, /* max 50 chars */ String, Int, Option[/* max 3850 chars */ String], TypoLocalDateTime]("productreviewid", "productid", "reviewername", "reviewdate", "emailaddress", "rating", "comments", "modifieddate")(x => (x.productreviewid, x.productid, x.reviewername, x.reviewdate, x.emailaddress, x.rating, x.comments, x.modifieddate))
  implicit val read: Read[ProductreviewRow] = new Read[ProductreviewRow](
    gets = List(
      (Get[ProductreviewId], Nullability.NoNulls),
      (Get[ProductId], Nullability.NoNulls),
      (Get[Name], Nullability.NoNulls),
      (Get[TypoLocalDateTime], Nullability.NoNulls),
      (Get[/* max 50 chars */ String], Nullability.NoNulls),
      (Get[Int], Nullability.NoNulls),
      (Get[/* max 3850 chars */ String], Nullability.Nullable),
      (Get[TypoLocalDateTime], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => ProductreviewRow(
      productreviewid = Get[ProductreviewId].unsafeGetNonNullable(rs, i + 0),
      productid = Get[ProductId].unsafeGetNonNullable(rs, i + 1),
      reviewername = Get[Name].unsafeGetNonNullable(rs, i + 2),
      reviewdate = Get[TypoLocalDateTime].unsafeGetNonNullable(rs, i + 3),
      emailaddress = Get[/* max 50 chars */ String].unsafeGetNonNullable(rs, i + 4),
      rating = Get[Int].unsafeGetNonNullable(rs, i + 5),
      comments = Get[/* max 3850 chars */ String].unsafeGetNullable(rs, i + 6),
      modifieddate = Get[TypoLocalDateTime].unsafeGetNonNullable(rs, i + 7)
    )
  )
}
