name: Build and publish Docker image for integration tests

on:
  push:
    branches: [ 'main' ]
    paths:
      - 'docker/**'
      - '.github/workflows/docker.yml'
  pull_request:
    branches: [ 'main' ]
    paths:
      - 'docker/**'
      - '.github/workflows/docker.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/typo-postgres

jobs:
  build-postgres-image:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        postgres-version: [12, 13, 14, 15, 16]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ matrix.postgres-version }}
          tags: type=raw,value=latest,enable=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: PG_MAJOR=${{ matrix.postgres-version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
