/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded
package compositepk
package person

import typo.dsl.Path
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.IdField
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait PersonFields {
  def one: IdField[Long, PersonRow]
  def two: IdField[Option[String], PersonRow]
  def name: OptField[String, PersonRow]
}

object PersonFields {
  lazy val structure: Relation[PersonFields, PersonRow] =
    new Impl(Nil)
    
  private final class Impl(val _path: List[Path])
    extends Relation[PersonFields, PersonRow] {
  
    override lazy val fields: PersonFields = new PersonFields {
      override def one = IdField[Long, PersonRow](_path, "one", None, Some("int8"), x => x.one, (row, value) => row.copy(one = value))
      override def two = IdField[Option[String], PersonRow](_path, "two", None, None, x => x.two, (row, value) => row.copy(two = value))
      override def name = OptField[String, PersonRow](_path, "name", None, None, x => x.name, (row, value) => row.copy(name = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, PersonRow]] =
      List[FieldLikeNoHkt[?, PersonRow]](fields.one, fields.two, fields.name)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
