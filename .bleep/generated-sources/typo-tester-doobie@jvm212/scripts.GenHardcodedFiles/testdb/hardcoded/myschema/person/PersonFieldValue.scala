/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded
package myschema
package person

import testdb.hardcoded.myschema.Number
import testdb.hardcoded.myschema.Sector
import testdb.hardcoded.myschema.football_club.FootballClubId
import testdb.hardcoded.myschema.marital_status.MaritalStatusId

sealed abstract class PersonFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class PersonFieldValue[T](name: String, value: T) extends PersonFieldOrIdValue(name, value)

object PersonFieldValue {
  case class id(override val value: PersonId) extends PersonFieldOrIdValue("id", value)
  case class favouriteFootballClubId(override val value: FootballClubId) extends PersonFieldValue("favourite_football_club_id", value)
  case class name(override val value: /* max 100 chars */ String) extends PersonFieldValue("name", value)
  case class nickName(override val value: Option[/* max 30 chars */ String]) extends PersonFieldValue("nick_name", value)
  case class blogUrl(override val value: Option[/* max 100 chars */ String]) extends PersonFieldValue("blog_url", value)
  case class email(override val value: /* max 254 chars */ String) extends PersonFieldValue("email", value)
  case class phone(override val value: /* max 8 chars */ String) extends PersonFieldValue("phone", value)
  case class likesPizza(override val value: Boolean) extends PersonFieldValue("likes_pizza", value)
  case class maritalStatusId(override val value: MaritalStatusId) extends PersonFieldValue("marital_status_id", value)
  case class workEmail(override val value: Option[/* max 254 chars */ String]) extends PersonFieldValue("work_email", value)
  case class sector(override val value: Sector) extends PersonFieldValue("sector", value)
  case class favoriteNumber(override val value: Number) extends PersonFieldValue("favorite_number", value)
}
