/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded
package myschema
package marital_status

import doobie.enumerated.Nullability
import doobie.util.Get
import doobie.util.Read
import io.circe.Decoder
import io.circe.Encoder
import java.sql.ResultSet

case class MaritalStatusRow(
  id: MaritalStatusId
)

object MaritalStatusRow {
  implicit val decoder: Decoder[MaritalStatusRow] = Decoder.forProduct1[MaritalStatusRow, MaritalStatusId]("id")(MaritalStatusRow.apply)
  implicit val encoder: Encoder[MaritalStatusRow] = Encoder.forProduct1[MaritalStatusRow, MaritalStatusId]("id")(x => (x.id))
  implicit val read: Read[MaritalStatusRow] = new Read[MaritalStatusRow](
    gets = List(
      (Get[MaritalStatusId], Nullability.NoNulls)
    ),
    unsafeGet = (rs: ResultSet, i: Int) => MaritalStatusRow(
      id = Get[MaritalStatusId].unsafeGetNonNullable(rs, i + 0)
    )
  )
}
