/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded



import org.postgresql.PGConnection
import org.postgresql.util.PSQLException

import java.sql.Connection
import scala.util.control.NonFatal

object streamingInsert {
  def apply[T: Text](copyCommand: String, batchSize: Int, rows: Iterator[T])(implicit c: Connection): Long = {
    val copyManager = c.unwrap(classOf[PGConnection]).getCopyAPI

    val in = copyManager.copyIn(copyCommand)

    try {
      rows.grouped(batchSize).foreach { group =>
        val sb = new StringBuilder
        group.foreach { t =>
          Text[T].unsafeEncode(t, sb)
          sb ++= "\n"
        }
        val bytes = sb.result().getBytes("UTF-8")
        in.writeToCopy(bytes, 0, bytes.length)
      }
      in.endCopy()
    } catch {
      case NonFatal(th) =>
        try in.cancelCopy()
        catch {
          case x: PSQLException if x.getMessage == "Tried to cancel an inactive copy operation" => // ignore
        }
        throw th
    }
  }
}
