/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded
package myschema
package football_club

import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import scala.collection.immutable.ListMap
import scala.util.Try

case class FootballClubRow(
  id: FootballClubId,
  name: /* max 100 chars */ String
)

object FootballClubRow {
  implicit val reads: Reads[FootballClubRow] = Reads[FootballClubRow](json => JsResult.fromTry(
      Try(
        FootballClubRow(
          id = json.\("id").as[FootballClubId],
          name = json.\("name").as[/* max 100 chars */ String]
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[FootballClubRow] = RowParser[FootballClubRow] { row =>
    Success(
      FootballClubRow(
        id = row[FootballClubId](idx + 0),
        name = row[/* max 100 chars */ String](idx + 1)
      )
    )
  }
  implicit val writes: OWrites[FootballClubRow] = OWrites[FootballClubRow](o =>
    new JsObject(ListMap[String, JsValue](
      "id" -> Json.toJson(o.id),
      "name" -> Json.toJson(o.name)
    ))
  )
}
