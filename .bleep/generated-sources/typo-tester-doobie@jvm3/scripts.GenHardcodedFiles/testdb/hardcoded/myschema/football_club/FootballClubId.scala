/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded
package myschema
package football_club

import doobie.Meta
import io.circe.Decoder
import io.circe.Encoder

/** Type for the primary key of table `myschema.football_club` */
case class FootballClubId(value: Long) extends AnyVal
object FootballClubId {
  implicit val ordering: Ordering[FootballClubId] = Ordering.by(_.value)
  implicit val encoder: Encoder[FootballClubId] =
    Encoder[Long].contramap(_.value)
  implicit val decoder: Decoder[FootballClubId] =
    Decoder[Long].map(FootballClubId(_))
  implicit val metaArray: Meta[Array[FootballClubId]] = Meta[Array[Long]].imap(_.map(FootballClubId.apply))(_.map(_.value))
  implicit val meta: Meta[FootballClubId] = Meta[Long].imap(FootballClubId.apply)(_.value)
}
