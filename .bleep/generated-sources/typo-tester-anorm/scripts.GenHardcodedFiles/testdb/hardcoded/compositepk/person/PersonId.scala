/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb
package hardcoded
package compositepk
package person

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

/** Type for the composite primary key of table `compositepk.person` */
case class PersonId(one: Long, two: Option[String])
object PersonId {
  implicit def ordering: Ordering[PersonId] = Ordering.by(x => (x.one, x.two))
  implicit val oFormat: OFormat[PersonId] = new OFormat[PersonId]{
    override def writes(o: PersonId): JsObject =
      Json.obj(
        "one" -> o.one,
        "two" -> o.two
      )
  
    override def reads(json: JsValue): JsResult[PersonId] = {
      JsResult.fromTry(
        Try(
          PersonId(
            one = json.\("one").as[Long],
            two = json.\("two").toOption.map(_.as[String])
          )
        )
      )
    }
  }
}
