/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package information_schema
package key_column_usage

import typo.generated.information_schema.CardinalNumber
import typo.generated.information_schema.SqlIdentifier

sealed abstract class KeyColumnUsageViewFieldOrIdValue[T](val name: String, val value: T)
sealed abstract class KeyColumnUsageViewFieldValue[T](name: String, value: T) extends KeyColumnUsageViewFieldOrIdValue(name, value)

object KeyColumnUsageViewFieldValue {
  case class constraintCatalog(override val value: Option[SqlIdentifier]) extends KeyColumnUsageViewFieldValue("constraint_catalog", value)
  case class constraintSchema(override val value: Option[SqlIdentifier]) extends KeyColumnUsageViewFieldValue("constraint_schema", value)
  case class constraintName(override val value: Option[SqlIdentifier]) extends KeyColumnUsageViewFieldValue("constraint_name", value)
  case class tableCatalog(override val value: Option[SqlIdentifier]) extends KeyColumnUsageViewFieldValue("table_catalog", value)
  case class tableSchema(override val value: Option[SqlIdentifier]) extends KeyColumnUsageViewFieldValue("table_schema", value)
  case class tableName(override val value: Option[SqlIdentifier]) extends KeyColumnUsageViewFieldValue("table_name", value)
  case class columnName(override val value: Option[SqlIdentifier]) extends KeyColumnUsageViewFieldValue("column_name", value)
  case class ordinalPosition(override val value: Option[CardinalNumber]) extends KeyColumnUsageViewFieldValue("ordinal_position", value)
  case class positionInUniqueConstraint(override val value: Option[CardinalNumber]) extends KeyColumnUsageViewFieldValue("position_in_unique_constraint", value)
}
