/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package custom
package constraints

import anorm.Column
import anorm.RowParser
import anorm.Success
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.OWrites
import play.api.libs.json.Reads
import play.api.libs.json.Writes
import scala.collection.immutable.ListMap
import scala.util.Try

/** SQL file: custom/constraints.sql */
case class ConstraintsSqlRow(
  /** Points to [[information_schema.table_constraints.TableConstraintsViewRow.tableSchema]]
      debug: {"baseColumnName":"table_schema","baseRelationName":"information_schema.table_constraints","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"parsedColumnName":{"name":"table_schema","originalName":"table_schema"},"columnName":"table_schema","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_constraints"} */
  tableSchema: Option[/* nullability unknown */ String],
  /** Points to [[information_schema.table_constraints.TableConstraintsViewRow.tableName]]
      debug: {"baseColumnName":"table_name","baseRelationName":"information_schema.table_constraints","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"parsedColumnName":{"name":"table_name","originalName":"table_name"},"columnName":"table_name","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_constraints"} */
  tableName: Option[/* nullability unknown */ String],
  /** debug: {"columnClassName":"java.sql.Array","columnDisplaySize":2147483647,"parsedColumnName":{"name":"columns","originalName":"columns"},"columnName":"columns","columnType":"Array","columnTypeName":"_name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"NullableUnknown","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0} */
  columns: /* nullability unknown */ Option[Array[String]],
  /** Points to [[information_schema.table_constraints.TableConstraintsViewRow.constraintName]]
      debug: {"baseColumnName":"constraint_name","baseRelationName":"information_schema.table_constraints","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"parsedColumnName":{"name":"constraint_name","originalName":"constraint_name"},"columnName":"constraint_name","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"table_constraints"} */
  constraintName: Option[/* nullability unknown */ String],
  /** Points to [[information_schema.check_constraints.CheckConstraintsViewRow.checkClause]]
      debug: {"baseColumnName":"check_clause","baseRelationName":"information_schema.check_constraints","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"parsedColumnName":{"name":"check_clause","originalName":"check_clause"},"columnName":"check_clause","columnType":"VarChar","columnTypeName":"varchar","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"check_constraints"} */
  checkClause: Option[/* nullability unknown */ String]
)

object ConstraintsSqlRow {
  implicit lazy val reads: Reads[ConstraintsSqlRow] = Reads[ConstraintsSqlRow](json => JsResult.fromTry(
      Try(
        ConstraintsSqlRow(
          tableSchema = json.\("table_schema").toOption.map(_.as(Reads.StringReads)),
          tableName = json.\("table_name").toOption.map(_.as(Reads.StringReads)),
          columns = json.\("columns").toOption.map(_.as(Reads.ArrayReads[String](using Reads.StringReads, implicitly))),
          constraintName = json.\("constraint_name").toOption.map(_.as(Reads.StringReads)),
          checkClause = json.\("check_clause").toOption.map(_.as(Reads.StringReads))
        )
      )
    ),
  )
  def rowParser(idx: Int): RowParser[ConstraintsSqlRow] = RowParser[ConstraintsSqlRow] { row =>
    Success(
      ConstraintsSqlRow(
        tableSchema = row(idx + 0)(Column.columnToOption(Column.columnToString)),
        tableName = row(idx + 1)(Column.columnToOption(Column.columnToString)),
        columns = row(idx + 2)(Column.columnToOption(Column.columnToArray[String](Column.columnToString, implicitly))),
        constraintName = row(idx + 3)(Column.columnToOption(Column.columnToString)),
        checkClause = row(idx + 4)(Column.columnToOption(Column.columnToString))
      )
    )
  }
  implicit lazy val writes: OWrites[ConstraintsSqlRow] = OWrites[ConstraintsSqlRow](o =>
    new JsObject(ListMap[String, JsValue](
      "table_schema" -> Writes.OptionWrites(Writes.StringWrites).writes(o.tableSchema),
      "table_name" -> Writes.OptionWrites(Writes.StringWrites).writes(o.tableName),
      "columns" -> Writes.OptionWrites(Writes.arrayWrites[String](using implicitly, Writes.StringWrites)).writes(o.columns),
      "constraint_name" -> Writes.OptionWrites(Writes.StringWrites).writes(o.constraintName),
      "check_clause" -> Writes.OptionWrites(Writes.StringWrites).writes(o.checkClause)
    ))
  )
}
