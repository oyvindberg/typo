/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package custom
package comments

import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try
import typo.generated.information_schema.SqlIdentifier

case class CommentsSqlRow(
  /** Points to [[information_schema.columns.ColumnsViewRow.tableSchema]]
      debug: {"baseColumnName":"table_schema","baseRelationName":"information_schema.columns","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"table_schema","columnName":"table_schema","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"columns"} */
  tableSchema: Option[SqlIdentifier],
  /** Points to [[information_schema.columns.ColumnsViewRow.tableName]]
      debug: {"baseColumnName":"table_name","baseRelationName":"information_schema.columns","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"table_name","columnName":"table_name","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"columns"} */
  tableName: Option[SqlIdentifier],
  /** Points to [[information_schema.columns.ColumnsViewRow.columnName]]
      debug: {"baseColumnName":"column_name","baseRelationName":"information_schema.columns","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"column_name","columnName":"column_name","columnType":"VarChar","columnTypeName":"name","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"Nullable","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"columns"} */
  columnName: Option[SqlIdentifier],
  /** Points to [[pg_catalog.pg_description.PgDescriptionRow.description]]
      debug: {"baseColumnName":"description","baseRelationName":"pg_catalog.pg_description","columnClassName":"java.lang.String","columnDisplaySize":2147483647,"columnLabel":"description","columnName":"description","columnType":"VarChar","columnTypeName":"text","format":0,"isAutoIncrement":false,"isCaseSensitive":true,"isCurrency":false,"isDefinitelyWritable":false,"isNullable":"NoNulls","isReadOnly":false,"isSearchable":true,"isSigned":false,"isWritable":true,"precision":2147483647,"scale":0,"tableName":"pg_description"} */
  description: String
)

object CommentsSqlRow {
  implicit val oFormat: OFormat[CommentsSqlRow] = new OFormat[CommentsSqlRow]{
    override def writes(o: CommentsSqlRow): JsObject =
      Json.obj(
        "table_schema" -> o.tableSchema,
        "table_name" -> o.tableName,
        "column_name" -> o.columnName,
        "description" -> o.description
      )
  
    override def reads(json: JsValue): JsResult[CommentsSqlRow] = {
      JsResult.fromTry(
        Try(
          CommentsSqlRow(
            tableSchema = json.\("table_schema").toOption.map(_.as[SqlIdentifier]),
            tableName = json.\("table_name").toOption.map(_.as[SqlIdentifier]),
            columnName = json.\("column_name").toOption.map(_.as[SqlIdentifier]),
            description = json.\("description").as[String]
          )
        )
      )
    }
  }
}
