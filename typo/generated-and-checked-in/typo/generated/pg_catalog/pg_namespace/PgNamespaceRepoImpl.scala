/**
 * File has been automatically generated by `typo` for internal use.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 *
 * (If you're developing `typo` and want to change it: run `bleep generate-sources`)
 */
package typo
package generated
package pg_catalog
package pg_namespace

import anorm.ParameterValue
import anorm.SqlStringInterpolation
import anorm.ToStatement
import java.sql.Connection
import typo.generated.customtypes.TypoAclItem

class PgNamespaceRepoImpl extends PgNamespaceRepo {
  override def insert(unsaved: PgNamespaceRow)(implicit c: Connection): PgNamespaceRow = {
    SQL"""insert into pg_catalog.pg_namespace("oid", "nspname", "nspowner", "nspacl")
          values (${ParameterValue(unsaved.oid, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.nspname, null, ToStatement.stringToStatement)}::name, ${ParameterValue(unsaved.nspowner, null, ToStatement.longToStatement)}::oid, ${ParameterValue(unsaved.nspacl, null, ToStatement.optionToStatement(TypoAclItem.arrayToStatement, typo.generated.arrayParameterMetaData(TypoAclItem.parameterMetadata)))}::aclitem[])
          returning "oid", "nspname", "nspowner", "nspacl"
       """
      .executeInsert(PgNamespaceRow.rowParser(1).single)
    
  }
  override def insertStreaming(unsaved: Iterator[PgNamespaceRow], batchSize: Int = 10000)(implicit c: Connection): Long = {
    streamingInsert(s"""COPY pg_catalog.pg_namespace("oid", "nspname", "nspowner", "nspacl") FROM STDIN""", batchSize, unsaved)(PgNamespaceRow.text, c)
  }
  override def selectAll(implicit c: Connection): List[PgNamespaceRow] = {
    SQL"""select "oid", "nspname", "nspowner", "nspacl"
          from pg_catalog.pg_namespace
       """.as(PgNamespaceRow.rowParser(1).*)
  }
}
